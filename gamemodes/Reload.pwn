#include <a_samp>
#include <a_objects>
#include <a_players>
#include <dudb>
#include <c_vehicleinfo>
#include <string>

//cores
#define COR_VERDE             0x33AA33AA
#define COR_VERDE_ESCURO      0x336600AA
#define COR_VERMELHO          0xDD0000FF
#define COR_AMARELO_CLARO     0xF0E68CAA
#define COR_AMARELO_SCLARO    0xFFFFCCAA
#define COR_AMARELO           0xFFFF00AA
#define COR_BRANCO            0xFFFFFFAA
#define COR_CINZA             0xAFAFAFAA
#define COR_LARANJA           0xFF9900AA
#define COR_PRETO             0x000000AA
#define COR_ROSA              0xFF00FFAA
#define COR_AZUL              0x0099FFAA
#define COR_AZUL_ESCURO       0x6600CCAA
#define COR_AZUL_CLARO        0xDBDBFFFF

//cores das profissões
#define COR_DESEMPREGADO       0xCBCBCBAA
#define COR_ENTREGADOR_PIZZA   0xFFF297AA
#define COR_BARMAN             0xB2FB92AA
#define COR_SORVETEIRO         0xFF91ECAA
#define COR_VENDEDOR_LANCHES   0xBDD94CFF
#define COR_PARAMEDICO         0xFF9191FF
#define COR_INSTRUTOR          0xFF7200FF
#define COR_FRENTISTA          0x662228FF
#define COR_TAXISTA            0xFFFC00AA
#define COR_MOTO_TAXI          0xC3C105AA
#define COR_TAXI_AEREO         0xC6C55EAA
#define COR_SEQUESTRADOR       0xFF5A00AA
#define COR_ASSASSINO          0xD22402AA
#define COR_ASSALTANTE         0xFE684BFF
#define COR_LADRAO_CARROS      0xCE2A2AFF
#define COR_TRAFICANTE         0xD94242FF
#define COR_VENDEDOR_ARMAS     0xAC5050FF
#define COR_CACADOR            0xAB2DCFAA
#define COR_PESCADOR           0xE89AFFAA
#define COR_AGRICULTOR         0x9AFFDDAA
#define COR_COP_CIVIL          0x9EB3FFAA
#define COR_COP_ELITE          0x4C62B3AA
#define COR_COP_RODOVIARIO     0x4970FFAA
#define COR_DELEGADO           0x0024ACAA
#define COR_JUIZ               0x7585C0AA
#define COR_NARCOTICOS         0xD7DFFFAA
#define COR_POLICIA_FLORESTAL  0x00FFEAFF
#define COR_IBAMA              0x04AB6EAA
#define COR_EXERCITO           0x1B7A01AA
#define COR_ADVOGADO           0x5CFFFDAA
#define COR_SEGURANÇA          0x81ABABAA
#define COR_MOTORISTA          0x2CCC6CAA
#define COR_MOTORISTA_ONIBUS   0x4A7E62AA
#define COR_MENDINGO           0xC19100AA
#define COR_VENDEDOR           0xADFF0EAA
#define COR_CORRETOR           0x77913AAA
#define COR_SEGURADOR          0xEEFFC4AA
#define COR_JORNALISTA         0xFEFFFAAA
#define COR_CAMINHONEIRO       0xACAC00FF
#define COR_TRANSPORTE_GAS     0x444444FF
#define COR_CONFISCADOR_CARROS 0xF0E68CAA
//id's das Profissoes
#define DESEMPREGADO          1  // sim*
#define ENTREGADOR_PIZZA      2  // sim*
#define BARMAN                3  // sim*
#define SORVETEIRO            4  // sim*
#define VENDEDOR_LANCHE       5  // sim*
#define PARAMEDICO            6  // sim*
#define INSTRUTOR_DE_DIRECAO  7  // sim*
#define FRENTISTA             8  // sim*
#define TAXISTA               9  // sim*
#define MOTO_TAXI             10 // sim*
#define TAXI_AERIO            11 // sim*
#define SEQUESTRADOR          12 // sim*
#define ASSASSINO             13 // sim*
#define ASSALTANTE            14 // sim*
#define LADRAO_CARROS         15 // sim*
#define TRAFICANTE            16 // sim*
#define VENDEDOR_DE_ARMAS     17 // sim*
#define CACADOR               18 // sim*
#define PESCADOR              19 // sim*
#define AGRICULTOR            20 // sim*
#define COP_CIVIL             21 // sim*
#define COP_RODOVIARIO        22 // sim*
#define COP_ELITE             23 // sim*
#define DELEGADO              24 // sim*
#define JUIZ                  25 // sim*
#define NARCOTICOS            26 // sim*
#define POLICIA_FLORESTAL     27 // sim*
#define IBAMA                 28 // sim*
#define EXERCITO              29 // sim*
#define ADVOGADO              30 // sim*
#define SEGURANÇA             31 // sim*
#define MOTORISTA_PARTICULAR  32 // sim*
#define MOTORISTA_DE_ONIBUS   33 // nao
#define MENDINGO              34 // sim*
#define VENDEDOR_DE_CARROS    35 // sim*
#define CORRETOR              36 // sim*
#define SEGURADOR             37 // sim*
#define JORNALISTA            38 // sim*
#define CAMINHONEIRO          39 // sim*
#define TRANSPORTE_GAS        40 // sim*
#define LOCADOR_DE_CARROS     41 // sim*
#define CONFISCADOR_CARROS    42 // sim*


//static dos veiculos
static VEH_CABBIE = 438;
static VEH_TAXI = 420;
static VEH_BF400 = 581;
static VEH_MAVERICK = 487;
static VEH_LINERUN = 403;
static VEH_RDTRAIN = 515;
static VEH_TANKER = 514;

#define CallCost 1
#define fixchars(%1) for(new charfixloop=0;charfixloop<strlen(%1);charfixloop++)if(%1[charfixloop]<0)%1[charfixloop]+=256
#define dcmd(%1,%2,%3) if ((strcmp(%3, "/%1", true, %2+1) == 0)&&(((%3[%2+1]==0)&&(dcmd_%1(playerid,"")))||((%3[%2+1]==32)&&(dcmd_%1(playerid,%3[%2+2]))))) return 1

//profissao
new ProfName[][] = {
"Invalida",
"Desempregado",
"Entregador de Pizza",
"Barman",
"Sorveteiro",
"Vendedor de Lanches",
"Paramedico",
"Instrutor de Direção",
"Frentista",
"Taxista",
"Moto-Taxi",
"Taxi-Aerio",
"Sequestrador",
"Assassino",
"Assaltante",
"Ladrão de Carros",
"Traficante",
"Vendedor de Armas",
"Caçador",
"Pescador",
"Jornalsita",
"Policial Civil",
"Policial Rodoviario",
"S.W.A.T",
"Delegado",
"Juiz",
"Narcoticos",
"Policia Florestal",
"Ibama",
"Exercito",
"Advogado",
"Segurança",
"Motorista Particular",
"Motorista de Onibus",
"Mendigo",
"Vededor de Carros",
"Corretor de Imoveis",
"Segurador",
"Jornalista",
"Caminhoneiro",
"Transportador de Combustível"
};

/*//armas
new ArmaName[][] = {
"Invalido",
"Taco de Golf.",
"NiteStick.",
"KNife.",
"Bat.",
"Shovel.",
"PoolCue.",
"Katana.",
"Chainsaw.",
"Vibrador.",
"Vibrador.",
"Vibrador.",
"Vibrador.",
"Flor.",
"Cane.",
"Colt45.",
"45 com Silenciador.",
"Desert Eagle.",
"Shotgun.",
"Sawnoff.",
"Combat Shotgun.",
"Micro UZI.",
"MP5.",
"AK47.",
"M4.",
"Tec9.",
"FlameThrower.",
"Minigun.",
"Spray.",
"Extintor.",
"Paraquedas.",
"Katana."
};*/

//sorvetes
new SaborName[][] = {
"Invalido",
"Morango.",
"Leite Condensado.",
"Flocos.",
"Creme.",
"Doce de Leite.",
"Coco.",
"Tutti-frutti."
};

//bar
new RefeicaoName[][] = {
"Invalido",
"você pediu um X-Bacon. Bom Lanche!",
"você comeu um X-Burguer. Bom Lanche!",
"você comeu um X-Salada. Bom Lanche!",
"você comeu um Hotdog. Bom Lanche!",
"você comeu uma proção de Batata Frita.",
"você tomou uma lata refrigerante!",
"você bebeu uma lata de cerveja! Beba com moderação.",
"você bebeu um copo de suco!"
};

//vendedor de lanches
new LancheName[][] = {
"Invalido",
"Você comeu um X-Bacon. Bom Lanche!",
"Você comeu um X-Burguer. Bom Lanche!",
"Você comeu um X-Salada. Bom Lanche!",
"Você comeu um Hotdog. Bom Lanche!"
};

//ventregador pizza
new PizzaName[][] = {
"Invalido",
"4 Queijos",
"Clabresa",
"Frango Catupiry",
"Presunto e Queijo"
};

//Carteiras
new CarteiraName[][] = {
"Invalida",
"Terreste",
"Aeria",
"Nautica"
};
enum zoneinfo {
	zone_name[27],
    Float:zone_minx,
    Float:zone_miny,
    Float:zone_minz,
    Float:zone_maxx,
    Float:zone_maxy,
    Float:zone_maxz
}

new Float:zones[][zoneinfo] = {
{ "'The Big Ear'",                -410.00,  1403.30,    -3.00,  -137.90,  1681.20,   200.00},
{ "Aldea Malvada",               -1372.10,  2498.50,     0.00, -1277.50,  2615.30,   200.00},
{ "Angel Pine",                  -2324.90, -2584.20,    -6.10, -1964.20, -2212.10,   200.00},
{ "Arco del Oeste",               -901.10,  2221.80,     0.00,  -592.00,  2571.90,   200.00},
{ "Avispa Country Club",         -2646.40,  -355.40,     0.00, -2270.00,  -222.50,   200.00},
{ "Avispa Country Club",         -2831.80,  -430.20,    -6.10, -2646.40,  -222.50,   200.00},
{ "Avispa Country Club",         -2361.50,  -417.10,     0.00, -2270.00,  -355.40,   200.00},
{ "Avispa Country Club",         -2667.80,  -302.10,   -28.80, -2646.40,  -262.30,    71.10},
{ "Avispa Country Club",         -2470.00,  -355.40,     0.00, -2270.00,  -318.40,    46.10},
{ "Avispa Country Club",         -2550.00,  -355.40,     0.00, -2470.00,  -318.40,    39.70},
{ "Back o Beyond",               -1166.90, -2641.10,     0.00,  -321.70, -1856.00,   200.00},
{ "Battery Point",               -2741.00,  1268.40,    -4.50, -2533.00,  1490.40,   200.00},
{ "Bayside",                     -2741.00,  2175.10,     0.00, -2353.10,  2722.70,   200.00},
{ "Bayside Marina",              -2353.10,  2275.70,     0.00, -2153.10,  2475.70,   200.00},
{ "Beacon Hill",                  -399.60, -1075.50,    -1.40,  -319.00,  -977.50,   198.50},
{ "Blackfield",                    964.30,  1203.20,   -89.00,  1197.30,  1403.20,   110.90},
{ "Blackfield",                    964.30,  1403.20,   -89.00,  1197.30,  1726.20,   110.90},
{ "Blackfield Chapel",            1375.60,   596.30,   -89.00,  1558.00,   823.20,   110.90},
{ "Blackfield Chapel",            1325.60,   596.30,   -89.00,  1375.60,   795.00,   110.90},
{ "Blackfield Intersection",      1197.30,  1044.60,   -89.00,  1277.00,  1163.30,   110.90},
{ "Blackfield Intersection",      1166.50,   795.00,   -89.00,  1375.60,  1044.60,   110.90},
{ "Blackfield Intersection",      1277.00,  1044.60,   -89.00,  1315.30,  1087.60,   110.90},
{ "Blackfield Intersection",      1375.60,   823.20,   -89.00,  1457.30,   919.40,   110.90},
{ "Blueberry",                     104.50,  -220.10,     2.30,   349.60,   152.20,   200.00},
{ "Blueberry",                      19.60,  -404.10,     3.80,   349.60,  -220.10,   200.00},
{ "Blueberry Acres",              -319.60,  -220.10,     0.00,   104.50,   293.30,   200.00},
{ "Caligula's Palace",            2087.30,  1543.20,   -89.00,  2437.30,  1703.20,   110.90},
{ "Caligula's Palace",            2137.40,  1703.20,   -89.00,  2437.30,  1783.20,   110.90},
{ "Calton Heights",              -2274.10,   744.10,    -6.10, -1982.30,  1358.90,   200.00},
{ "Chinatown",                   -2274.10,   578.30,    -7.60, -2078.60,   744.10,   200.00},
{ "City Hall",                   -2867.80,   277.40,    -9.10, -2593.40,   458.40,   200.00},
{ "Come-A-Lot",                   2087.30,   943.20,   -89.00,  2623.10,  1203.20,   110.90},
{ "Commerce",                     1323.90, -1842.20,   -89.00,  1701.90, -1722.20,   110.90},
{ "Commerce",                     1323.90, -1722.20,   -89.00,  1440.90, -1577.50,   110.90},
{ "Commerce",                     1370.80, -1577.50,   -89.00,  1463.90, -1384.90,   110.90},
{ "Commerce",                     1463.90, -1577.50,   -89.00,  1667.90, -1430.80,   110.90},
{ "Commerce",                     1583.50, -1722.20,   -89.00,  1758.90, -1577.50,   110.90},
{ "Commerce",                     1667.90, -1577.50,   -89.00,  1812.60, -1430.80,   110.90},
{ "Conference Center",            1046.10, -1804.20,   -89.00,  1323.90, -1722.20,   110.90},
{ "Conference Center",            1073.20, -1842.20,   -89.00,  1323.90, -1804.20,   110.90},
{ "Cranberry Station",           -2007.80,    56.30,     0.00, -1922.00,   224.70,   100.00},
{ "Creek",                        2749.90,  1937.20,   -89.00,  2921.60,  2669.70,   110.90},
{ "Dillimore",                     580.70,  -674.80,    -9.50,   861.00,  -404.70,   200.00},
{ "Doherty",                     -2270.00,  -324.10,    -0.00, -1794.90,  -222.50,   200.00},
{ "Doherty",                     -2173.00,  -222.50,    -0.00, -1794.90,   265.20,   200.00},
{ "Downtown",                    -1982.30,   744.10,    -6.10, -1871.70,  1274.20,   200.00},
{ "Downtown",                    -1871.70,  1176.40,    -4.50, -1620.30,  1274.20,   200.00},
{ "Downtown",                    -1700.00,   744.20,    -6.10, -1580.00,  1176.50,   200.00},
{ "Downtown",                    -1580.00,   744.20,    -6.10, -1499.80,  1025.90,   200.00},
{ "Downtown",                    -2078.60,   578.30,    -7.60, -1499.80,   744.20,   200.00},
{ "Downtown",                    -1993.20,   265.20,    -9.10, -1794.90,   578.30,   200.00},
{ "Downtown Los Santos",          1463.90, -1430.80,   -89.00,  1724.70, -1290.80,   110.90},
{ "Downtown Los Santos",          1724.70, -1430.80,   -89.00,  1812.60, -1250.90,   110.90},
{ "Downtown Los Santos",          1463.90, -1290.80,   -89.00,  1724.70, -1150.80,   110.90},
{ "Downtown Los Santos",          1370.80, -1384.90,   -89.00,  1463.90, -1170.80,   110.90},
{ "Downtown Los Santos",          1724.70, -1250.90,   -89.00,  1812.60, -1150.80,   110.90},
{ "Downtown Los Santos",          1370.80, -1170.80,   -89.00,  1463.90, -1130.80,   110.90},
{ "Downtown Los Santos",          1378.30, -1130.80,   -89.00,  1463.90, -1026.30,   110.90},
{ "Downtown Los Santos",          1391.00, -1026.30,   -89.00,  1463.90,  -926.90,   110.90},
{ "Downtown Los Santos",          1507.50, -1385.20,   110.90,  1582.50, -1325.30,   335.90},
{ "East Beach",                   2632.80, -1852.80,   -89.00,  2959.30, -1668.10,   110.90},
{ "East Beach",                   2632.80, -1668.10,   -89.00,  2747.70, -1393.40,   110.90},
{ "East Beach",                   2747.70, -1668.10,   -89.00,  2959.30, -1498.60,   110.90},
{ "East Beach",                   2747.70, -1498.60,   -89.00,  2959.30, -1120.00,   110.90},
{ "East Los Santos",              2421.00, -1628.50,   -89.00,  2632.80, -1454.30,   110.90},
{ "East Los Santos",              2222.50, -1628.50,   -89.00,  2421.00, -1494.00,   110.90},
{ "East Los Santos",              2266.20, -1494.00,   -89.00,  2381.60, -1372.00,   110.90},
{ "East Los Santos",              2381.60, -1494.00,   -89.00,  2421.00, -1454.30,   110.90},
{ "East Los Santos",              2281.40, -1372.00,   -89.00,  2381.60, -1135.00,   110.90},
{ "East Los Santos",              2381.60, -1454.30,   -89.00,  2462.10, -1135.00,   110.90},
{ "East Los Santos",              2462.10, -1454.30,   -89.00,  2581.70, -1135.00,   110.90},
{ "Easter Basin",                -1794.90,   249.90,    -9.10, -1242.90,   578.30,   200.00},
{ "Easter Basin",                -1794.90,   -50.00,    -0.00, -1499.80,   249.90,   200.00},
{ "Easter Bay Airport",          -1499.80,   -50.00,    -0.00, -1242.90,   249.90,   200.00},
{ "Easter Bay Airport",          -1794.90,  -730.10,    -3.00, -1213.90,   -50.00,   200.00},
{ "Easter Bay Airport",          -1213.90,  -730.10,     0.00, -1132.80,   -50.00,   200.00},
{ "Easter Bay Airport",          -1242.90,   -50.00,     0.00, -1213.90,   578.30,   200.00},
{ "Easter Bay Airport",          -1213.90,   -50.00,    -4.50,  -947.90,   578.30,   200.00},
{ "Easter Bay Airport",          -1315.40,  -405.30,    15.40, -1264.40,  -209.50,    25.40},
{ "Easter Bay Airport",          -1354.30,  -287.30,    15.40, -1315.40,  -209.50,    25.40},
{ "Easter Bay Airport",          -1490.30,  -209.50,    15.40, -1264.40,  -148.30,    25.40},
{ "Easter Bay Chemicals",        -1132.80,  -768.00,     0.00,  -956.40,  -578.10,   200.00},
{ "Easter Bay Chemicals",        -1132.80,  -787.30,     0.00,  -956.40,  -768.00,   200.00},
{ "El Castillo del Diablo",       -464.50,  2217.60,     0.00,  -208.50,  2580.30,   200.00},
{ "El Castillo del Diablo",       -208.50,  2123.00,    -7.60,   114.00,  2337.10,   200.00},
{ "El Castillo del Diablo",       -208.50,  2337.10,     0.00,     8.40,  2487.10,   200.00},
{ "El Corona",                    1812.60, -2179.20,   -89.00,  1970.60, -1852.80,   110.90},
{ "El Corona",                    1692.60, -2179.20,   -89.00,  1812.60, -1842.20,   110.90},
{ "El Quebrados",                -1645.20,  2498.50,     0.00, -1372.10,  2777.80,   200.00},
{ "Esplanade East",              -1620.30,  1176.50,    -4.50, -1580.00,  1274.20,   200.00},
{ "Esplanade East",              -1580.00,  1025.90,    -6.10, -1499.80,  1274.20,   200.00},
{ "Esplanade East",              -1499.80,   578.30,   -79.60, -1339.80,  1274.20,    20.30},
{ "Esplanade North",             -2533.00,  1358.90,    -4.50, -1996.60,  1501.20,   200.00},
{ "Esplanade North",             -1996.60,  1358.90,    -4.50, -1524.20,  1592.50,   200.00},
{ "Esplanade North",             -1982.30,  1274.20,    -4.50, -1524.20,  1358.90,   200.00},
{ "Fallen Tree",                  -792.20,  -698.50,    -5.30,  -452.40,  -380.00,   200.00},
{ "Fallow Bridge",                 434.30,   366.50,     0.00,   603.00,   555.60,   200.00},
{ "Fern Ridge",                    508.10,  -139.20,     0.00,  1306.60,   119.50,   200.00},
{ "Financial",                   -1871.70,   744.10,    -6.10, -1701.30,  1176.40,   300.00},
{ "Fisher's Lagoon",              1916.90,  -233.30,  -100.00,  2131.70,    13.80,   200.00},
{ "Flint Intersection",           -187.70, -1596.70,   -89.00,    17.00, -1276.60,   110.90},
{ "Flint Range",                  -594.10, -1648.50,     0.00,  -187.70, -1276.60,   200.00},
{ "Fort Carson",                  -376.20,   826.30,    -3.00,   123.70,  1220.40,   200.00},
{ "Foster Valley",               -2270.00,  -430.20,    -0.00, -2178.60,  -324.10,   200.00},
{ "Foster Valley",               -2178.60,  -599.80,    -0.00, -1794.90,  -324.10,   200.00},
{ "Foster Valley",               -2178.60, -1115.50,     0.00, -1794.90,  -599.80,   200.00},
{ "Foster Valley",               -2178.60, -1250.90,     0.00, -1794.90, -1115.50,   200.00},
{ "Frederick Bridge",             2759.20,   296.50,     0.00,  2774.20,   594.70,   200.00},
{ "Gant Bridge",                 -2741.40,  1659.60,    -6.10, -2616.40,  2175.10,   200.00},
{ "Gant Bridge",                 -2741.00,  1490.40,    -6.10, -2616.40,  1659.60,   200.00},
{ "Ganton",                       2222.50, -1852.80,   -89.00,  2632.80, -1722.30,   110.90},
{ "Ganton",                       2222.50, -1722.30,   -89.00,  2632.80, -1628.50,   110.90},
{ "Garcia",                      -2411.20,  -222.50,    -0.00, -2173.00,   265.20,   200.00},
{ "Garcia",                      -2395.10,  -222.50,    -5.30, -2354.00,  -204.70,   200.00},
{ "Garver Bridge",               -1339.80,   828.10,   -89.00, -1213.90,  1057.00,   110.90},
{ "Garver Bridge",               -1213.90,   950.00,   -89.00, -1087.90,  1178.90,   110.90},
{ "Garver Bridge",               -1499.80,   696.40,  -179.60, -1339.80,   925.30,    20.30},
{ "Glen Park",                    1812.60, -1449.60,   -89.00,  1996.90, -1350.70,   110.90},
{ "Glen Park",                    1812.60, -1100.80,   -89.00,  1994.30,  -973.30,   110.90},
{ "Glen Park",                    1812.60, -1350.70,   -89.00,  2056.80, -1100.80,   110.90},
{ "Green Palms",                   176.50,  1305.40,    -3.00,   338.60,  1520.70,   200.00},
{ "Greenglass College",            964.30,  1044.60,   -89.00,  1197.30,  1203.20,   110.90},
{ "Greenglass College",            964.30,   930.80,   -89.00,  1166.50,  1044.60,   110.90},
{ "Hampton Barns",                 603.00,   264.30,     0.00,   761.90,   366.50,   200.00},
{ "Hankypanky Point",             2576.90,    62.10,     0.00,  2759.20,   385.50,   200.00},
{ "Harry Gold Parkway",           1777.30,   863.20,   -89.00,  1817.30,  2342.80,   110.90},
{ "Hashbury",                    -2593.40,  -222.50,    -0.00, -2411.20,    54.70,   200.00},
{ "Hilltop Farm",                  967.30,  -450.30,    -3.00,  1176.70,  -217.90,   200.00},
{ "Hunter Quarry",                 337.20,   710.80,  -115.20,   860.50,  1031.70,   203.70},
{ "Idlewood",                     1812.60, -1852.80,   -89.00,  1971.60, -1742.30,   110.90},
{ "Idlewood",                     1812.60, -1742.30,   -89.00,  1951.60, -1602.30,   110.90},
{ "Idlewood",                     1951.60, -1742.30,   -89.00,  2124.60, -1602.30,   110.90},
{ "Idlewood",                     1812.60, -1602.30,   -89.00,  2124.60, -1449.60,   110.90},
{ "Idlewood",                     2124.60, -1742.30,   -89.00,  2222.50, -1494.00,   110.90},
{ "Idlewood",                     1971.60, -1852.80,   -89.00,  2222.50, -1742.30,   110.90},
{ "Jefferson",                    1996.90, -1449.60,   -89.00,  2056.80, -1350.70,   110.90},
{ "Jefferson",                    2124.60, -1494.00,   -89.00,  2266.20, -1449.60,   110.90},
{ "Jefferson",                    2056.80, -1372.00,   -89.00,  2281.40, -1210.70,   110.90},
{ "Jefferson",                    2056.80, -1210.70,   -89.00,  2185.30, -1126.30,   110.90},
{ "Jefferson",                    2185.30, -1210.70,   -89.00,  2281.40, -1154.50,   110.90},
{ "Jefferson",                    2056.80, -1449.60,   -89.00,  2266.20, -1372.00,   110.90},
{ "Julius Thruway East",          2623.10,   943.20,   -89.00,  2749.90,  1055.90,   110.90},
{ "Julius Thruway East",          2685.10,  1055.90,   -89.00,  2749.90,  2626.50,   110.90},
{ "Julius Thruway East",          2536.40,  2442.50,   -89.00,  2685.10,  2542.50,   110.90},
{ "Julius Thruway East",          2625.10,  2202.70,   -89.00,  2685.10,  2442.50,   110.90},
{ "Julius Thruway North",         2498.20,  2542.50,   -89.00,  2685.10,  2626.50,   110.90},
{ "Julius Thruway North",         2237.40,  2542.50,   -89.00,  2498.20,  2663.10,   110.90},
{ "Julius Thruway North",         2121.40,  2508.20,   -89.00,  2237.40,  2663.10,   110.90},
{ "Julius Thruway North",         1938.80,  2508.20,   -89.00,  2121.40,  2624.20,   110.90},
{ "Julius Thruway North",         1534.50,  2433.20,   -89.00,  1848.40,  2583.20,   110.90},
{ "Julius Thruway North",         1848.40,  2478.40,   -89.00,  1938.80,  2553.40,   110.90},
{ "Julius Thruway North",         1704.50,  2342.80,   -89.00,  1848.40,  2433.20,   110.90},
{ "Julius Thruway North",         1377.30,  2433.20,   -89.00,  1534.50,  2507.20,   110.90},
{ "Julius Thruway South",         1457.30,   823.20,   -89.00,  2377.30,   863.20,   110.90},
{ "Julius Thruway South",         2377.30,   788.80,   -89.00,  2537.30,   897.90,   110.90},
{ "Julius Thruway West",          1197.30,  1163.30,   -89.00,  1236.60,  2243.20,   110.90},
{ "Julius Thruway West",          1236.60,  2142.80,   -89.00,  1297.40,  2243.20,   110.90},
{ "Juniper Hill",                -2533.00,   578.30,    -7.60, -2274.10,   968.30,   200.00},
{ "Juniper Hollow",              -2533.00,   968.30,    -6.10, -2274.10,  1358.90,   200.00},
{ "K.A.C.C. Military Fuels",      2498.20,  2626.50,   -89.00,  2749.90,  2861.50,   110.90},
{ "Kincaid Bridge",              -1339.80,   599.20,   -89.00, -1213.90,   828.10,   110.90},
{ "Kincaid Bridge",              -1213.90,   721.10,   -89.00, -1087.90,   950.00,   110.90},
{ "Kincaid Bridge",              -1087.90,   855.30,   -89.00,  -961.90,   986.20,   110.90},
{ "King's",                      -2329.30,   458.40,    -7.60, -1993.20,   578.30,   200.00},
{ "King's",                      -2411.20,   265.20,    -9.10, -1993.20,   373.50,   200.00},
{ "King's",                      -2253.50,   373.50,    -9.10, -1993.20,   458.40,   200.00},
{ "LVA Freight Depot",            1457.30,   863.20,   -89.00,  1777.40,  1143.20,   110.90},
{ "LVA Freight Depot",            1375.60,   919.40,   -89.00,  1457.30,  1203.20,   110.90},
{ "LVA Freight Depot",            1277.00,  1087.60,   -89.00,  1375.60,  1203.20,   110.90},
{ "LVA Freight Depot",            1315.30,  1044.60,   -89.00,  1375.60,  1087.60,   110.90},
{ "LVA Freight Depot",            1236.60,  1163.40,   -89.00,  1277.00,  1203.20,   110.90},
{ "Las Barrancas",                -926.10,  1398.70,    -3.00,  -719.20,  1634.60,   200.00},
{ "Las Brujas",                   -365.10,  2123.00,    -3.00,  -208.50,  2217.60,   200.00},
{ "Las Colinas",                  1994.30, -1100.80,   -89.00,  2056.80,  -920.80,   110.90},
{ "Las Colinas",                  2056.80, -1126.30,   -89.00,  2126.80,  -920.80,   110.90},
{ "Las Colinas",                  2185.30, -1154.50,   -89.00,  2281.40,  -934.40,   110.90},
{ "Las Colinas",                  2126.80, -1126.30,   -89.00,  2185.30,  -934.40,   110.90},
{ "Las Colinas",                  2747.70, -1120.00,   -89.00,  2959.30,  -945.00,   110.90},
{ "Las Colinas",                  2632.70, -1135.00,   -89.00,  2747.70,  -945.00,   110.90},
{ "Las Colinas",                  2281.40, -1135.00,   -89.00,  2632.70,  -945.00,   110.90},
{ "Las Payasadas",                -354.30,  2580.30,     2.00,  -133.60,  2816.80,   200.00},
{ "Aeroporto de Las Venturas",    1236.60,  1203.20,   -89.00,  1457.30,  1883.10,   110.90},
{ "Aeroporto de Las Venturas",    1457.30,  1203.20,   -89.00,  1777.30,  1883.10,   110.90},
{ "Aeroporto de Las Venturas",    1457.30,  1143.20,   -89.00,  1777.40,  1203.20,   110.90},
{ "Aeroporto de Las Venturas",    1515.80,  1586.40,   -12.50,  1729.90,  1714.50,    87.50},
{ "Last Dime Motel",              1823.00,   596.30,   -89.00,  1997.20,   823.20,   110.90},
{ "Leafy Hollow",                -1166.90, -1856.00,     0.00,  -815.60, -1602.00,   200.00},
{ "Lil' Probe Inn",                -90.20,  1286.80,    -3.00,   153.80,  1554.10,   200.00},
{ "Linden Side",                  2749.90,   943.20,   -89.00,  2923.30,  1198.90,   110.90},
{ "Linden Station",               2749.90,  1198.90,   -89.00,  2923.30,  1548.90,   110.90},
{ "Linden Station",               2811.20,  1229.50,   -39.50,  2861.20,  1407.50,    60.40},
{ "Little Mexico",                1701.90, -1842.20,   -89.00,  1812.60, -1722.20,   110.90},
{ "Little Mexico",                1758.90, -1722.20,   -89.00,  1812.60, -1577.50,   110.90},
{ "Los Flores",                   2581.70, -1454.30,   -89.00,  2632.80, -1393.40,   110.90},
{ "Los Flores",                   2581.70, -1393.40,   -89.00,  2747.70, -1135.00,   110.90},
{ "Aeroporto de Los Santos ",     1249.60, -2394.30,   -89.00,  1852.00, -2179.20,   110.90},
{ "Aeroporto de Los Santos ",     1852.00, -2394.30,   -89.00,  2089.00, -2179.20,   110.90},
{ "Aeroporto de Los Santos ",     1382.70, -2730.80,   -89.00,  2201.80, -2394.30,   110.90},
{ "Aeroporto de Los Santos ",     1974.60, -2394.30,   -39.00,  2089.00, -2256.50,    60.90},
{ "Aeroporto de Los Santos ",     1400.90, -2669.20,   -39.00,  2189.80, -2597.20,    60.90},
{ "Aeroporto de Los Santos ",     2051.60, -2597.20,   -39.00,  2152.40, -2394.30,    60.90},
{ "Marina",                        647.70, -1804.20,   -89.00,   851.40, -1577.50,   110.90},
{ "Marina",                        647.70, -1577.50,   -89.00,   807.90, -1416.20,   110.90},
{ "Marina",                        807.90, -1577.50,   -89.00,   926.90, -1416.20,   110.90},
{ "Market",                        787.40, -1416.20,   -89.00,  1072.60, -1310.20,   110.90},
{ "Market",                        952.60, -1310.20,   -89.00,  1072.60, -1130.80,   110.90},
{ "Market",                       1072.60, -1416.20,   -89.00,  1370.80, -1130.80,   110.90},
{ "Market",                        926.90, -1577.50,   -89.00,  1370.80, -1416.20,   110.90},
{ "Market Station",                787.40, -1410.90,   -34.10,   866.00, -1310.20,    65.80},
{ "Martin Bridge",                -222.10,   293.30,     0.00,  -122.10,   476.40,   200.00},
{ "Missionary Hill",             -2994.40,  -811.20,     0.00, -2178.60,  -430.20,   200.00},
{ "Montgomery",                   1119.50,   119.50,    -3.00,  1451.40,   493.30,   200.00},
{ "Montgomery",                   1451.40,   347.40,    -6.10,  1582.40,   420.80,   200.00},
{ "Montgomery Intersection",      1546.60,   208.10,     0.00,  1745.80,   347.40,   200.00},
{ "Montgomery Intersection",      1582.40,   347.40,     0.00,  1664.60,   401.70,   200.00},
{ "Mulholland",                   1414.00,  -768.00,   -89.00,  1667.60,  -452.40,   110.90},
{ "Mulholland",                   1281.10,  -452.40,   -89.00,  1641.10,  -290.90,   110.90},
{ "Mulholland",                   1269.10,  -768.00,   -89.00,  1414.00,  -452.40,   110.90},
{ "Mulholland",                   1357.00,  -926.90,   -89.00,  1463.90,  -768.00,   110.90},
{ "Mulholland",                   1318.10,  -910.10,   -89.00,  1357.00,  -768.00,   110.90},
{ "Mulholland",                   1169.10,  -910.10,   -89.00,  1318.10,  -768.00,   110.90},
{ "Mulholland",                    768.60,  -954.60,   -89.00,   952.60,  -860.60,   110.90},
{ "Mulholland",                    687.80,  -860.60,   -89.00,   911.80,  -768.00,   110.90},
{ "Mulholland",                    737.50,  -768.00,   -89.00,  1142.20,  -674.80,   110.90},
{ "Mulholland",                   1096.40,  -910.10,   -89.00,  1169.10,  -768.00,   110.90},
{ "Mulholland",                    952.60,  -937.10,   -89.00,  1096.40,  -860.60,   110.90},
{ "Mulholland",                    911.80,  -860.60,   -89.00,  1096.40,  -768.00,   110.90},
{ "Mulholland",                    861.00,  -674.80,   -89.00,  1156.50,  -600.80,   110.90},
{ "Mulholland Intersection",      1463.90, -1150.80,   -89.00,  1812.60,  -768.00,   110.90},
{ "North Rock",                   2285.30,  -768.00,     0.00,  2770.50,  -269.70,   200.00},
{ "Ocean Docks",                  2373.70, -2697.00,   -89.00,  2809.20, -2330.40,   110.90},
{ "Ocean Docks",                  2201.80, -2418.30,   -89.00,  2324.00, -2095.00,   110.90},
{ "Ocean Docks",                  2324.00, -2302.30,   -89.00,  2703.50, -2145.10,   110.90},
{ "Ocean Docks",                  2089.00, -2394.30,   -89.00,  2201.80, -2235.80,   110.90},
{ "Ocean Docks",                  2201.80, -2730.80,   -89.00,  2324.00, -2418.30,   110.90},
{ "Ocean Docks",                  2703.50, -2302.30,   -89.00,  2959.30, -2126.90,   110.90},
{ "Ocean Docks",                  2324.00, -2145.10,   -89.00,  2703.50, -2059.20,   110.90},
{ "Ocean Flats",                 -2994.40,   277.40,    -9.10, -2867.80,   458.40,   200.00},
{ "Ocean Flats",                 -2994.40,  -222.50,    -0.00, -2593.40,   277.40,   200.00},
{ "Ocean Flats",                 -2994.40,  -430.20,    -0.00, -2831.80,  -222.50,   200.00},
{ "Octane Springs",                338.60,  1228.50,     0.00,   664.30,  1655.00,   200.00},
{ "Old Venturas Strip",           2162.30,  2012.10,   -89.00,  2685.10,  2202.70,   110.90},
{ "Palisades",                   -2994.40,   458.40,    -6.10, -2741.00,  1339.60,   200.00},
{ "Palomino Creek",               2160.20,  -149.00,     0.00,  2576.90,   228.30,   200.00},
{ "Paradiso",                    -2741.00,   793.40,    -6.10, -2533.00,  1268.40,   200.00},
{ "Pershing Square",              1440.90, -1722.20,   -89.00,  1583.50, -1577.50,   110.90},
{ "Pilgrim",                      2437.30,  1383.20,   -89.00,  2624.40,  1783.20,   110.90},
{ "Pilgrim",                      2624.40,  1383.20,   -89.00,  2685.10,  1783.20,   110.90},
{ "Pilson Intersection",          1098.30,  2243.20,   -89.00,  1377.30,  2507.20,   110.90},
{ "Pirates in Men's Pants",       1817.30,  1469.20,   -89.00,  2027.40,  1703.20,   110.90},
{ "Playa del Seville",            2703.50, -2126.90,   -89.00,  2959.30, -1852.80,   110.90},
{ "Prickle Pine",                 1534.50,  2583.20,   -89.00,  1848.40,  2863.20,   110.90},
{ "Prickle Pine",                 1117.40,  2507.20,   -89.00,  1534.50,  2723.20,   110.90},
{ "Prickle Pine",                 1848.40,  2553.40,   -89.00,  1938.80,  2863.20,   110.90},
{ "Prickle Pine",                 1938.80,  2624.20,   -89.00,  2121.40,  2861.50,   110.90},
{ "Queens",                      -2533.00,   458.40,     0.00, -2329.30,   578.30,   200.00},
{ "Queens",                      -2593.40,    54.70,     0.00, -2411.20,   458.40,   200.00},
{ "Queens",                      -2411.20,   373.50,     0.00, -2253.50,   458.40,   200.00},
{ "Marina Tio Hitler MPA Race",   1558.00,   596.30,   -89.00,  1823.00,   823.20,   110.90},
{ "JT-R Loja de Carros",          2081.00,  1380.00,    10.00,  2239.00,  1425.00,   110.90},
{ "Redsands East",                1817.30,  2011.80,   -89.00,  2106.70,  2202.70,   110.90},
{ "Redsands East",                1817.30,  2202.70,   -89.00,  2011.90,  2342.80,   110.90},
{ "Redsands East",                1848.40,  2342.80,   -89.00,  2011.90,  2478.40,   110.90},
{ "Redsands West",                1236.60,  1883.10,   -89.00,  1777.30,  2142.80,   110.90},
{ "Redsands West",                1297.40,  2142.80,   -89.00,  1777.30,  2243.20,   110.90},
{ "Redsands West",                1377.30,  2243.20,   -89.00,  1704.50,  2433.20,   110.90},
{ "Redsands West",                1704.50,  2243.20,   -89.00,  1777.30,  2342.80,   110.90},
{ "Regular Tom",                  -405.70,  1712.80,    -3.00,  -276.70,  1892.70,   200.00},
{ "Richman",                       647.50, -1118.20,   -89.00,   787.40,  -954.60,   110.90},
{ "Richman",                       647.50,  -954.60,   -89.00,   768.60,  -860.60,   110.90},
{ "Richman",                       225.10, -1369.60,   -89.00,   334.50, -1292.00,   110.90},
{ "Richman",                       225.10, -1292.00,   -89.00,   466.20, -1235.00,   110.90},
{ "Richman",                        72.60, -1404.90,   -89.00,   225.10, -1235.00,   110.90},
{ "Richman",                        72.60, -1235.00,   -89.00,   321.30, -1008.10,   110.90},
{ "Richman",                       321.30, -1235.00,   -89.00,   647.50, -1044.00,   110.90},
{ "Richman",                       321.30, -1044.00,   -89.00,   647.50,  -860.60,   110.90},
{ "Richman",                       321.30,  -860.60,   -89.00,   687.80,  -768.00,   110.90},
{ "Richman",                       321.30,  -768.00,   -89.00,   700.70,  -674.80,   110.90},
{ "Robada Intersection",         -1119.00,  1178.90,   -89.00,  -862.00,  1351.40,   110.90},
{ "Roca Escalante",               2237.40,  2202.70,   -89.00,  2536.40,  2542.50,   110.90},
{ "Roca Escalante",               2536.40,  2202.70,   -89.00,  2625.10,  2442.50,   110.90},
{ "Rockshore East",               2537.30,   676.50,   -89.00,  2902.30,   943.20,   110.90},
{ "Rockshore West",               1997.20,   596.30,   -89.00,  2377.30,   823.20,   110.90},
{ "Rockshore West",               2377.30,   596.30,   -89.00,  2537.30,   788.80,   110.90},
{ "Rodeo",                          72.60, -1684.60,   -89.00,   225.10, -1544.10,   110.90},
{ "Rodeo",                          72.60, -1544.10,   -89.00,   225.10, -1404.90,   110.90},
{ "Rodeo",                         225.10, -1684.60,   -89.00,   312.80, -1501.90,   110.90},
{ "Rodeo",                         225.10, -1501.90,   -89.00,   334.50, -1369.60,   110.90},
{ "Rodeo",                         334.50, -1501.90,   -89.00,   422.60, -1406.00,   110.90},
{ "Rodeo",                         312.80, -1684.60,   -89.00,   422.60, -1501.90,   110.90},
{ "Rodeo",                         422.60, -1684.60,   -89.00,   558.00, -1570.20,   110.90},
{ "Rodeo",                         558.00, -1684.60,   -89.00,   647.50, -1384.90,   110.90},
{ "Rodeo",                         466.20, -1570.20,   -89.00,   558.00, -1385.00,   110.90},
{ "Rodeo",                         422.60, -1570.20,   -89.00,   466.20, -1406.00,   110.90},
{ "Rodeo",                         466.20, -1385.00,   -89.00,   647.50, -1235.00,   110.90},
{ "Rodeo",                         334.50, -1406.00,   -89.00,   466.20, -1292.00,   110.90},
{ "Royal Casino",                 2087.30,  1383.20,   -89.00,  2437.30,  1543.20,   110.90},
{ "San Andreas Sound",            2450.30,   385.50,  -100.00,  2759.20,   562.30,   200.00},
{ "Santa Flora",                 -2741.00,   458.40,    -7.60, -2533.00,   793.40,   200.00},
{ "Santa Maria Beach",             342.60, -2173.20,   -89.00,   647.70, -1684.60,   110.90},
{ "Santa Maria Beach",              72.60, -2173.20,   -89.00,   342.60, -1684.60,   110.90},
{ "Shady Cabin",                 -1632.80, -2263.40,    -3.00, -1601.30, -2231.70,   200.00},
{ "Shady Creeks",                -1820.60, -2643.60,    -8.00, -1226.70, -1771.60,   200.00},
{ "Shady Creeks",                -2030.10, -2174.80,    -6.10, -1820.60, -1771.60,   200.00},
{ "Sobell Rail Yards",            2749.90,  1548.90,   -89.00,  2923.30,  1937.20,   110.90},
{ "Spinybed",                     2121.40,  2663.10,   -89.00,  2498.20,  2861.50,   110.90},
{ "Starfish Casino",              2437.30,  1783.20,   -89.00,  2685.10,  2012.10,   110.90},
{ "Starfish Casino",              2437.30,  1858.10,   -39.00,  2495.00,  1970.80,    60.90},
{ "Starfish Casino",              2162.30,  1883.20,   -89.00,  2437.30,  2012.10,   110.90},
{ "Temple",                       1252.30, -1130.80,   -89.00,  1378.30, -1026.30,   110.90},
{ "Temple",                       1252.30, -1026.30,   -89.00,  1391.00,  -926.90,   110.90},
{ "Temple",                       1252.30,  -926.90,   -89.00,  1357.00,  -910.10,   110.90},
{ "Temple",                        952.60, -1130.80,   -89.00,  1096.40,  -937.10,   110.90},
{ "Temple",                       1096.40, -1130.80,   -89.00,  1252.30, -1026.30,   110.90},
{ "Temple",                       1096.40, -1026.30,   -89.00,  1252.30,  -910.10,   110.90},
{ "The Camel's Toe",              2087.30,  1203.20,   -89.00,  2640.40,  1383.20,   110.90},
{ "The Clown's Pocket",           2162.30,  1783.20,   -89.00,  2437.30,  1883.20,   110.90},
{ "The Emerald Isle",             2011.90,  2202.70,   -89.00,  2237.40,  2508.20,   110.90},
{ "The Farm",                    -1209.60, -1317.10,   114.90,  -908.10,  -787.30,   251.90},
{ "The Four Dragons Casino",      1817.30,   863.20,   -89.00,  2027.30,  1083.20,   110.90},
{ "The High Roller",              1817.30,  1283.20,   -89.00,  2027.30,  1469.20,   110.90},
{ "The Mako Span",                1664.60,   401.70,     0.00,  1785.10,   567.20,   200.00},
{ "The Panopticon",               -947.90,  -304.30,    -1.10,  -319.60,   327.00,   200.00},
{ "The Pink Swan",                1817.30,  1083.20,   -89.00,  2027.30,  1283.20,   110.90},
{ "The Sherman Dam",              -968.70,  1929.40,    -3.00,  -481.10,  2155.20,   200.00},
{ "The Strip",                    2027.40,   863.20,   -89.00,  2087.30,  1703.20,   110.90},
{ "The Strip",                    2106.70,  1863.20,   -89.00,  2162.30,  2202.70,   110.90},
{ "The Strip",                    2027.40,  1783.20,   -89.00,  2162.30,  1863.20,   110.90},
{ "The Strip",                    2027.40,  1703.20,   -89.00,  2137.40,  1783.20,   110.90},
{ "The Visage",                   1817.30,  1863.20,   -89.00,  2106.70,  2011.80,   110.90},
{ "The Visage",                   1817.30,  1703.20,   -89.00,  2027.40,  1863.20,   110.90},
{ "Unity Station",                1692.60, -1971.80,   -20.40,  1812.60, -1932.80,    79.50},
{ "Valle Ocultado",               -936.60,  2611.40,     2.00,  -715.90,  2847.90,   200.00},
{ "Verdant Bluffs",                930.20, -2488.40,   -89.00,  1249.60, -2006.70,   110.90},
{ "Verdant Bluffs",               1073.20, -2006.70,   -89.00,  1249.60, -1842.20,   110.90},
{ "Verdant Bluffs",               1249.60, -2179.20,   -89.00,  1692.60, -1842.20,   110.90},
{ "Verdant Meadows",                37.00,  2337.10,    -3.00,   435.90,  2677.90,   200.00},
{ "Verona Beach",                  647.70, -2173.20,   -89.00,   930.20, -1804.20,   110.90},
{ "Verona Beach",                  930.20, -2006.70,   -89.00,  1073.20, -1804.20,   110.90},
{ "Verona Beach",                  851.40, -1804.20,   -89.00,  1046.10, -1577.50,   110.90},
{ "Verona Beach",                 1161.50, -1722.20,   -89.00,  1323.90, -1577.50,   110.90},
{ "Verona Beach",                 1046.10, -1722.20,   -89.00,  1161.50, -1577.50,   110.90},
{ "Vinewood",                      787.40, -1310.20,   -89.00,   952.60, -1130.80,   110.90},
{ "Vinewood",                      787.40, -1130.80,   -89.00,   952.60,  -954.60,   110.90},
{ "Vinewood",                      647.50, -1227.20,   -89.00,   787.40, -1118.20,   110.90},
{ "Vinewood",                      647.70, -1416.20,   -89.00,   787.40, -1227.20,   110.90},
{ "Whitewood Estates",             883.30,  1726.20,   -89.00,  1098.30,  2507.20,   110.90},
{ "Whitewood Estates",            1098.30,  1726.20,   -89.00,  1197.30,  2243.20,   110.90},
{ "Willowfield",                  1970.60, -2179.20,   -89.00,  2089.00, -1852.80,   110.90},
{ "Willowfield",                  2089.00, -2235.80,   -89.00,  2201.80, -1989.90,   110.90},
{ "Willowfield",                  2089.00, -1989.90,   -89.00,  2324.00, -1852.80,   110.90},
{ "Willowfield",                  2201.80, -2095.00,   -89.00,  2324.00, -1989.90,   110.90},
{ "Willowfield",                  2541.70, -1941.40,   -89.00,  2703.50, -1852.80,   110.90},
{ "Willowfield",                  2324.00, -2059.20,   -89.00,  2541.70, -1852.80,   110.90},
{ "Willowfield",                  2541.70, -2059.20,   -89.00,  2703.50, -1941.40,   110.90},
{ "Yellow Bell Station",          1377.40,  2600.40,   -21.90,  1492.40,  2687.30,    78.00},
// Main Zones
{ "Los Santos",                     44.60, -2892.90,  -242.90,  2997.00,  -768.00,   900.00},
{ "Las Venturas",                  869.40,   596.30,  -242.90,  2997.00,  2993.80,   900.00},
{ "Bone County",                  -480.50,   596.30,  -242.90,   869.40,  2993.80,   900.00},
{ "Tierra Robada",               -2997.40,  1659.60,  -242.90,  -480.50,  2993.80,   900.00},
{ "Tierra Robada",               -1213.90,   596.30,  -242.90,  -480.50,  1659.60,   900.00},
{ "San Fierro",                  -2997.40, -1115.50,  -242.90, -1213.90,  1659.60,   900.00},
{ "Red County",                  -1213.90,  -768.00,  -242.90,  2997.00,   596.30,   900.00},
{ "Flint County",                -1213.90, -2892.90,  -242.90,    44.60,  -768.00,   900.00},
{ "Whetstone",                   -2997.40, -2892.90,  -242.90, -1213.90, -1115.50,   900.00}};

new VehicleName[212][0] = {
   "Landstalker",
   "Bravura",
   "Buffalo",
   "Linerunner",
   "Pereniel",
   "Sentinel",
   "Dumper",
   "Firetruck",
   "Trashmaster",
   "Stretch",
   "Manana",
   "Infernus",
   "Voodoo",
   "Pony",
   "Mule",
   "Cheetah",
   "Ambulance",
   "Leviathan",
   "Moonbeam",
   "Esperanto",
   "Taxi",
   "Washington",
   "Bobcat",
   "Mr Whoopee",
   "BF Injection",
   "Hunter",
   "Premier",
   "Enforcer",
   "Securicar",
   "Banshee",
   "Predator",
   "Bus",
   "Rhino",
   "Barracks",
   "Hotknife",
   "Trailer", //artict1
   "Previon",
   "Coach",
   "Cabbie",
   "Stallion",
   "Rumpo",
   "RC Bandit",
   "Romero",
   "Packer",
   "Monster Truck",
   "Admiral",
   "Squalo",
   "Seasparrow",
   "Pizzaboy",
   "Tram",
   "Trailer", //artict2
   "Turismo",
   "Speeder",
   "Reefer",
   "Tropic",
   "Flatbed",
   "Yankee",
   "Caddy",
   "Solair",
   "Berkley's RC Van",
   "Skimmer",
   "PCJ-600",
   "Faggio",
   "Freeway",
   "RC Baron",
   "RC Raider",
   "Glendale",
   "Oceanic",
   "Sanchez",
   "Sparrow",
   "Patriot",
   "Quad",
   "Coastguard",
   "Dinghy",
   "Hermes",
   "Sabre",
   "Rustler",
   "ZR-350",
   "Walton",
   "Regina",
   "Comet",
   "BMX",
   "Burrito",
   "Camper",
   "Marquis",
   "Baggage",
   "Dozer",
   "Maverick",
   "News Chopper",
   "Rancher",
   "FBI Rancher",
   "Virgo",
   "Greenwood",
   "Jetmax",
   "Hotring",
   "Sandking",
   "Blista Compact",
   "Police Maverick",
   "Boxville",
   "Benson",
   "Mesa",
   "RC Goblin",
   "Hotring Racer", //hotrina
   "Hotring Racer", //hotrinb
   "Bloodring Banger",
   "Rancher",
   "Super GT",
   "Elegant",
   "Journey",
   "Bike",
   "Mountain Bike",
   "Beagle",
   "Cropdust",
   "Stunt",
   "Tanker", //petro
   "RoadTrain",
   "Nebula",
   "Majestic",
   "Buccaneer",
   "Shamal",
   "Hydra",
   "FCR-900",
   "NRG-500",
   "HPV1000",
   "Cement Truck",
   "Tow Truck",
   "Fortune",
   "Cadrona",
   "FBI Truck",
   "Willard",
   "Forklift",
   "Tractor",
   "Combine",
   "Feltzer",
   "Remington",
   "Slamvan",
   "Blade",
   "Freight",
   "Streak",
   "Vortex",
   "Vincent",
   "Bullet",
   "Clover",
   "Sadler",
   "Firetruck", //firela
   "Hustler",
   "Intruder",
   "Primo",
   "Cargobob",
   "Tampa",
   "Sunrise",
   "Merit",
   "Utility",
   "Nevada",
   "Yosemite",
   "Windsor",
   "Monster Truck", //monstera
   "Monster Truck", //monsterb
   "Uranus",
   "Jester",
   "Sultan",
   "Stratum",
   "Elegy",
   "Raindance",
   "RC Tiger",
   "Flash",
   "Tahoma",
   "Savanna",
   "Bandito",
   "Freight", //freiflat
   "Trailer", //streakc
   "Kart",
   "Mower",
   "Duneride",
   "Sweeper",
   "Broadway",
   "Tornado",
   "AT-400",
   "DFT-30",
   "Huntley",
   "Stafford",
   "BF-400",
   "Newsvan",
   "Tug",
   "Trailer", //petrotr
   "Emperor",
   "Wayfarer",
   "Euros",
   "Hotdog",
   "Club",
   "Trailer", //freibox
   "Trailer", //artict3
   "Andromada",
   "Dodo",
   "RC Cam",
   "Launch",
   "Police Car (LSPD)",
   "Police Car (SFPD)",
   "Police Car (LVPD)",
   "Police Ranger",
   "Picador",
   "S.W.A.T. Van",
   "Alpha",
   "Phoenix",
   "Glendale",
   "Sadler",
   "Luggage Trailer", //bagboxa
   "Luggage Trailer", //bagboxb
   "Stair Trailer", //tugstair
   "Boxville",
   "Farm Plow", //farmtr1
   "Utility Trailer" //utiltr1
};

//global vars
new Float:ppos[MAX_PLAYERS][3];
new PLAYERLIST_authed[MAX_PLAYERS];
new Log[MAX_PLAYERS];
new AreaBanco[MAX_PLAYERS];
//carros trancados
new Car1;
new Car2;
new Car3;
new Car4;
new Car5;
new Car6;
new Car7;
new Car8;
new Car9;
new Car10;
new Car11;
//areas
new zoneupdates[MAX_PLAYERS];
new player_zone[MAX_PLAYERS];
new zoneupdate;
//rc's
new Veiculo[MAX_PLAYERS] = 0;
//previsao do tempo
new PrevisaoTempo[MAX_PLAYERS] = 1;
//sequestrados
new Sequestro[MAX_PLAYERS] = 0;
//radares
new Menu:radares;
new AreaRadar[MAX_PLAYERS] = 0;
new Radaron[MAX_PLAYERS];
//lanche
new Lanche[MAX_PLAYERS] = 0;
new Pizza[MAX_PLAYERS] = 0;
new fome[MAX_PLAYERS] = 0;
new tempofome;
//alarme
new Alarme[MAX_PLAYERS] = 0;
//caminhoneiros
new AreaCarga[MAX_PLAYERS] = 0;
new AreaDescarga[MAX_PLAYERS] = 0;
new Carregamento[MAX_PLAYERS] = 0;
//caminhoneiros gas
new AreaRefinaria[MAX_PLAYERS] = 0;
new CarregamentoGas[MAX_PLAYERS] = 0;
//Fazenda
new AreaFazenda[MAX_PLAYERS] = 0;
new AreaCoopFazenda[MAX_PLAYERS] = 0;
new MilhoInProgress[MAX_PLAYERS] = 0;
new Milho[MAX_PLAYERS] = 0;
//pesca
new Piracema = 0;
new AreaCoopPesca[MAX_PLAYERS] = 0;
new PescaInProgress[MAX_PLAYERS] = 0;
new QtPescas[MAX_PLAYERS] = 0;
//drogas
new QtMaconha[MAX_PLAYERS] = 0;
new QtCocaina[MAX_PLAYERS] = 0;
new QtCerveja[MAX_PLAYERS] = 0;
//caça
new TemporadaCaca = 0;
new AreaCoopCaca[MAX_PLAYERS] = 0;
new CacaInProgress[MAX_PLAYERS] = 0;
new QtCacas[MAX_PLAYERS] = 0;
//paralizar
new Paralize[MAX_PLAYERS] = 0;
//seguro de vida
new Seguro[MAX_PLAYERS] = 0;
//hotel
new AreaHotel[MAX_PLAYERS] = 0;
//bar
new AreaBar[MAX_PLAYERS] = 0;
//desmanche
new AreaDesmanche[MAX_PLAYERS] = 0;
new Desmanche[MAX_PLAYERS] = 0;
//delegacia
new Areacop[MAX_PLAYERS] = 0;
//balada
new AreaBalada[MAX_PLAYERS] = 0;
new tocando;
//auto-escola
new AreaEscola[MAX_PLAYERS] = 0;
//drogas
new Maconha[MAX_PLAYERS] = 0;
new Heroina[MAX_PLAYERS] = 0;
new Cocaina[MAX_PLAYERS] = 0;
//galao de combustivel
new Galao[MAX_PLAYERS] = 0;
//casa
new Casa[MAX_PLAYERS] = 0;
//carros locados
new Locado[MAX_PLAYERS] = 0;
//fuel
#define RunOutTime 60000
//postos
new AreaPosto[MAX_PLAYERS] = 0;
new Combustivel[MAX_VEHICLES] = 0;
//gangzones
new Pesca1;
new Plantacao;
new VendaMilho;
new Caca1;
//Semana
new dias;
new segunda[MAX_PLAYERS];
new terca[MAX_PLAYERS];
new quarta[MAX_PLAYERS];
new quinta[MAX_PLAYERS];
new sexta[MAX_PLAYERS];
new sabado[MAX_PLAYERS];
new domingo[MAX_PLAYERS];
//textdraw's
new Text:Texto;
new Text:TextAll;
//---
new Presos[MAX_PLAYERS] = 0;
new Mudo[MAX_PLAYERS] = 0;
new Profissao[MAX_PLAYERS] = 0;
new TempoPreso[MAX_PLAYERS] = 0;
new Procurados[MAX_PLAYERS] = 0;
new Wanted[MAX_PLAYERS] = 0;
new Taximetro[MAX_PLAYERS][2];
new MTaximetro[MAX_PLAYERS][2];
new ATaximetro[MAX_PLAYERS][2];
new PrecoCorrida[MAX_PLAYERS];
new Velocidade[MAX_PLAYERS];
new worldTime;
new Bebida[MAX_PLAYERS] = 0;
new Sorvete[MAX_PLAYERS] = 0;
new Calling[MAX_PLAYERS];
new Answered[MAX_PLAYERS];
new Callerid[MAX_PLAYERS];
//forward's
forward update_zones();
forward MoneyGrubScoreUpdate();
forward TempoPrisao();
forward Taxi();
forward Pesca();
forward Caca();
forward Platacao();
forward CheckFuel();
forward LogarPlayer(playerid);
forward Bancos();
forward MTaxi();
forward ATaxi();
forward Radar();
forward GetDistanceBetweenPlayers(playerid, playerid2);
forward Tempo();
forward Speed();
forward Cheat();
forward Anuncio();
forward FuelDown();
forward TimeFunction(playerid);
forward SetCar(modelid, Float:X, Float:Y, Float:Z, Float:ang, Cor1, Cor2);
forward SetCasa(Float:X, Float:Y, Float:Z);
forward SetCone(Float:X, Float:Y, Float:Z);
forward GetPlayerZone(playerid);
forward IsPlayerInArea(playerid, Float:minx, Float:maxx, Float:miny, Float:maxy);
forward CarrosTrancados(playerid);
forward Prisao(plid);
forward balada(playerid);
forward Semana();
forward faminto();
forward quefome();
forward PhoneCut();

main()
{
	print("\n----------------------------");
	print("  >>> MPA Reload RPG <<<");
	print("----------------------------\n");
	worldTime = 12;
}



public OnGameModeInit()
{
	print("Carregando MPA Reload RPG");
	SetGameModeText("MPA® Reload RPG");

	AddPlayerClass(60, 768.2721, -36.8625, 1000.6865, 186.4601, 0, 0, 0, 0, 0, 0);
	// Carros Angel Pine
	CreateVehicle(463,-2210.6514,-2255.1765,30.2733,319.5424,0,1,-1); // freeway
	CreateVehicle(508,-2205.6443,-2251.7271,31.0836,48.4874,1,1,-1); // van de turismo
	CreateVehicle(448,-2100.7053,-2345.9402,30.2115,53.7351,3,1,-1); // pizza boy
	CreateVehicle(448,-2157.8840,-2460.8801,30.1954,225.4417,3,1,-1); // pizza boy
	CreateVehicle(428,-2187.9341,-2399.1440,30.3244,143.0973,86,86,-1); // carro forte
	CreateVehicle(409,-2175.7058,-2336.1523,30.3270,322.0568,1,1,-1); // limosine
	CreateVehicle(409,-2181.1003,-2343.1809,30.3294,322.2349,1,1,-1); // limosine
	CreateVehicle(525,-2115.6960,-2469.0261,30.3416,47.3266,1,0,-1); // towtruck
	CreateVehicle(408,-2092.6499,-2304.0359,30.2596,142.9992,86,0,-1); // caminhao de lixo
	CreateVehicle(600,-2183.2251,-2502.2170,30.2690,233.1241,3,3,-1); // picador
	CreateVehicle(597,-2156.0496,-2396.8076,30.3126,54.0081,0,1,-1); // carcopsf
	CreateVehicle(597,-2161.9846,-2392.3926,30.3055,53.1031,0,1,-1); // carcopsf
	CreateVehicle(599,-2168.1013,-2387.7903,30.7226,51.5341,0,1,-1); // carcopcs
	CreateVehicle(523,-2174.1709,-2383.6321,30.0388,130.91,0,1,-1); // motocop
	CreateVehicle(523,-2172.5046,-2384.6919,30.0389,141.8292,0,1,-1); // motocop
	CreateVehicle(437,-2074.2454,-2462.0308,30.6801,49.9912,95,16,-1); // busao
	CreateVehicle(437,-2083.2656,-2454.6643,30.6770,52.3799,98,20,-1); // busao
	CreateVehicle(420,-2142.7490,-2447.0286,30.4074,323.7563,6,1,-1); // taxi
	CreateVehicle(420,-2144.8958,-2445.4551,30.4074,323.7563,6,1,-1); // taxi
	CreateVehicle(420,-2149.1501,-2441.9424,30.4054,322.3454,6,1,-1); // taxi
	CreateVehicle(581,-2146.4854,-2442.7917,30.2114,139.5587,6,6,-1); // moto taxi
	CreateVehicle(581,-2150.2866,-2439.1633,30.2164,144.2821,6,6,-1); // moto taxi
	CreateVehicle(475,-2123.3308,-2255.6533,30.3456,232.2825,6,6,-1); // escola car
	CreateVehicle(475,-2133.3716,-2247.7283,30.3482,232.5271,6,6,-1); // escola car
	CreateVehicle(475,-2144.3083,-2254.1670,30.4276,321.2896,6,6,-1); // escola car
	CreateVehicle(487,-2133.1821,-2258.0247,30.8092,50.5889,6,0,-1); // heli escola
	CreateVehicle(461,-2140.8577,-2259.0566,30.6319,305.4985,6,0,-1); // moto escola
	CreateVehicle(416,-2201.9023,-2294.8242,30.7744,317.3578,1,3,-1); // ambulancia
	CreateVehicle(435,-2102.5415,-2228.6206,30.7584,140.1957,1,1,-1); // carreta
	CreateVehicle(435,-2099.5256,-2230.4441,30.8355,139.7521,1,1,-1); // carreta
	CreateVehicle(435,-2097.0061,-2232.6523,30.9025,140.5417,1,1,-1); // carreta
	CreateVehicle(403,-2090.9934,-2241.9666,30.7345,53.5008,3,3,-1); // linerun
	CreateVehicle(403,-2093.8887,-2245.9402,30.4708,53.8579,1,1,-1); // linerun
	CreateVehicle(403,-2097.0798,-2250.0730,30.4281,55.1503,0,0,-1); // linerun
	// Carros Fort Carson
	CreateVehicle(437,-156.9283,1194.6168,19.7815,270.8334,71,87,-1); // onibus
	CreateVehicle(437,-171.1785,1194.6578,19.7390,269.4513,55,83,-1); // onibus
	CreateVehicle(581,-141.9811,1187.3344,19.3212,342.5776,66,1,-1); // moto
	CreateVehicle(509,-143.9405,1187.5908,19.2548,9.9856,16,1,-1); // bike
	CreateVehicle(509,-146.3510,1187.3357,19.2545,349.8419,74,1,-1); // bike
	CreateVehicle(543,-96.0622,1193.3949,19.4804,273.0895,67,8,-1); // camionete
	CreateVehicle(510,-94.3977,1209.6837,19.3279,208.9742,46,46,-1); // mbike
	CreateVehicle(508,-101.3297,1222.5194,20.1274,359.1908,1,1,-1); // van de turismo
	CreateVehicle(463,-94.3121,1222.7695,19.2793,356.6828,84,84,-1); // freewall
	CreateVehicle(531,-48.7209,1113.5156,19.7272,174.3214,91,2,-1); // trator
	CreateVehicle(525,-33.5871,1086.4548,19.6341,3.2091,18,20,-1); // guincho
	CreateVehicle(420,-214.4730,1094.4625,19.3709,269.9807,6,1,-1); // taxi
	CreateVehicle(420,-222.1833,1094.5259,19.3668,267.9370,6,1,-1); // taxi
	CreateVehicle(438,-229.8830,1094.5428,19.5790,270.5587,6,76,-1); // taxi
	CreateVehicle(416,-328.5625,1063.7593,19.8952,267.4351,1,3,-1); // ambulancia
	CreateVehicle(478,-290.0367,1163.1853,19.6832,88.2329,40,1,-1); // camionatinha
	CreateVehicle(475,-143.5764,1111.9803,19.5540,1.4576,6,6,-1); // sabre auto
	CreateVehicle(475,-147.2038,1114.4742,19.5472,358.3855,6,6,-1); // sabre auto
	CreateVehicle(475,-147.2490,1128.8910,19.5439,0.4013,6,6,-1); // sabre auto
	CreateVehicle(521,-137.7813,1127.7449,19.2955,59.6575,6,6,-1); // fcr auto
	CreateVehicle(523,-211.0403,973.7650,18.6285,266.1498,0,1,-1); // motocop
	CreateVehicle(598,-211.5761,984.4426,19.5220,271.6649,0,1,-1); // carcop
	CreateVehicle(599,-211.4822,988.6226,19.6185,269.0335,0,1,-1); // carcop
	CreateVehicle(599,-211.0507,993.4313,19.6987,265.8234,0,1,-1); // carcop
	CreateVehicle(584,251.5558,1395.9694,10.1558,270.0030,0,1,-1); // carreta refinaria 1
	CreateVehicle(584,284.0438,1349.0657,10.1557,355.0104,0,1,-1); // carreta refinaria 2
	CreateVehicle(514,280.6498,1385.6342,10.1560,270.3433,0,1,-1); // tanker refinaria
	CreateVehicle(478,-359.5844,1179.4850,19.7376,227.5946,40,1,-1); // camionete desmanche
	CreateVehicle(444,364.6568,2536.4775,17.0400,186.9105,-1,-1,-1); // heli verdant
	CreateVehicle(487,328.2084,2539.6592,17.1778,160.0905,-1,-1,-1); // aviao verdant
	CreateVehicle(493,435.8224,2528.5095,17.2491,89.6305,3,6,-1); // monster verdant
	// Carros San Fierro
	CreateVehicle(420,-1446.8502,-280.6407,13.795,63.8307,6,6,-1); // taxi aero-porto
	CreateVehicle(582,-2516.9233,-602.1367,132.9338,359.6379,1,0,-1); // van de reporter
	CreateVehicle(566,-2397.5791,-610.8218,133.0197,213.7984,1,1,-1); // sem dono
	CreateVehicle(404,-2498.1953,-602.0826,132.9338,359.6086,-1,-1,-1); // sem dono
	CreateVehicle(448,-1806.0667,951.5513,24.8906,176.8832,3,1,-1); // pizzaboy
	CreateVehicle(448,-2330.6489,-164.3958,35.5547,267.6751,3,1,-1); // pizzaboy
	CreateVehicle(537,-1942.8452,167.4841,27.2245,356.7458,1,1,-1); // trem
	CreateVehicle(449,-2264.8333,547.5076,35.5183,180.4091,3,3,-1); // bonde
	CreateVehicle(597,-1607.5646,724.4725,12.0493,268.6696,0,1,-1); // carcopsf
 	CreateVehicle(597,-1588.2479,748.0393,-5.4903,359.9998,0,1,-1); // carcop
	CreateVehicle(523,-1584.0217,749.4910,-5.6655,180.9966,0,0,-1); // carcop
	CreateVehicle(523,-1579.8461,749.0732,-5.6571,181.8757,0,0,-1); // carcop
	CreateVehicle(597,-1574.2565,742.4983,-5.5206,88.9996,0,1,-1); // carcop
	CreateVehicle(523,-1573.5985,734.6492,-5.6689,90.0025,0,0,-1); // carcop
	CreateVehicle(497,-1679.5951,706.1432,30.7954,90.5114,0,1,-1); // helicop
	CreateVehicle(437,-1988.5007,162.0946,27.6508,0.0000,1,1,-1); // busao
	CreateVehicle(437,-1988.3359,131.3477,27.6943,0.0000,1,1,-1); // busao
	CreateVehicle(410,-2089.6643,-83.5934,34.7976,359.9729,6,6,-1); // carroescola
	CreateVehicle(410,-2081.2825,-83.4888,34.8086,4.0901,6,6,-1); // carroescola
	CreateVehicle(461,-2022.3977,-124.3720,34.7832,179.9717,6,6,-1); // motoescola
	CreateVehicle(487,-2032.2460,-155.6209,35.4656,0.0060,6,0,-1); // heliesc
	CreateVehicle(475,-2088.8313,-156.0123,35.0983,359.9812,6,6,-1); // carroesc
	CreateVehicle(475,-2092.4036,-145.2734,35.0986,0.0400,6,6,-1); // carroesc
	CreateVehicle(475,-2092.3503,-132.4997,35.0966,0.4676,6,6,-1); // carroesc
	CreateVehicle(487,-1829.1174,1300.2819,59.8817,204.0558,54,29,-1); // mavmoto
	CreateVehicle(453,-1556.1755,1260.8345,-0.5926,234.7669,69,69,-1); // barco pesca
	CreateVehicle(453,-1565.1833,1259.7523,-0.5379,227.8785,69,69,-1); // barcopesca
	CreateVehicle(453,-1578.2352,1260.0367,-0.0551,228.0564,69,69,-1); // barco pesca
	CreateVehicle(493,-1474.4727,687.5856,-0.2037,268.8839,6,6,-1); // barco escola
	CreateVehicle(453,-1473.3943,703.5046,-0.4342,272.7462,6,6,-1); // barco escola
	CreateVehicle(420,-1703.0906,1003.9794,17.3778,91.1514,6,1,-1); // taxi
	CreateVehicle(420,-1687.7856,999.6074,17.3444,270.7191,6,1,-1); // taxi
	CreateVehicle(420,-1696.9393,977.3001,17.3661,180.7287,6,1,-1); // taxi
	CreateVehicle(420,-1687.5576,983.2572,17.3647,269.0692,6,1,-1); // taxi
	CreateVehicle(581,-1687.7793,995.4088,17.3665,90.6660,6,1,-1); // moto taxi
	CreateVehicle(420,-1703.6134,1012.2395,17.3648,91.3088,6,1,-1); // taxi
	CreateVehicle(409,-1816.4678,1311.4034,50.2892,275.5558,1,1,-1); // limomoto
	CreateVehicle(409,-1829.7208,1289.6337,50.2512,110.5457,1,1,-1); // lomomoto
	CreateVehicle(409,-1734.8969,1011.9638,17.3660,89.3191,1,1,-1); // limozine
	CreateVehicle(409,-1734.9292,1020.2990,17.3648,90.4921,1,1,-1); // limozine
	CreateVehicle(409,-1756.8873,951.8206,24.9184,90.0569,1,1,-1); // limozine
	CreateVehicle(433,-1307.1633,456.9036,7.5909,89.9428,0,0,-1); // caminhao
	CreateVehicle(433,-1306.5189,463.9994,7.6436,89.6543,0,0,-1); // caminhao
	CreateVehicle(433,-1306.5568,460.6202,7.6451,90.4466,0,0,-1); // caminhao
	CreateVehicle(433,-1309.4952,444.8434,7.6132,55.0000,0,0,-1); // caminhao
	CreateVehicle(433,-1307.2222,447.7583,7.5937,54.9896,0,0,-1); // caminhao
	CreateVehicle(470,-1241.5155,445.2168,7.1593,326.9936,44,44,-1); // carro
	CreateVehicle(470,-1232.7764,451.6962,7.1680,89.9980,0,0,-1); // carro
	CreateVehicle(425,-1403.2001,465.2320,7.7642,181.0000,0,0,-1); // hunter
	CreateVehicle(425,308.9300,1990.3328,18.2170,180.0703,0,0,-1); // hunter
	CreateVehicle(425,309.5915,2056.1018,18.1976,180.0104,0,0,-1); // hunter
	CreateVehicle(592,-1632.3605,-265.8031,15.3416,12.1937,1,1,-1); // andromada
	CreateVehicle(519,-1626.1268,-219.8978,15.0673,339.8286,1,1,-1); // shamal
	CreateVehicle(593,-1708.3000,-247.4316,14.6091,360.0000,0,0,-1); // dodo
	CreateVehicle(403,-1732.9801,-110.8736,5.0921,40.0861,3,3,-1); // linerun
	CreateVehicle(435,-1720.1995,-63.6686,3.6880,133.0925,3,3,-1); // carreta 1
	CreateVehicle(435,-1723.5540,-59.6139,3.6883,134.0423,3,3,-1); // carreta2
	CreateVehicle(435,-1728.0133,-55.9080,3.6880,132.7226,3,3,-1); // carreta3
	CreateVehicle(435,-1731.6532,-52.2449,3.6880,132.5403,3,3,-1); // carreta4
	CreateVehicle(435,-1735.1477,-96.0247,3.6822,38.6315,3,3,-1); // carreta5
	CreateVehicle(435,-1726.1198,-87.0242,3.6876,46.7879,3,3,-1); // carreta6
	CreateVehicle(435,-1723.2843,-84.4416,3.6883,44.7653,3,3,-1); // carreta7
    CreateVehicle(584,-2414.3237,952.5922,44.9535,269.1496,1,1,-1); // careta1
	Car1 = CreateVehicle(534,-1719.3684,1032.7279,17.3640,269.0480,0,1,-1); // carro sem dono
	Car2 = CreateVehicle(419,-1687.2345,1028.3756,17.3652,269.6693,112,1,-1); // carro sem dono
	Car3 = CreateVehicle(474,-2543.3235,604.9097,14.1735,268.6048,0,1,-1); // carro sem dono
	Car4 = CreateVehicle(600,-2573.5920,625.4429,27.5256,178.5329,-1,-1,-1); // carro sem dono
	CreateVehicle(584,-1708.5934,388.3623,7.5549,226.2565,1,1,-1); // carreta tanque
    CreateVehicle(584,-2431.1772,952.8413,44.9515,269.1549,6,6,-1); // carga1
    Car5 = CreateVehicle(477,-1668.1351,1208.1461,6.9747,312.1305,0,0,-1); // zr350
	Car6 = CreateVehicle(411,-1663.5706,1214.8003,6.9736,263.0902,1,1,-1); // infernus branco
	Car7 = CreateVehicle(451,-1656.2620,1213.4050,6.9721,348.5319,0,1,-1); // turismo
	Car8 = CreateVehicle(506,-1649.4617,1209.0592,13.3954,264.0188,0,1,-1); // super gt
	Car9 = CreateVehicle(535,-1656.3098,1217.5247,13.3926,355.9062,0,1,-1); // slamvan
	Car10 = CreateVehicle(536,-1659.2343,1210.4576,13.3976,298.4606,1,1,-1); // blade
	Car11 = CreateVehicle(589,-1666.0487,1222.6254,13.3991,267.6977,0,1,-1); // club
	CreateVehicle(416,-2573.1768,632.4861,14.1799,90.000,1,3,-1); // ambulancia
	CreateVehicle(416,-2625.6328,629.8738,14.1801,270.000,1,3,-1); // ambulancia
	CreateVehicle(416,-2592.8674,660.9832,27.5316,90.000,1,3,-1); // ambulancia
	// Carros Los Santos
	CreateVehicle(538,801.0978,-1354.3145,-0.1562,48.3636,1,1,-1); // trem
	CreateVehicle(596,1602.5104,-1700.1234,6.0783,89.8649,0,1,-1); // carro cop
	CreateVehicle(596,1535.6339,-1677.9895,13.1038,1.2792,0,1,-1); // carcopls
	CreateVehicle(420,1658.3230,-1719.1973,20.2619,356.5259,6,1,-1); // taxi
	CreateVehicle(416,1179.6992,-1338.6689,14.1709,272.5164,1,3,-1); // ambulancia
	CreateVehicle(407,1749.5994,-1455.1704,13.6770,270.4327,3,1,-1); // bombeiro
	CreateVehicle(577,2007.9968,-2452.5190,13.4781,114.4148,0,1,-1);//at-400
	CreateVehicle(592,1929.8413,-2420.5664,14.7364,151.3048,1,1,-1); // andromada
	CreateVehicle(519,1880.5740,-2415.2832,14.4735,211.5916,1,1,-1); // shamal
	CreateVehicle(519,1860.9817,-2419.2339,14.4755,222.8972,1,1,-1); // shamal
	CreateVehicle(593,1989.0896,-2394.1892,14.0093,120.8235,0,0,-1); // dodo
	CreateVehicle(608,1992.5629,-2465.1179,15.7895,22.8657,0,0,-1); // escada
	CreateVehicle(596,1652.7618,-2323.6194,13.1833,269.5071,0,1,-1); // carro policia aero
	// Carros Las Venturas
	CreateVehicle(416,1571.5830,1739.2963,11.1164,3.2085,1,3,-1); // ambulancia
	// Objetos e Pickup's
	CreateObject(16477,2463.2739,-58.5999,25.6200,0,0,101.5); // posto
	CreateObject(1686,2461.1143,-40.5480,25.6800,0,0,90); // bomba de combustivel
	CreateObject(1686,2464.1423,-40.5479,25.6800,0,0,90); // bomba de combustivel
	CreateObject(1686,2463.7864,-46.5849,25.6800,0,0,90); // bomba de combustivel
	CreateObject(1686,2460.6365,-46.5516,25.6800,0,0,90); // bomba de combustivel
	CreateObject(2754,-2671.3176,636.8948,14.4531,0,0,180);//caixa eletronico hospital
	CreateObject(2754,-1980.0176,165.6948,27.6875,0,0,0);//caixa eletronico rodoviaria
	CreateObject(2754, 1707.557739, -1682.152100, 13.449019, 0, 0, 90);//caixa banco central ls
	CreateObject(2754, 395.868530, -1806.711060, 7.665324, 0, 0, 270);//caixa banco secuntario ls
	CreateObject(2754, 1582.904907, 1756.698242, 10.722457, 0, 0, 270);//caixa hospital lv
	CreateObject(2754, -180.679840, 1137.522949, 19.650196, 0, 0, 0);//caixa fc
	CreateObject(2754, -2206.764893, -2291.594482, 30.534670, 0, 0, 230.2339);//caixa ap
	CreateObject(1238,-2063.9045,-178.4728,34.8203,0,0,0); //cone auto sf
	CreateObject(1238,-2064.4001,-186.0513,34.8203,0,0,0); //cone auto sf
	CreateObject(1238,-2063.2490,-192.7540,34.8203,0,0,0); //cone auto sf
	CreateObject(1238,-2067.5437,-195.1631,34.8203,0,0,0); //cone auto sf
	CreateObject(1238,-2073.2283,-195.8197,34.8203,0,0,0); //cone auto sf
	CreateObject(1238,-2078.1802,-191.3293,34.8203,0,0,0); //cone auto sf
	CreateObject(1238,-2084.4641,-186.5283,34.8203,0,0,0); //cone auto sf
	CreateObject(17573,-2333.3542,-1638.3593,483.2702,0,0,130); //casa
	CreateObject(1238,-2175.2144,-2382.9856,29.8688,0,0,0); //cone
	CreateObject(1238,-2151.5981,-2400.7253,29.8688,0,0,0); //cone
	AddStaticPickup(1274,1,-2425.2385,66.4771,35.1719);
	CreateObject(4859, 3923.016357, -315.825928, 31.351326, 0.196350, 0.000000, 0.000000);
	CreateObject(5812, 3926.851318, -346.635834, 30.468454, -1.767145, 0.000000, 0.000000);
	CreateObject(1612, 3917.264404, -280.495758, 38.334255, 1.374447, 0.000000, 0.000000);
	//gang zones
	Pesca1 = GangZoneCreate(-1610.9099, 1279.2794, -1496.5111, 1295.2489);// cooperativa de pesca
	Plantacao = GangZoneCreate(-1194.7273, -1064.6096, -1007.1719, -915.6717);//pantação da fazenda
	VendaMilho = GangZoneCreate(-1118.8129, -1319.42541, -1027.5986, -1120.223);//fazenda, venda de milho
	Caca1 = GangZoneCreate(-2824.2483, -1534.1261, -2801.2568, -1510.1261);//cooperativa de caça
	//ilha diversoes
    CreateObject(5028, -730.154053, 593.123779, 9.384640, 0, 0, 320.9387);
    CreateObject(4807, -712.836548, 510.325012, 4.363928, 0, 0, 141.0162);
    CreateObject(4233, -632.395935, 519.249939, 2.807560, 0, 0, 141.9528);
    CreateObject(4142, -682.395142, 463.078033, 2.656259, 0, 0, 50.234);
    CreateObject(5141, -623.918030, 417.688843, 2.622464, 0, 0, 230.1567);
    CreateObject(12814, -705.071106, 461.929474, 2.749477, 0, 0, 51.016);
    CreateObject(12814, -685.476990, 484.234894, 2.747050, 0, 0, 51.016);
    CreateObject(12814, -666.758301, 507.575012, 2.749476, 0, 0, 51.016);
    CreateObject(12814, -661.566101, 513.949768, 2.751903, 0, 0, 51.016);
    CreateObject(7022, -685.417908, 488.347015, 5.157221, 0, 0, 231.0934);
    CreateObject(7191, -718.577454, 447.639282, 4.724684, 0, 0, 50.234);
    CreateObject(3819, -668.229309, 537.160828, 3.825428, 0, 0, 50.1566);
    CreateObject(3819, -661.165344, 531.346069, 3.917543, 0, 0, 50.1566);
    CreateObject(3819, -653.977051, 525.316833, 3.977193, 0, 0, 50.1566);
    CreateObject(3819, -646.471191, 519.378906, 3.977193, 0, 0, 50.1566);
    CreateObject(8417, -643.435120, 416.414032, 2.777597, 0, 0, 321.0161);
    CreateObject(8417, -629.899048, 405.674438, 2.748917, 0, 0, 321.0161);
    CreateObject(12814, -628.724548, 485.740601, 2.544622, 0, 0, 51.016);
    CreateObject(7191, -707.424011, 438.350922, 4.724688, 0, 0, 50.234);
    CreateObject(4018, -668.195496, 451.893280, 2.701520, 0, 0, 50.1566);
    CreateObject(4848, -657.056213, 471.690094, 6.116173, 0, 0, 50.234);
    CreateObject(979, -660.773987, 505.368744, 3.599935, 0, 0, 270);
    CreateObject(979, -664.012390, 497.607361, 3.597508, 0, 0, 225);
    CreateObject(979, -671.592896, 492.506531, 3.595083, 0, 0, 202.5);
    CreateObject(979, -654.910156, 499.022186, 3.599935, 0, 0, 247.5);
    CreateObject(979, -659.959167, 491.632233, 3.597507, 0, 0, 223.2039);
    CreateObject(979, -667.580078, 486.712402, 3.595083, 0, 0, 202.5);
    CreateObject(979, -676.099609, 483.552582, 3.595083, 0, 0, 198.2028);
    CreateObject(979, -679.837708, 488.169861, 3.595083, 0, 0, 212.9679);
    CreateObject(1633, -683.305420, 482.830322, 4.055154, 0, 0, 123.7499);
    CreateObject(1633, -695.597412, 474.657501, 4.055154, 0, 0, 303.75);
    CreateObject(5152, -686.752380, 480.552155, 5.053044, 0, 23.2048, 303.75);
    CreateObject(5152, -688.539307, 479.387543, 5.060472, 0, 23.2048, 303.75);
    CreateObject(5152, -690.340393, 478.235565, 5.084287, 0, 23.2048, 303.75);
    CreateObject(5152, -692.107117, 477.097504, 5.111980, 0, 23.2048, 303.75);
    CreateObject(979, -653.153381, 508.076721, 3.599935, 0, 0, 270);
    CreateObject(979, -656.417603, 515.965881, 3.599935, 0, 0, 315);
    CreateObject(979, -663.041931, 522.532349, 3.599935, 0, 0, 315);
    CreateObject(979, -664.048523, 513.206787, 3.599935, 0, 0, 315);
    CreateObject(979, -671.713074, 517.411194, 3.599935, 0, 0, 348.75);
    CreateObject(979, -675.241760, 525.446899, 3.599935, 0, 0, 0);
    CreateObject(979, -679.532349, 514.866089, 3.599935, 0, 0, 45);
    CreateObject(979, -683.150757, 522.125488, 3.599935, 0, 0, 45);
    CreateObject(979, -684.543030, 507.314209, 3.597508, 0, 0, 67.5);
    CreateObject(979, -687.251709, 498.544952, 3.595083, 0, 0, 78.75);
    CreateObject(979, -688.163452, 489.161835, 3.595083, 0, 0, 90);
    CreateObject(979, -688.304260, 514.513733, 3.597508, 0, 0, 67.5);
    CreateObject(979, -691.903015, 505.858185, 3.595083, 0, 0, 67.5);
    CreateObject(979, -694.518799, 496.954712, 3.595083, 0, 0, 78.75);
    CreateObject(979, -695.468506, 487.781158, 3.595083, 0, 0, 90);
    CreateObject(979, -692.933228, 479.376282, 3.595083, 0, 0, 123.7499);
    CreateObject(979, -684.113892, 473.183807, 3.595083, 0, 0, 90);
    CreateObject(979, -690.306519, 470.910522, 3.595083, 0, 0, 90);
    CreateObject(979, -683.141296, 464.007263, 3.595083, 0, 0, 101.25);
    CreateObject(979, -689.168030, 447.455719, 3.597509, 0, 0, 45);
    CreateObject(979, -684.025635, 455.177094, 3.597507, 0, 0, 67.5);
    CreateObject(979, -705.095032, 449.269196, 3.597509, 0, 0, 315);
    CreateObject(979, -697.164612, 445.018341, 3.597511, 0, 0, 348.75);
    CreateObject(979, -707.617432, 465.630585, 3.597509, 0, 0, 236.25);
    CreateObject(979, -709.273315, 457.235016, 3.597509, 0, 0, 281.25);
    CreateObject(979, -696.828125, 456.444092, 3.597509, 0, 0, 191.25);
    CreateObject(979, -691.205872, 461.826691, 3.597509, 0, 0, 78.7501);
    CreateObject(979, -702.168396, 472.241455, 3.597509, 0, 0, 225);
    CreateObject(979, -701.071167, 460.164459, 3.597509, 0, 0, 90);
    CreateObject(979, -698.366699, 468.586731, 3.597509, 0, 0, 53.5943);
    CreateObject(3819, -701.440674, 492.435791, 3.752621, 0, 0, 168.75);
    CreateObject(3819, -712.201782, 469.615601, 3.755047, 0, 0, 157.5);
    CreateObject(3819, -676.956482, 471.279755, 3.752621, 0, 0, 337.5);
    CreateObject(3819, -666.612061, 479.602905, 3.744808, 0, 0, 303.75);
    CreateObject(669, -681.935913, 491.870728, 3.077849, 0, 0, 0);
    CreateObject(669, -675.079651, 531.325500, 3.082702, 0, 0, 0);
    CreateObject(669, -680.570862, 460.508057, 3.080276, 0, 0, 0);
    CreateObject(669, -696.042480, 464.008789, 3.080276, 0, 0, 0);
    CreateObject(669, -714.949707, 460.405365, 3.080276, 0, 0, 0);
    CreateObject(6965, -671.438232, 504.897552, 7.372179, 0, 0, 0);
    CreateObject(8417, -604.831787, 436.200287, 2.773917, 0, 0, 321.0161);
    CreateObject(8417, -618.220520, 447.186584, 2.770236, 0, 0, 321.0161);
    CreateObject(7191, -657.150024, 431.220825, 4.713213, 0, 0, 320.234);
    CreateObject(16778, -734.923096, 461.694733, 7.144378, 0, 0, 191.25);
    CreateObject(7419, -567.492004, 482.546875, -3.753774, 0, 0, 51.0161);
    CreateObject(7022, -648.921326, 516.744324, 5.300155, 0, 0, 141.9528);
    CreateObject(7191, -604.408997, 452.632172, 4.705852, 0, 0, 231.0934);
    CreateObject(13666, -604.189697, 374.467590, 7.645307, 0, 0, 141.9528);
    CreateObject(7022, -608.384277, 404.770630, 5.112220, 0, 0, 51.0934);
    CreateObject(16060, -632.271912, 459.030579, 2.138381, 0, 0, 326.25);
    CreateObject(8417, -596.045471, 352.046570, 2.771585, 0, 0, 231.0161);
    CreateObject(7191, -610.463257, 338.852081, 4.707199, 0, 0, 50.234);
    CreateObject(7191, -582.093933, 366.801697, 4.707201, 0, 0, 50.234);
    CreateObject(7191, -582.303406, 337.824646, 4.707201, 0, 0, 140.234);
    CreateObject(7022, -704.889587, 446.673096, 4.988305, 0, 0, 319.3746);
    CreateObject(7191, -675.250000, 391.941315, 4.683099, 0, 0, 230.234);
    CreateObject(7191, -689.510193, 549.992493, 4.776106, 0, 0, 321.9529);
    CreateObject(3270, -623.113831, 436.386871, 1.244778, 0, 0, 0);
    CreateObject(13592, -649.348389, 396.510437, 12.434148, 0, 0, 337.5);
    CreateObject(13642, -607.018921, 412.759369, 4.563000, 0, 0, 22.5);
    CreateObject(18565, -590.592346, 360.741821, 4.058612, 0, 0, 0);
    CreateObject(18565, -596.625671, 349.867645, 4.058612, 0, 0, 33.75);
	//textdraw's
    Texto = TextDrawCreate(280,10,"Seja Vem Vindo ao ~n~ MPA Reload RPG");
    TextDrawUseBox(Texto, true);
    TextDrawFont(Texto,3);
	TextDrawBoxColor(Texto, 0x000000AA);
    TextDrawUseBox(Texto, true);
    TextDrawColor(Texto, 0xFF0000FF);
	new File:temp;
	new index = 0;
	new tmp[256];
	new modelid, Float:X, Float:Y, Float:Z, Float:ang, Cor1, Cor2;
	temp = fopen("reloadrpg.carros", io_readwrite);
	while(fread(temp, tmp, sizeof(tmp), false)) {
		index = 0;
		modelid    = strval(strtok(tmp, index));
		X          = Float:floatstr(strtok(tmp, index));
		Y          = Float:floatstr(strtok(tmp, index));
		Z          = Float:floatstr(strtok(tmp, index));
		ang        = Float:floatstr(strtok(tmp, index));
		Cor1       = strval(strtok(tmp, index));
		Cor2       = strval(strtok(tmp, index));
		CreateVehicle(modelid, X, Y, Z, ang, Cor1, Cor2,-1);
	}
	fclose(temp);
	
	temp = fopen("reloadrpg.casas", io_readwrite);
	while(fread(temp, tmp, sizeof(tmp), false)) {
		index = 0;
		X          = Float:floatstr(strtok(tmp, index));
		Y          = Float:floatstr(strtok(tmp, index));
		Z          = Float:floatstr(strtok(tmp, index));
		AddStaticPickup(1272, 1, X, Y, Z);
	}
	fclose(temp);

	//menus
    radares = CreateMenu("Radares",1,30.0,140.0,220.0,0.0);
	AddMenuItem(radares,0,"Ativar Radares");
	AddMenuItem(radares,0,"Desativar Radares");
	AddMenuItem(radares,0,"Sair");
	
	
	SetTimer("Bancos", 1000, 1);
	SetTimer("CheckFuel", 62000, 1);
	SetTimer("MoneyGrubScoreUpdate", 1000, 1);
	SetTimer("TempoPrisao", 1000, 1);
	SetTimer("Taxi", 5000, 1);
	SetTimer("MTaxi", 5000, 1);
	SetTimer("Tempo", 60000, 1);
	SetTimer("PrevisaoDoTempo", 60000, 1);
	SetTimer("PrevisaoDoTempo2", 60000, 1);
	SetTimer("FuelDown", RunOutTime, 1);
	SetTimer("Cheat", 600000, 1);
	SetTimer("Speed",1000,true);
	return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
	SetPlayerInterior(playerid,6);
	SetPlayerPos(playerid,768.2721,-36.8625,1000.6865);
	SetPlayerFacingAngle(playerid, 180.000);
	SetPlayerCameraPos(playerid,770.1794,-39.5800,1000.6865);
	SetPlayerCameraLookAt(playerid,768.2721,-36.8625,1000.6865);
	return 1;
	}

public OnGameModeExit()
{
	for(new i=0; i<MAX_PLAYERS; i++){
		if(IsPlayerConnected(i)){
			if(PLAYERLIST_authed[i] == 1) {
				udb_setAccState(PlayerName(i),GetPlayerMoney(i));
				new Float:health;
				GetPlayerHealth(i, health);
				udb_setHealth(PlayerName(i), health);
				printf("Os dados de %s (ID: %d) foram salvos com sucesso\n",PlayerName(i),i);
				DestroyMenu(radares);
			}
		}
	}
	print("Saindo do MPA Reload RPG");
	return 1;
}

public OnPlayerConnect(playerid)
{
    TextDrawShowForPlayer(playerid, Texto);
    TogglePlayerClock(playerid, worldTime);
	SendClientMessage(playerid, COR_COP_ELITE, "MPA® Reload RPG");
	SendClientMessage(playerid, COR_AMARELO_CLARO, "Precisa de Ajuda? /ajuda");
	SendClientMessage(playerid, COR_AMARELO_CLARO, "Quais Comandos? /comandos");
	SendClientMessage(playerid, COR_AMARELO_CLARO, "Nunca Jogou? /aprender");
	SetPlayerMapIcon(playerid, 1, -2431.1716, 67.0822, 35.1719, 52, 0xFFFFFFFF);//banco sf centro
	SetPlayerMapIcon(playerid, 2, -1981.4067, 165.7179, 27.6875, 52, 0xFFFFFFFF);//banco sf rodoviaria
	SetPlayerMapIcon(playerid, 3, -2670.0745, 636.9832, 14.4531, 52, 0xFFFFFFFF);//banco sf hospital
	SetPlayerMapIcon(playerid, 4, -2206.0032, -2290.7778, 30.6250, 52, 0xFFFFFFFF);//banco ap
	SetPlayerMapIcon(playerid, 5, 1707.6603, -1683.2781, 13.5469, 52, 0xFFFFFFFF);//banco ls principal
	SetPlayerMapIcon(playerid, 6, 395.8569, -1805.9064, 7.8380, 52, 0xFFFFFFFF);//banco ls secuntario
	SetPlayerMapIcon(playerid, 7, -181.5996, 1137.5221, 19.7422, 52, 0xFFFFFFFF);//banco fc
	SetPlayerMapIcon(playerid, 8, 1582.7406, 1757.4973, 10.8203, 52, 0xFFFFFFFF);//banco hospital lv
	SetPlayerMapIcon(playerid, 9, -2651.6501, 634.4510, 14.4531, 22, 0xFFFFFFFF);//hospital sf
	SetPlayerMapIcon(playerid, 10, -319.0593, 1061.6935, 19.7422, 22, 0xFFFFFFFF);//hospital fc
	SetPlayerMapIcon(playerid, 11, -1514.7489, 2528.3391, 55.7214, 22, 0xFFFFFFFF);//hospital ap
	SetPlayerMapIcon(playerid, 12, 1173.9358, -1324.5092, 14.9922, 22, 0xFFFFFFFF);//hospital ls
	SetPlayerMapIcon(playerid, 13, -2025.0167, 66.8148, 28.4352,20, 0xFFFFFFFF); // BOMBEIRO
	SetPlayerMapIcon(playerid, 14, 2237.6768, 2453.6729, 10.7541, 30, 0xFFFFFFFF); // DELEGACIA
	SetPlayerMapIcon(playerid, 15, -1605.3073, 718.3339, 11.9387, 30, 0xFFFFFFFF); // DELEGACIA
	SetPlayerMapIcon(playerid, 16, -213.4346, 979.4687, 19.3326, 30, 0xFFFFFFFF); // DELEGACIA
	SetPlayerMapIcon(playerid, 17, -2163.4719, -2386.5974, 30.6250, 30, 0xFFFFFFFF); // DELEGACIA
	SetPlayerMapIcon(playerid, 18, -142.8048, 1124.1094, 19.3151, 36, 0xFFFFFFFF); // AUTO ESCOLA
	SetPlayerMapIcon(playerid, 19, -2129.7178, -2257.4451, 30.6250, 36, 0xFFFFFFFF); // AUTO ESCOLA
	SetPlayerMapIcon(playerid, 20, -2027.2357, -93.6293, 35.1641, 36, 0xFFFFFFFF); // AUTO ESCOLA
	SetPlayerMapIcon(playerid, 21,-2097.3877, -2255.6489, 30.6250, 51, 0xFFFFFFFF); // CARGA
	SetPlayerMapIcon(playerid, 22, -1738.5259, -78.4262, 3.3194, 51, 0xFFFFFFFF); // DESCARGA
	//gang zones
	GangZoneShowForPlayer(playerid, Pesca1, 0xDBDBFFFF);
	GangZoneShowForPlayer(playerid, Plantacao, 0x336600AA);
	GangZoneShowForPlayer(playerid, VendaMilho, 0xF0E68CAA);
	GangZoneShowForPlayer(playerid, Caca1, 0xAA3333AA);
	new string[256];
  	format(string, sizeof(string), "* %s acabou de entrar.", PlayerName(playerid));
	SendClientMessageToAll(COR_COP_ELITE, string);
	if (udb_Exists(PlayerName(playerid))) {
	SendClientMessage(playerid, COR_LARANJA, "Você já está registrado. Faça login com /logar [senha]");
	return 1;
	}
	if (!udb_Exists(PlayerName(playerid))) {
	SendClientMessage(playerid, COR_VERMELHO, "Você não está registrado. Registre-se com /registrar [senha]");
	return 1;
	}
	PLAYERLIST_authed[playerid] = 0;
	AreaBanco[playerid] = 0;
	Log[playerid] = 0;
	return false;
}

public OnPlayerDisconnect(playerid, reason)
{
	if (PLAYERLIST_authed[playerid] == 1) {
		PLAYERLIST_authed[playerid] = 0;
		udb_setAccState(PlayerName(playerid),GetPlayerMoney(playerid));
		new Float:health;
		GetPlayerHealth(playerid, health);
		udb_setHealth(PlayerName(playerid), health);
 		new msg[256];
		switch (reason){
 		case 0: {
				format(msg,sizeof(msg),"* %s saiu do servidor (Queda de Conexão)", PlayerName(playerid));
				SendClientMessageToAll(COR_COP_ELITE, msg);
			}
			case 1: {
				format(msg,sizeof(msg), "* %s saiu do servidor (Vontade Propria)", PlayerName(playerid));
				SendClientMessageToAll(COR_COP_ELITE, msg);
			}
			case 2: {
				format(msg,sizeof(msg), "* %s saiu do servidor (Kickado/Banido)", PlayerName(playerid));
				SendClientMessageToAll(COR_COP_ELITE, msg);
			}
		}
	}
	return 0;
}

public OnPlayerSpawn(playerid)
{
	zoneupdates[playerid] = 1;
	player_zone[playerid] = -1;
	if(!zoneupdate) zoneupdate = SetTimer("update_zones",1000,4);
    if(Profissao[playerid] == DESEMPREGADO) {
		SetPlayerColor(playerid, COR_DESEMPREGADO); // Cinza
		GivePlayerWeapon(playerid,6,0);//shevel
	}
	else if(Profissao[playerid] == ENTREGADOR_PIZZA) {
	    SetPlayerColor(playerid,COR_ENTREGADOR_PIZZA);
	    GivePlayerWeapon(playerid,2,1);//taco de golf
	}
	else if(Profissao[playerid] == BARMAN) {
		SetPlayerColor(playerid, COR_BARMAN); // Bege
		GivePlayerWeapon(playerid,2,0);//taco de golf
	}
	else if(Profissao[playerid] == SORVETEIRO) {
		SetPlayerColor(playerid, COR_SORVETEIRO);
		GivePlayerWeapon(playerid,8,1);//katana
	}
	else if(Profissao[playerid] == VENDEDOR_LANCHE) {
		SetPlayerColor(playerid, COR_VENDEDOR_LANCHES);
		GivePlayerWeapon(playerid,5,0);//bastão basebool
	}
	else if(Profissao[playerid] == PARAMEDICO) {
		SetPlayerColor(playerid, COR_PARAMEDICO);
		GivePlayerWeapon(playerid,22,80);//colt 45
	}
	else if(Profissao[playerid] == INSTRUTOR_DE_DIRECAO) {
		SetPlayerColor(playerid, COR_INSTRUTOR); // VClaro
		GivePlayerWeapon(playerid,5,0);//bastão basebool
	}
	else if(Profissao[playerid] == FRENTISTA) {
		SetPlayerColor(playerid, COR_FRENTISTA); // VClaro
		GivePlayerWeapon(playerid,22,80);//colt 45
	}
	else if(Profissao[playerid] == TAXISTA) {
		SetPlayerColor(playerid, COR_TAXISTA); // Amarelo
		GivePlayerWeapon(playerid,6,1);//shovel
	}
	else if(Profissao[playerid] == MOTO_TAXI) {
	    SetPlayerColor(playerid, COR_MOTO_TAXI);
	    GivePlayerWeapon(playerid,6,1);//shovel
	}
	else if(Profissao[playerid] == TAXI_AERIO) {
	    SetPlayerColor(playerid, COR_TAXI_AEREO);
	    GivePlayerWeapon(playerid,6,1);//shovel
	    GivePlayerWeapon(playerid,24,80);//desert eagle
	}
	else if(Profissao[playerid] == SEQUESTRADOR) {
	    SetPlayerColor(playerid, COR_SEQUESTRADOR);
	    GivePlayerWeapon(playerid,6,1);//shovel
	}
	else if(Profissao[playerid] == ASSASSINO) {
		SetPlayerColor(playerid, COR_ASSASSINO); // Vermelho
		GivePlayerWeapon(playerid,23,80);//desert eagle
		GivePlayerWeapon(playerid,32,450);//tec 9
		GivePlayerWeapon(playerid,8,1);//motoserra
		GivePlayerWeapon(playerid,25,27);// combat shotgun
	}
	else if(Profissao[playerid] == ASSALTANTE) {
	    SetPlayerColor(playerid,COR_ASSALTANTE);
	    GivePlayerWeapon(playerid,24,80);//desert eagle
	    GivePlayerWeapon(playerid,26,42);// cano cerrado
	    GivePlayerWeapon(playerid,29,500);//MP 5
	}
	else if(Profissao[playerid] == LADRAO_CARROS) {
	    SetPlayerColor(playerid,COR_LADRAO_CARROS);
	    GivePlayerWeapon(playerid,24,80);//desert eagle
	    GivePlayerWeapon(playerid,29,500);//MP 5
		GivePlayerWeapon(playerid,2,0);//bastão
	}
	else if(Profissao[playerid] == TRAFICANTE) {
	    SetPlayerColor(playerid,COR_TRAFICANTE);
	    GivePlayerWeapon(playerid,24,80);//desert eagle
	    GivePlayerWeapon(playerid,26,42);// cano cerrado
	    GivePlayerWeapon(playerid,29,500);//MP 5
	}
	else if(Profissao[playerid] == VENDEDOR_DE_ARMAS) {
	    SetPlayerColor(playerid,COR_VENDEDOR_ARMAS);
	    GivePlayerWeapon(playerid,24,80);//desert eagle
	    GivePlayerWeapon(playerid,26,42);// cano cerrado
	    GivePlayerWeapon(playerid,29,500);//MP 5
	    GivePlayerWeapon(playerid,42,400);
	}
	else if(Profissao[playerid] == CACADOR) {
		SetPlayerColor(playerid, COR_CACADOR);
		GivePlayerWeapon(playerid,5,0);//bastão basebool
	}
	else if(Profissao[playerid] == PESCADOR) {
		SetPlayerColor(playerid, COR_PESCADOR); // Bege
		GivePlayerWeapon(playerid,5,0);//bastão basebool
	}
	else if(Profissao[playerid] == AGRICULTOR) {
		SetPlayerColor(playerid, COR_AGRICULTOR); // Bege
		GivePlayerWeapon(playerid,5,0);//bastão basebool
	}
	else if(Profissao[playerid] == COP_CIVIL) {
		SetPlayerColor(playerid, COR_COP_CIVIL); // Azul
 		GivePlayerWeapon(playerid,22,80);//colt 45
		GivePlayerWeapon(playerid,3,1);// stick cop
	}
	else if(Profissao[playerid] == COP_RODOVIARIO) {
		SetPlayerColor(playerid, COR_COP_RODOVIARIO); // Azul
 		GivePlayerWeapon(playerid,22,80);//colt 45
		GivePlayerWeapon(playerid,3,1);// stick cop
	}
	else if(Profissao[playerid] == COP_ELITE) {
		SetPlayerColor(playerid, COR_COP_ELITE); // Azul Claro
		GivePlayerWeapon(playerid,3,0);//stick cop
		GivePlayerWeapon(playerid,29,500);//MP 5
		GivePlayerWeapon(playerid,27,100);//combat chotgun
	}
	else if(Profissao[playerid] == DELEGADO) {
	    SetPlayerColor(playerid, COR_DELEGADO); //Azul Escuro
	    GivePlayerWeapon(playerid,24,80);//desert eagle
		GivePlayerWeapon(playerid,3,1);// stick cop
		GivePlayerWeapon(playerid,26,42);// cano cerrado
		GivePlayerWeapon(playerid,22,80);//colt 45
	}
	else if(Profissao[playerid] == JUIZ) {
		SetPlayerColor(playerid, COR_JUIZ); // verde
		GivePlayerWeapon(playerid,15,0);//cane
		GivePlayerWeapon(playerid,22,80);//colt 45
	}
	else if(Profissao[playerid] == NARCOTICOS) {
		SetPlayerColor(playerid, COR_NARCOTICOS); // Azul Claro
		GivePlayerWeapon(playerid,3,0);//stick cop
		GivePlayerWeapon(playerid,29,500);//MP 5
		GivePlayerWeapon(playerid,27,100);//combat chotgun
	}
	else if(Profissao[playerid] == POLICIA_FLORESTAL) {
		SetPlayerColor(playerid, COR_POLICIA_FLORESTAL); // verde escuro
		GivePlayerWeapon(playerid,15,0);//cane
		GivePlayerWeapon(playerid,22,300);//colt 45
	}
	else if(Profissao[playerid] == IBAMA) {
		SetPlayerColor(playerid, COR_IBAMA); // verde azul
		GivePlayerWeapon(playerid,15,0);//cane
		GivePlayerWeapon(playerid,22,300);//colt 45
	}
	else if(Profissao[playerid] == EXERCITO) {
		SetPlayerColor(playerid, COR_EXERCITO); // Azul Claro
		GivePlayerWeapon(playerid,3,0);//stick cop
		GivePlayerWeapon(playerid,29,500);//MP 5
		GivePlayerWeapon(playerid,27,100);//combat chotgun
		GivePlayerWeapon(playerid,31,200);//M4
	}
	else if(Profissao[playerid] == ADVOGADO) {
		SetPlayerColor(playerid, COR_ADVOGADO); // verde azul
		GivePlayerWeapon(playerid,15,0);//cane
		GivePlayerWeapon(playerid,22,300);//colt 45
	}
	else if(Profissao[playerid] == SEGURANÇA) {
		SetPlayerColor(playerid, COR_SEGURANÇA); // Azul claro
		GivePlayerWeapon(playerid,24,400);//desert eagle
		GivePlayerWeapon(playerid,26,700);//sawnoff
	}
	else if(Profissao[playerid] == MOTORISTA_PARTICULAR) {
		SetPlayerColor(playerid, COR_MOTORISTA); // Laranja
		GivePlayerWeapon(playerid,41,900);//spray
	}
	else if(Profissao[playerid] == MOTORISTA_DE_ONIBUS) {
		SetPlayerColor(playerid, COR_MOTORISTA_ONIBUS); // Claro
		GivePlayerWeapon(playerid,42,400);//spray
	}
	else if(Profissao[playerid] == MENDINGO) {
		SetPlayerColor(playerid, COR_MENDINGO); // Claro
		GivePlayerWeapon(playerid,42,400);//spray
	}
	else if(Profissao[playerid] == VENDEDOR_DE_CARROS) {
		SetPlayerColor(playerid, COR_VENDEDOR); // Verde
		GivePlayerWeapon(playerid,2,0);
	}
	else if(Profissao[playerid] == CORRETOR) {
		SetPlayerColor(playerid, COR_CORRETOR); // Marfin
		GivePlayerWeapon(playerid,15,0);
	}
	else if(Profissao[playerid] == SEGURADOR) {
		SetPlayerColor(playerid, COR_SEGURADOR);
		GivePlayerWeapon(playerid,5,0);//bastão basebool
	}
	else if(Profissao[playerid] == JORNALISTA) {
		SetPlayerColor(playerid, COR_JORNALISTA);
		GivePlayerWeapon(playerid,5,0);//bastão basebool
	}
	else if(Profissao[playerid] == CAMINHONEIRO) {
		SetPlayerColor(playerid, COR_CAMINHONEIRO); // gold
		GivePlayerWeapon(playerid,15,0);//cane
		GivePlayerWeapon(playerid,22,300);//colt 45
	}
	else if(Profissao[playerid] == TRANSPORTE_GAS) {
		SetPlayerColor(playerid, TRANSPORTE_GAS); // gold
		GivePlayerWeapon(playerid,15,0);//cane
		GivePlayerWeapon(playerid,22,300);//colt 45
    }
	else if(Profissao[playerid] == CONFISCADOR_CARROS) {
		SetPlayerColor(playerid, COR_CONFISCADOR_CARROS); // gold
		GivePlayerWeapon(playerid,15,0);//cane
		GivePlayerWeapon(playerid,22,300);//colt 45
	}
	else{
	    SetPlayerColor(playerid, COR_DESEMPREGADO);
	}
    PrecoCorrida[playerid] = 0;
	SetPlayerInterior(playerid, 0);
	if(PLAYERLIST_authed[playerid] == 0){
		SetPlayerPos(playerid, -1958.5107, 293.6747, 35.4688);
		SetPlayerFacingAngle(playerid, 90.0000);
		TogglePlayerControllable(playerid, 0);
	  	return 1;
	}
	if(udb_getPrisao(PlayerName(playerid)) == 1){
		SetPlayerInterior(playerid, 6);
        SendClientMessage(playerid, COR_VERMELHO, "Você cometeu algum crime e foi preso, ficará 5 minutos na cadeia.");
        SendClientMessage(playerid, COR_AMARELO, "Você pode pagar a fiança (/fianca) por R$1500.");
        Presos[playerid] = 1;
		return 1;
	}
	else{
		TogglePlayerControllable(playerid, 1);
   		return 1;
	}
}
public OnPlayerDeath(playerid, killerid, reason)
{
    if(GetClosestHospital(playerid) == 0){
    	SetSpawnInfo(playerid, 1, udb_getSkin(PlayerName(playerid)), -2651.6501, 634.4510, 14.4531, 180.0000, 0, 0, 0, 0, 0, 0);
    }
    else if(GetClosestHospital(playerid) == 1){
    	SetSpawnInfo(playerid,1,udb_getSkin(PlayerName(playerid)),1173.5842,-1324.5615,15.1953,278.4624,0,0,0,0,0,0);
    }
    else if(GetClosestHospital(playerid) == 2){
        SetSpawnInfo(playerid,1,udb_getSkin(PlayerName(playerid)),2031.9415,-1404.3578,17.2614,165.8180,0,0,0,0,0,0);
    }
    else if(GetClosestHospital(playerid) == 3){
        SetSpawnInfo(playerid,1,udb_getSkin(PlayerName(playerid)),1582.5615,1768.7921,10.8203,93.7454,0,0,0,0,0,0);
    }
    else if(GetClosestHospital(playerid) == 4){
        SetSpawnInfo(playerid,1,udb_getSkin(PlayerName(playerid)),-319.0593,1061.6935,19.7422,0.000,0,0,0,0,0,0);
    }
	GameTextForPlayer(playerid, "Detonado", 1000, 2);
 	new string[256];
	format(string, sizeof(string), "* %s ficou incosiente e foi levado ao hospital.", PlayerName(playerid));
	SendClientMessageToAll(COR_COP_ELITE, string);
	printf("O Jogador %s(id: %d) ficou inconsiente e foi levado ao hospital.", PlayerName(playerid),playerid);
	SendClientMessage(playerid, COR_VERMELHO, "Você foi encontrado quase morto e foi levado ao Hospital.");
    SetPlayerInterior(playerid,0);
    if(Seguro[playerid] == 0){
    	udb_setBankMoney(PlayerName(playerid), udb_getBankMoney(PlayerName(playerid)) - 150);
		SendClientMessage(playerid, COR_VERMELHO, "O tratamento ficou em R$150 e foi descontado direto de sua conta bancaria.");
	}
    if(Seguro[playerid] == 1){
    	udb_setBankMoney(PlayerName(playerid), udb_getBankMoney(PlayerName(playerid)) - 150);
    	SendClientMessage(playerid, COR_VERMELHO, "O seu seguro de vida cobriu o valor do tratamento que foi de R$150.");
	}
	if(Procurados[playerid] == 1){
	    SetSpawnInfo(playerid, 1, udb_getSkin(PlayerName(playerid)), 262.9540, 78.4339, 1001.0391, 270.0000, 0, 0, 0, 0, 0, 0);
	    udb_setPrisao(PlayerName(playerid), 1);
	}
	if(Presos[playerid] == 1){
	    SetSpawnInfo(playerid, 1, udb_getSkin(PlayerName(playerid)), 262.9540, 78.4339, 1001.0391, 270.0000, 0, 0, 0, 0, 0, 0);
	    udb_setPrisao(PlayerName(playerid), 1);
	}
	if(killerid == INVALID_PLAYER_ID) {
        SendDeathMessage(INVALID_PLAYER_ID,playerid,reason);
	}
	else{
		SendDeathMessage(killerid,playerid,reason);
		if(GetPlayerMoney(playerid) > 0)  {
			GivePlayerMoney(killerid, GetPlayerMoney(playerid));
		}
 	}
	return 1;
}

public OnVehicleSpawn(vehicleid)
{
	printf("OnVehicleSpawn(%d)", vehicleid);
	return 1;
}

public OnVehicleDeath(vehicleid, killerid)
{
	printf("OnVehicleDeath(%d, %d)", vehicleid, killerid);
	return 1;
}

public OnPlayerText(playerid, text[])
{
	if (Mudo[playerid] == 1)
	{
	SendClientMessage(playerid, COR_AZUL, "Voce esta silenciado");
	return 0;
	}

    fixchars(text);
	if (Calling[playerid] > -1 && Answered[playerid] == 1)
	{
    	new string[256];
		new sendername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "%s: %s", sendername, text);
		SendClientMessage(Calling[playerid], COR_CONFISCADOR_CARROS, string);
		format(string, sizeof(string), "%s: %s", sendername, text);
		SendClientMessage(playerid, COR_CONFISCADOR_CARROS, string);
		format(string, sizeof(string), "%s: %s", sendername, text);
		print(string);
		format(string, sizeof(string), "%s: %s", sendername, text);
		print(string);
		return 0;
	}
	printf("%s id %d enviou uma mensagem: %s",PlayerName(playerid),playerid,text);
	return 1;
}
public OnPlayerCommandText(playerid, cmdtext[])
{
    fixchars(cmdtext);
	new playermoney;
    new cmd[256];
	new giveplayerid, moneys, idx;
    new giveplayer[MAX_PLAYER_NAME];
    new sendername[MAX_PLAYER_NAME];

	cmd = strtok(cmdtext, idx);
// SUICIDE COMMAND
	if(strcmp(cmd, "/kill", true) == 0) {
        if(Presos[playerid] == 0){
			SetPlayerHealth(playerid,0.0);
			printf("%s se suicidou",PlayerName(playerid));
			return 1;
			}
			else{
        	SendClientMessage(playerid,COR_VERMELHO,"Você está preso, não pode se suicidar!");
        	return 1;
		}
	}
	if(strcmp(cmd, "/sms", true) == 0){
		new tmp[256];
		new mensagem[256];
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)){
			SendClientMessage(playerid, COR_VERMELHO, "/sms [numero do celular] [mensagem]");
			return 1;
		}
	    SendClientMessage(playerid, COR_COP_ELITE, "Mensagem Enviada.");
		format(tmp, sizeof(tmp), "%Nova Mensagem de %s:", PlayerName(playerid));
		SendClientMessage(giveplayerid, COR_VERDE, tmp);
		format(tmp, sizeof(tmp), "%s", mensagem);
		SendClientMessage(giveplayerid, COR_CINZA, tmp);
		return 1;
	}
	if(strcmp(cmd,"/locar",true)==0){
        if(Profissao[playerid] == LOCADOR_DE_CARROS || IsPlayerAdmin(playerid)){
	    	new tmp[256];
	    	new msg[256];
            new plid, minutos;
            tmp = strtok(cmdtext,idx);
			if(!strlen(tmp)){
			    SendClientMessage(playerid,COR_VERMELHO,"/locar [id] [tempo]");
				return 1;
			}
			plid = strlen(tmp);
			minutos = strlen(tmp);
			if(IsPlayerConnected(plid)){
				if(GetPlayerState(plid) == PLAYER_STATE_DRIVER){
					SetTimerEx("CarroLocado",60000*minutos,0,"d",GetPlayerVehicleID(plid));
					format(msg,sizeof(msg),"%s te locou este carro por %d minutos.", PlayerName(playerid),minutos);
  					SendClientMessage(plid, COR_VERDE,msg);
    				format(msg,sizeof(msg),"Você locou este carro para %s por %d minutos.", PlayerName(playerid),minutos);
	    			SendClientMessage(playerid, COR_VERDE,msg);
	    			Locado[GetPlayerVehicleID(plid)] = 1;
	    			return 1;
	    			}
	    			else{
					SendClientMessage(playerid, COR_VERMELHO, "O jogador precisa estar em um veículo.");
					return 1;
				}
			}
			else{
    			SendClientMessage(playerid, COR_VERMELHO, "Jogador não conectado/logado.");
				return 1;
			}
		}
		else{
    		SendClientMessage(playerid, COR_VERMELHO, "Você não é Locador de Carros.");
			return 1;
		}
	}
	
	if(strcmp(cmd, "/passagemsf", true) == 0) {
	    if(IsPlayerInCheckpoint(playerid)){
	    	DisablePlayerCheckpoint(playerid);
	        SetPlayerPos(playerid,1.6127, 34.7411, 1199.0);
	        SetPlayerInterior(playerid,1);
	        SetTimerEx("PassagemSF", 60000,0,"%d",playerid);
	        SendClientMessage(playerid, COR_AZUL, "Você comprou uma passagem para San Fierro, dentro de 1 minuto você estará desembarcando no aeroporto.");
			return 1;
		}
		else{
			SendClientMessage(playerid, COR_AMARELO, "Você precisa no aeroporto para usar este comando.");
			return 1;
		}
	}

	if(strcmp(cmd, "/setcone", true) == 0) {
        if(Profissao[playerid] == COP_RODOVIARIO || IsPlayerAdmin(playerid)) {
            new Float:X, Float:Y, Float:Z;
            GetPlayerPos(playerid,X, Y, Z);
			SetTimerEx("SetCone",5000,0,"fff", X, Y, Z);
            SendClientMessage(playerid, COR_VERDE, "Voce adicionou um cone neste local, dentro de 5 segundos ele aparecerá.");
			return 1;
		}
		else{
			SendClientMessage(playerid, COR_VERMELHO, "Você não é Policial Rodoviario");
            return 1;
		}
	}
	if(strcmp(cmd,"/teleportar",true) == 0) {
	    if(IsPlayerAdmin(playerid)) {
			new tmp[256];
			new plid1, plid2;
			new Float:X, Float:Y, Float:Z;
			tmp = strtok(cmdtext,idx);
			if(!strlen(tmp)){
			    SendClientMessage(playerid,COR_VERMELHO,"/teleportar [id] [id_destino]");
				return 1;
			}
			plid1 = strlen(tmp);
			plid2 = strlen(tmp);
   			if(IsPlayerConnected(plid1)){
   				if(IsPlayerConnected(plid1)){
					SendClientMessage(playerid,COR_VERDE,"Feito.");
					GetPlayerPos(plid1, X, Y, Z);
	    			SetPlayerPos(plid2, X, Y, Z);
	    			SetPlayerInterior(plid2,GetPlayerInterior(plid1));
					printf("%s teleportou %s a %s",PlayerName(playerid),PlayerName(plid1),PlayerName(plid2));
					return 1;
				} else {
					SendClientMessage(playerid,COR_VERMELHO,"Jogador não conectado/logado");
					return 1;
				}
			} else {
			    SendClientMessage(playerid,COR_VERMELHO,"Jogador não conectado/logado");
				return 1;
			}
		} else {
		    SendClientMessage(playerid,COR_VERMELHO,"Você não tem permissão!");
			return 1;
		}
	}
	
	if(strcmp(cmd, "/carteira", true) == 0) {
		if(AreaEscola[playerid] == 1){
            new string[256];
			new tmp[256];
			new carteira;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)){
				SendClientMessage(playerid, COR_VERMELHO, "/carteira [id_da_carteira]");
				return 1;
			}
			carteira = strval(tmp);
			if(carteira < 1 || carteira > 3){
			    SendClientMessage(playerid, COR_VERMELHO, "Carteira Invalida, As carteiras são de 1 a 3.");
			    SendClientMessage(playerid, COR_VERMELHO, "Para ver os ids das carteiras digite /carteiras.");
				return 1;
			}
			else{
				SendClientMessage(playerid, COR_ADVOGADO, "Carteira Solicitada.");
				for(new i=0; i<MAX_PLAYERS; i++){
					if(Profissao[i] == JUIZ || IsPlayerAdmin(playerid)){
						format(string, sizeof(string), "o Jogador %s solicita uma carteira %s.", PlayerName(playerid),CarteiraName[carteira]);
						printf("%s solicita uma carteira %s",PlayerName(playerid),CarteiraName[carteira]);
						SendClientMessage(i, COR_VERDE, string);
						return 1;
					}
					else{
						SendClientMessage(playerid, COR_VERMELHO, "Você não está na Auto Escola!");
						return 1;
					}
				}
			}
		}
	}

	if(strcmp(cmd, "/advogado", true)==0){
 		SendClientMessage(playerid, COR_VERDE, "Um dos advogados de San Andreas, ira lhe defender no tribunal.");
   		for(new i=0; i<MAX_PLAYERS; i++){
     		if(IsPlayerConnected(i) && Profissao[i] == ADVOGADO || IsPlayerAdmin(i)){
     		    new string[256];
				format(string, sizeof(string), "O jogador %s solicita um advogado.", PlayerName(playerid));
				SendClientMessage(i, COR_VERDE, string);
				printf("%s solicita um advogado",PlayerName(playerid));
				return 1;
			}
		}
	}

	if (strcmp(cmd, "/processo", true)==0){
		if(Profissao[playerid] == ADVOGADO || IsPlayerAdmin(playerid)){
			new tmp[256];
			new string[256];
	    	strmid(tmp, cmdtext, 10, strlen(cmdtext));
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COR_VERMELHO, "/processo [nome_do_réu] [descrição_da_causa]");
				return 1;
			}
		    SendClientMessage(playerid, COR_ADVOGADO, "Voce fez a defesa do seu cliente e o processo está em andamento, aguarde a sentença do juiz");
		    for(new i=0; i<MAX_PLAYERS; i++){
		        if(Profissao[i] == JUIZ || IsPlayerAdmin(playerid)){
					format(string, sizeof(string), "O Dr.%s entrou com um processo em defesa do réu %s.", PlayerName(playerid), tmp);
					SendClientMessage(i, COR_VERDE, string);
					printf("%s entrou com um preocesso: %s",PlayerName(playerid), tmp);
					return 1;
		        }
			}
		} else {
		    SendClientMessage(playerid, COR_VERMELHO, "Você não é Advogado!");
			return 1;
		}
	}
	
	if(strcmp(cmd, "/piracemaon",true) == 0) {
	    if(Profissao[playerid] == IBAMA || IsPlayerAdmin(playerid)) {
	        if(Piracema == 1){
	            SendClientMessage(playerid,COR_VERMELHO,"A piracema já está ativada!");
	      		return 1;
	        } else {
	            SendClientMessageToAll(COR_VERMELHO,"A piracema está ativada, quem for pego pescando será preso.");
	            SendClientMessage(playerid,COR_BRANCO,"Você ativou a piracema.");
	            printf("%s ativou a piracema",PlayerName(playerid));
	            Piracema = 1;
				return 1;
	        }
	    } else {
			SendClientMessage(playerid,COR_VERMELHO,"Você não é do Ibama!");
			return 1;
	    }
	}

	if(strcmp(cmd,"/piracemaoff",true) == 0) {
	    if(Profissao[playerid] == IBAMA || IsPlayerAdmin(playerid)) {
	        if(Piracema == 0){
	            SendClientMessage(playerid,COR_VERMELHO,"A piracema não está ativada!");
				return 1;
			} else {
			    SendClientMessageToAll(COR_VERDE,"A piracema agora está desativada. Pode pescar à vontade!");
			    SendClientMessage(playerid,COR_BRANCO,"Feito.");
			    printf("%s desativou a piracema",PlayerName(playerid));
			    Piracema = 0;
				return 1;
			}
		} else {
		    SendClientMessage(playerid,COR_VERMELHO,"Você não tem permissão!");
			return 1;
		}
	}

	if(strcmp(cmd,"/verpesca",true) == 0) {
	    if(Profissao[playerid] == IBAMA || IsPlayerAdmin(playerid)) {
			new tmp[256];
			new plid;
			tmp = strtok(cmdtext,idx);
			if(!strlen(tmp)){
			    SendClientMessage(playerid,COR_VERMELHO,"/verpesca [id]");
				return 1;
			}
			plid = strlen(tmp);
   			if(IsPlayerConnected(plid) && PLAYERLIST_authed[plid] == 1){
   			    if(PescaInProgress[plid] == 0){
   			        SendClientMessage(playerid,COR_VERDE,"O jogador não tem nem uma pesca.");
   			        printf("%s viu a pesca de %s e nao havia nem uma pesca",PlayerName(playerid),PlayerName(plid));
					return 1;
				} else {
				    SendClientMessage(playerid,COR_VERDE,"O jogador está pescando ou já pescou.");
				    printf("%s viu a pesca de %s e havia  pescas",PlayerName(playerid),PlayerName(plid));
					return 1;
				}
			} else {
			    SendClientMessage(playerid,COR_VERMELHO,"Jogador não conectado/logado");
				return 1;
			}
		} else {
		    SendClientMessage(playerid,COR_VERMELHO,"Você não é do Ibama!");
			return 1;
		}
	}

	if(strcmp(cmd, "/pescar", true) == 0) {
	    if(PescaInProgress[playerid] == 1) {
	    SendClientMessage(playerid, COR_VERMELHO, "Você já está pescando!");
	    }
		if(PescaInProgress[playerid] == 0){
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(playerid,X,Y,Z);
		if(X >= -2713.9858 && X <= -2628.4883 && Y <= 1938.3077 && Y >= 1559.1425){
			SendClientMessage(playerid,COR_VERDE,"Você lançou a rede de pesca. Espere ela voltar para concluir a pesca.");
  			printf("%s pescou",PlayerName(playerid));
			PescaInProgress[playerid] = 1;
			SetTimer("Pesca",36000,false);
			return 1;
			}
			else {
			SendClientMessage(playerid,COR_VERMELHO,"Você não está na área de pesca, consulte nosso site para uma referência.");
			return 1;
			}
		}
	}

	if(strcmp(cmd, "/sellpesca", true) == 0) {
	    new msg[256];
	    new quantia;
	    if(AreaCoopPesca[playerid] == 1){
	    	if(QtPescas[playerid] == 0){
	        	SendClientMessage(playerid, COR_VERMELHO, "Você não tem nenhuma pesca, como poderá vender?");
	        	return 1;
			} else {
		    	if(Profissao[playerid] == PESCADOR) {
		   			quantia = QtPescas[playerid]*130;
		   			GivePlayerMoney(playerid,quantia);
					format(msg,sizeof(msg),"Você vendeu %d pesca(s) por R$130 cada e faturou R$%d com a venda.",QtPescas[playerid],quantia);
					SendClientMessage(playerid, COR_VERDE, msg);
					printf("%s vendeu suas pescas",PlayerName(playerid));
					QtPescas[playerid] = 0;
					return 1;
				}
				else {
				    quantia = QtPescas[playerid]*100;
				    GivePlayerMoney(playerid,quantia);
				    format(msg,sizeof(msg),"Você vendeu %d pesca(s) por R$100 cada e faturou R$%d com a venda.",QtPescas[playerid],quantia);
					SendClientMessage(playerid, COR_VERDE, msg);
					printf("%s vendeu suas pescas",PlayerName(playerid));
					QtPescas[playerid] = 0;
					return 1;
				}
			}
		}
		else {
			SendClientMessage(playerid, COR_VERMELHO, "Você não está na Cooperativa de Pesca.");
		}
		return 1;
	}

	if(strcmp(cmd, "/cacaon",true) == 0) {
	    if(Profissao[playerid] == POLICIA_FLORESTAL || IsPlayerAdmin(playerid)) {
	        if(Piracema == 1){
	            SendClientMessage(playerid,COR_VERMELHO,"A temporada de caça já está ativada!");
	      		return 1;
	        } else {
	            SendClientMessageToAll(COR_VERMELHO,"A temporada de caça está ativada, quem for pego pescando será preso.");
	            SendClientMessage(playerid,COR_BRANCO,"Você ativou a temporada de caça.");
	            printf("%s ativou a temporada de caca",PlayerName(playerid));
	            TemporadaCaca = 1;
				return 1;
	        }
	    } else {
			SendClientMessage(playerid,COR_VERMELHO,"Você não é do Policia Florestal!");
			return 1;
	    }
	}

	if(strcmp(cmd, "/cacaoff",true) == 0) {
	    if(Profissao[playerid] == POLICIA_FLORESTAL || IsPlayerAdmin(playerid)) {
	        if(Piracema == 1){
	            SendClientMessage(playerid,COR_VERMELHO,"A temporada de caça já está desativada!");
	      		return 1;
	        } else {
	            SendClientMessageToAll(COR_VERMELHO,"A temporada de caça está desativada, pode pescar a vontade.");
	            SendClientMessage(playerid,COR_BRANCO,"Você desativou a temporada de caça.");
	            printf("%s desativou a temporada de caca",PlayerName(playerid));
	            TemporadaCaca = 1;
				return 1;
	        }
	    } else {
			SendClientMessage(playerid,COR_VERMELHO,"Você não é da Policia Florestal!");
			return 1;
	    }
	}

	if(strcmp(cmd, "/cacar", true) == 0) {
	    if(PescaInProgress[playerid] == 1) {
	    SendClientMessage(playerid, COR_VERMELHO, "Sua Presa não morreu ainda!");
	    }
		if(PescaInProgress[playerid] == 0){
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(playerid,X,Y,Z);
		if(X >= -2062.2964 && X <= -2020.8334 && Y >= -1616.9932 && Y <= -1510.9994){
			SendClientMessage(playerid,COR_VERDE,"Espere a presa exalar seus últimos minutos de vida, para poder vendê-la.");
			PescaInProgress[playerid] = 1;
			printf("%s acabou de cacar",PlayerName(playerid));
			SetTimer("Caca",36000,false);
			return 1;
			}
			else {
			SendClientMessage(playerid,COR_VERMELHO,"Você não está na área de caça, consulte nosso site para uma referência.");
			return 1;
			}
		}
	}
    if(strcmp(cmd, "/baladainfo", true) == 0) {
		if(AreaBalada[playerid] == 1){
    	    SendClientMessage(playerid, COR_VERMELHO, "Comandos da Balada Reload:");
    	    SendClientMessage(playerid, COR_AMARELO_CLARO, "/dancar [id] : Dança na balada.");
    	    SendClientMessage(playerid, COR_AMARELO_CLARO, "/bebervodca [quantia] : Bebe vodca.");
    	    SendClientMessage(playerid, COR_AMARELO_CLARO, "/bebercerveja [latas] : Bebe cerveja.");
			return 1;
		}
		else{
			SendClientMessage(playerid, COR_VERMELHO, "Você não está na Balada.");
			return 1;
		}
	}

	if(strcmp(cmd,"/sellcaca",true) == 0) {
	    if(Profissao[playerid] == CACADOR || IsPlayerAdmin(playerid)){
		    if(AreaCoopCaca[playerid] == 0){
		        SendClientMessage(playerid, COR_VERMELHO, "Você não está na Cooperativa de Caça.");
				return 1;
			} else {
			    if(QtCacas[playerid] == 0){
			        SendClientMessage(playerid, COR_VERMELHO, "Você não tem caças acumuladas.");
					return 1;
				} else {
					new msg[256];
					new quantia;
					quantia = QtCacas[playerid]*100;
					format(msg, sizeof(msg),"Você vendeu %d caça(s) por R$100 cada e faturou R$%d com a venda.",QtCacas[playerid],quantia);
					SendClientMessage(playerid,COR_VERDE,msg);
					GivePlayerMoney(playerid,quantia);
					printf("%s vendeu sua caca",PlayerName(playerid));
					QtCacas[playerid] = 0;
					return 1;
				}
			}
		} else {
		    SendClientMessage(playerid,COR_VERMELHO,"Você não tem permissão para isso!");
			return 1;
		}
	}

	if(strcmp(cmd,"/vercaca",true) == 0) {
	    if(Profissao[playerid] == POLICIA_FLORESTAL || IsPlayerAdmin(playerid)) {
			new tmp[256];
			new plid;
			tmp = strtok(cmdtext,idx);
			if(!strlen(tmp)){
			    SendClientMessage(playerid,COR_VERMELHO,"/verpesca [id]");
				return 1;
			}
			plid = strlen(tmp);
   			if(IsPlayerConnected(plid) && PLAYERLIST_authed[plid] == 1){
   			    if(CacaInProgress[plid] == 0){
   			        SendClientMessage(playerid,COR_VERDE,"O jogador não está caçando.");
   			        printf("%s viu a caca de %s e nao havia nem uma cacas",PlayerName(playerid),PlayerName(plid));
					return 1;
				} else {
				    SendClientMessage(playerid,COR_VERDE,"O jogador está caçando.");
				    printf("%s viu a caca de %s e havia cacas",PlayerName(playerid),PlayerName(plid));
					return 1;
				}
			} else {
			    SendClientMessage(playerid,COR_VERMELHO,"Jogador não conectado/logado");
				return 1;
			}
		} else {
		    SendClientMessage(playerid,COR_VERMELHO,"Você não é da Policia Florestal!");
			return 1;
		}
	}
	if(strcmp(cmd,"/prenderpesca",true) == 0) {
	    if(Profissao[playerid] == IBAMA || IsPlayerAdmin(playerid)) {
	        new tmp[256];
	        new plid;
	        tmp = strtok(cmdtext,idx);
	        if(!strlen(tmp)){
	            SendClientMessage(playerid,COR_VERMELHO,"/prenderpesca [id]");
				return 1;
			}
			plid = strlen(tmp);
			if(IsPlayerConnected(plid) && PLAYERLIST_authed[plid] == 1){
			    if(Piracema == 0){
			        SendClientMessage(playerid,COR_VERMELHO,"A piracema não está ativada para você efetuar a prisão!");
					return 1;
				}
				else {
				    if(PescaInProgress[plid] == 0){
				        SendClientMessage(playerid,COR_VERMELHO,"O jogador não está pescando!");
						return 1;
					}
					else {
					    if(GetDistanceBetweenPlayers(plid,playerid) < 21){
					        SendClientMessage(playerid,COR_VERMELHO,"Chegue mais perto para efetuar a prisão!");
							return 1;
						} else {
						    udb_setPrisao(PlayerName(plid),1);
						    LogarPlayer(plid);
						    printf("%s prendeu %s por pescas em temporada nao autorizada",PlayerName(playerid),PlayerName(plid));
						}
					}
				}
				return 1;
			} else {
			    SendClientMessage(playerid,COR_VERMELHO,"Jogador não conectado/logado");
			}
			return 1;
		} else {
		    SendClientMessage(playerid,COR_VERMELHO,"Você não é do Ibama!");
		}
		return 1;
	}
	if(strcmp(cmd, "/radar", true) == 0) {
	   if(Profissao[playerid] == CONFISCADOR_CARROS || IsPlayerAdmin(playerid)){
	   TogglePlayerControllable(playerid,false);
	   ShowMenuForPlayer(radares,playerid);
	   return 1;
	   }
	}
	if(strcmp(cmd,"/prendercaca",true) == 0) {
	    if(Profissao[playerid] == POLICIA_FLORESTAL || IsPlayerAdmin(playerid)) {
	        new tmp[256];
	        new plid;
	        tmp = strtok(cmdtext,idx);
	        if(!strlen(tmp)){
	            SendClientMessage(playerid,COR_VERMELHO,"/prenderpesca [id]");
				return 1;
			}
			plid = strlen(tmp);
			if(IsPlayerConnected(plid) && PLAYERLIST_authed[plid] == 1){
			    if(TemporadaCaca == 1){
			        SendClientMessage(playerid,COR_VERMELHO,"A temporada de caça está ativada, por isso você não pode prendê-lo!");
					return 1;
				} else {
				    if(CacaInProgress[plid] == 0){
				        SendClientMessage(playerid,COR_VERMELHO,"O jogador não está caçando!");
						return 1;
					} else {
					    if(GetDistanceBetweenPlayers(plid,playerid) < 21){
					        SendClientMessage(playerid,COR_VERMELHO,"Chegue mais perto para efetuar a prisão!");
							return 1;
						} else {
						    udb_setPrisao(PlayerName(plid),1);
						    LogarPlayer(plid);
						    printf("%s prendeu %s por pescas em temporada nao autorizada",PlayerName(playerid),PlayerName(plid));
						}
					}
				}
				return 1;
			} else {
			    SendClientMessage(playerid,COR_VERMELHO,"Jogador não conectado/logado");
			}
			return 1;
		} else {
		    SendClientMessage(playerid,COR_VERMELHO,"Você não é da Policia Florestal!");
		}
		return 1;
	}

	if(strcmp(cmd, "/plantar", true) == 0) {
		if(Profissao[playerid] == AGRICULTOR || IsPlayerAdmin(playerid)){
		    if(MilhoInProgress[playerid] == 1) {
		    SendClientMessage(playerid, COR_VERMELHO, "Você já está com o campo cheio!");
		    }
			if(MilhoInProgress[playerid] == 0){
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			if(X >= -1194.7273 && X <= -1007.1719 && Y >= -1064.6096 && Y <= -915.6717){
				SendClientMessage(playerid,COR_VERDE,"Plantado, espera o milho crescer para colher.");
				printf("%s plantou",PlayerName(playerid));
				MilhoInProgress[playerid] = 1;
				SetTimer("Plantacao",36000,false);
				return 1;
				}
				else {
				SendClientMessage(playerid,COR_VERMELHO,"Você não está na lavoura, consulte nosso site para uma referência.");
				return 1;
				}
  	 		} else {
    		SendClientMessage(playerid,COR_VERMELHO,"Você não é Agricultor!");
			return 1;
			}
		}
	}

	if(strcmp(cmd, "/colher", true) == 0) {
		if(Profissao[playerid] == AGRICULTOR || IsPlayerAdmin(playerid)){
		    if(PescaInProgress[playerid] == 0) {
		    SendClientMessage(playerid, COR_VERMELHO, "Você não plantou! Como que vai colher?");
		    }
			if(MilhoInProgress[playerid] == 1){
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			if(X >= -1194.7273 && X <= -1007.1719 && Y >= -1064.6096 && Y <= -915.6717){
				SendClientMessage(playerid,COR_VERDE,"Colhido, agora vá até a fazenda para vender sua colheita.");
				Milho[playerid] = 1;
				printf("%s colheu sua plantacao",PlayerName(playerid));
				SetTimer("Plantacao",36000,false);
				return 1;
				}
				else {
				SendClientMessage(playerid,COR_VERMELHO,"Você não está na lavoura, consulte nosso site para uma referência.");
				return 1;
				}
  	 		} else {
    		SendClientMessage(playerid,COR_VERMELHO,"Você não é Agricultor!");
			return 1;
			}
		}
	}

	if(strcmp(cmd,"/sellmilho",true) == 0) {
	    if(Profissao[playerid] == AGRICULTOR || IsPlayerAdmin(playerid)){
		    if(AreaCoopFazenda[playerid] == 0){
		        SendClientMessage(playerid, COR_VERMELHO, "Você não está na Fazenda.");
				return 1;
			} else {
			    if(Milho[playerid] == 0){
			        SendClientMessage(playerid, COR_VERMELHO, "Você não tem colheitas acumuladas.");
					return 1;
				} else {
					new msg[256];
					new quantia;
					quantia = Milho[playerid]*100;
					format(msg, sizeof(msg),"Você vendeu %d colheira(s) de milho por R$100 cada e faturou R$%d com a venda.",QtCacas[playerid],quantia);
					SendClientMessage(playerid,COR_VERDE,msg);
					printf("%s vendeu sua plantacao",PlayerName(playerid));
					GivePlayerMoney(playerid,quantia);
					Milho[playerid] = 0;
					return 1;
				}
			}
		} else {
		    SendClientMessage(playerid,COR_VERMELHO,"Você não é Agricultor!");
			return 1;
		}
	}

	if(strcmp(cmd,"/rcbaron",true)==0){
    	if(IsPlayerAdmin(playerid)){
    	    new Float:X,Float:Y,Float:Z,Float:ang;
    	    GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,ang);
    	    Veiculo[playerid] = CreateVehicle(464,X,Y,Z,ang,3,3,90000);
    	    PutPlayerInVehicle(playerid,Veiculo[playerid],0);
    	    SendClientMessage(playerid,COR_VERDE,"Para você brincar! xD");
    	    printf("%s pegou um rc baron",PlayerName(playerid));
    	    return 1;
		} else {
    		SendClientMessage(playerid,COR_VERMELHO,"Apenas admins!");
			return 1;
		}
	}

	if(strcmp(cmd,"/rcraider",true)==0){
 		new Float:X,Float:Y,Float:Z,Float:ang;
   		GetPlayerPos(playerid,X,Y,Z);
		GetPlayerFacingAngle(playerid,ang);
  		Veiculo[playerid] = CreateVehicle(465,X,Y,Z,ang,3,3,90000);
	   	PutPlayerInVehicle(playerid,Veiculo[playerid],0);
	    SendClientMessage(playerid,COR_VERDE,"Para você brincar! xD");
	    printf("%s pegou um rc raider",PlayerName(playerid));
		return 1;
	}

	if(strcmp(cmd,"/rcbandit",true)==0){
 		new Float:X,Float:Y,Float:Z,Float:ang;
   	    GetPlayerPos(playerid,X,Y,Z);
		GetPlayerFacingAngle(playerid,ang);
        Veiculo[playerid] = CreateVehicle(441,X,Y,Z,ang,3,3,90000);
        PutPlayerInVehicle(playerid,Veiculo[playerid],0);
        SendClientMessage(playerid,COR_VERDE,"Para você brincar! xD");
        printf("%s pegou um rc bandit",PlayerName(playerid));
        return 1;
	}

	if(strcmp(cmd,"/rcglobim",true)==0){
    	new Float:X,Float:Y,Float:Z,Float:ang;
	    GetPlayerPos(playerid,X,Y,Z);
		GetPlayerFacingAngle(playerid,ang);
        Veiculo[playerid] = CreateVehicle(501,X,Y,Z,ang,3,3,90000);
   	    PutPlayerInVehicle(playerid,Veiculo[playerid],0);
        SendClientMessage(playerid,COR_VERDE,"Para você brincar! xD");
        printf("%s pegou um rc globim",PlayerName(playerid));
        return 1;
	}
	if(strcmp(cmd,"/rctiger",true)==0){
    	if(IsPlayerAdmin(playerid)){
    	    new Float:X,Float:Y,Float:Z,Float:ang;
    	    GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,ang);
    	    Veiculo[playerid] = CreateVehicle(564,X,Y,Z,ang,3,3,90000);
    	    PutPlayerInVehicle(playerid,Veiculo[playerid],0);
    	    SendClientMessage(playerid,COR_VERDE,"Para você brincar! xD");
            printf("%s pegou um rc tiger",PlayerName(playerid));
    	    return 1;
		} else {
    		SendClientMessage(playerid,COR_VERMELHO,"Apenas admins!");
			return 1;
		}
	}
	if(strcmp(cmd,"/rccam",true)==0){
    	if(IsPlayerAdmin(playerid)){
    	    new Float:X,Float:Y,Float:Z,Float:ang;
    	    GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,ang);
    	    Veiculo[playerid] = CreateVehicle(594,X,Y,Z,ang,3,3,90000);
    	    PutPlayerInVehicle(playerid,Veiculo[playerid],0);
    	    SendClientMessage(playerid,COR_VERDE,"Para você brincar! xD");
    	    printf("%s pegou um rc cam",PlayerName(playerid));
    	    return 1;
		} else {
    		SendClientMessage(playerid,COR_VERMELHO,"Apenas admins!");
			return 1;
		}
	}
	
	if(strcmp(cmd,"/monstermpa",true)==0 && IsPlayerAdmin(playerid)){
        new Float:X,Float:Y,Float:Z,Float:ang;
        GetPlayerPos(playerid,X,Y,Z);
		GetPlayerFacingAngle(playerid,ang);
   	    Veiculo[playerid] = CreateVehicle(444,X,Y,Z,ang,3,3,1000);
        PutPlayerInVehicle(playerid,Veiculo[playerid],0);
     	SendClientMessage(playerid,COR_BRANCO,"Você fez o cheat do monster!");
     	printf("%s fez o cheat do monster",PlayerName(playerid));
   		return 1;
	}
	
	if(strcmp(cmd,"/vidempa",true)==0 && IsPlayerAdmin(playerid)){
 		SetPlayerHealth(playerid, 100);
 		SetVehicleHealth(GetPlayerVehicleID(playerid), 1000);
   		GivePlayerMoney(playerid, 250000);
	    SendClientMessage(playerid,COR_BRANCO,"Você fez o cheat de vida e dinheiro!");
	    printf("%s fez o cheat de vida e dinheiro",PlayerName(playerid));
	    return 1;
	}
	if(strcmp(cmd,"/trem",true)==0){
    	if(IsPlayerAdmin(playerid)){
    	    new Float:X,Float:Y,Float:Z,Float:ang;
    	    GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,ang);
    	    Veiculo[playerid] = CreateVehicle(538,X,Y,Z,ang,3,3,90000);
    	    PutPlayerInVehicle(playerid,Veiculo[playerid],0);
    	    SendClientMessage(playerid,COR_VERDE,"Agora você pode andar de trem!");
    	    printf("%s fez um trem",PlayerName(playerid));
    	    return 1;
		} else {
    		SendClientMessage(playerid,COR_VERMELHO,"Apenas admins!");
			return 1;
		}
	}
	if(strcmp(cmd,"/bonde",true)==0){
    	if(IsPlayerAdmin(playerid)){
    	    new Float:X,Float:Y,Float:Z,Float:ang;
    	    GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,ang);
    	    Veiculo[playerid] = CreateVehicle(449,X,Y,Z,ang,3,3,90000);
    	    PutPlayerInVehicle(playerid,Veiculo[playerid],0);
    	    SendClientMessage(playerid,COR_VERDE,"Belo Bonde! xD");
    	    printf("%s fez um bonde",PlayerName(playerid));
    	    return 1;
		} else {
    		SendClientMessage(playerid,COR_VERMELHO,"Apenas admins!");
			return 1;
		}
	}
	if(strcmp(cmd, "/rc", true) == 0) {
		SendClientMessage(playerid, COR_VERMELHO, "RC Disponiveis:");
		SendClientMessage(playerid, COR_AMARELO, "/rcbaron : Aviao de Controle(Apenas Admins)");
		SendClientMessage(playerid, COR_AMARELO, "/rcbandit : Carrinho de Controle");
		SendClientMessage(playerid, COR_AMARELO, "/rcraider : Helicoptero de Controle");
		SendClientMessage(playerid, COR_AMARELO, "/rcglobim : Helicoptero de Controle");
		SendClientMessage(playerid, COR_AMARELO, "/rccam : Vaso de Controle(Apenas Admins)");
		SendClientMessage(playerid, COR_AMARELO, "/rctiger : Tanque de Controle(Apenas Admins)");
		return 1;
	}

	if(strcmp(cmd, "/sair", true) == 0) {
		if(Paralize[playerid] == 0){
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER){
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
				return 1;
			}
			else{
				SendClientMessage(playerid, COR_VERMELHO, "Você precisa estar em um veículo para usar este comando.");
				return 1;
			}
		}
    	else{
			SendClientMessage(playerid, COR_VERMELHO, "Você está paralizado por um admin, não pode sair do veículo até que ele o desparalize.");
			return 1;
		}
	}
	
	if(strcmp(cmd, "/sequestrar", true)==0){
		if(Profissao[playerid] == SEQUESTRADOR || IsPlayerAdmin(playerid)){
		new tmp[256],plid;
		tmp = strtok(cmdtext,idx);
		if(!strlen(tmp)){
			SendClientMessage(playerid,COR_VERMELHO,"/sequestrar [id]");
			return 1;
		}
		plid = strlen(tmp);
		if(IsPlayerConnected(plid)){
	 		if(GetDistanceBetweenPlayers(plid,playerid) > 10){
    			SendClientMessage(playerid,COR_VERMELHO,"Você está muito longe chegue mais perto para entregar a pizza.");
				return 1;
			} else {
				SendClientMessage(playerid,COR_BRANCO,"Você sequestrou um jogador, seu chefe pagou o resgate adiantado.");
				SendClientMessage(plid,COR_VERDE,"Você foi sequestrado, ficará aqui até pagar resgate.");
				GivePlayerMoney(playerid,500);
				SetPlayerPos(plid, 1978.7238,-1603.9020,13.5401);
				TogglePlayerControllable(plid, 0);
				Sequestro[plid] = 1;
				return 1;
				}
			} else {
				SendClientMessage(playerid,COR_VERMELHO,"O jogador não esta conectado!");
				return 1;
			}
   		} else {
			SendClientMessage(playerid,COR_VERMELHO,"Você não é Sequestrador!");
			return 1;
    	}
    }
    
    if(strcmp(cmd,"/resgate",true) == 0){
    	if(Sequestro[playerid] == 0){
			SendClientMessage(playerid,COR_VERMELHO,"Você não está sequestrado!");
			return 1;
			} else {
			if(Sequestro[playerid] == 1){
			SendClientMessage(playerid,COR_VERDE,"Você pagou resgate e foi solto.");
			GivePlayerMoney(playerid,-500);
			SetPlayerPos(playerid, -2080.8171,-2449.7710,30.6250);
			TogglePlayerControllable(playerid, 1);
			Sequestro[playerid] = 0;
			return 1;
			}
		}
	}


	if(strcmp(cmd, "/calar", true)==0){
		if(IsPlayerAdmin(playerid)) {
		new tmp [256],plid;
		tmp = strtok(cmdtext,idx);
		if(!strlen(tmp)){
		SendClientMessage(playerid,COR_VERMELHO,"/calar [id]");
		return 1;
		}
		plid = strlen(tmp);
		if(IsPlayerConnected(plid)){
		if(Mudo[plid] == 1){
		SendClientMessage(playerid,COR_VERMELHO,"Este jogador ja esta mudo!");
		return 1;
		} else {
		SendClientMessage(playerid,COR_BRANCO,"Feito.");
		SendClientMessage(plid,COR_VERDE,"Agora você esta mudo não poderá mais falar!");
		Mudo[plid] = 1;
		return 1;
		}
		} else {
	        SendClientMessage(playerid,COR_VERMELHO,"O jogador não esta conectado!");
			return 1;
		}
     	} else {
	        SendClientMessage(playerid,COR_VERMELHO,"Você não tem permissão!");
			return 1;
		}
	}

	if(strcmp(cmd, "/descalar", true)==0){
  		if(IsPlayerAdmin(playerid)) {
		new tmp [256],plid;
		tmp = strtok(cmdtext,idx);
		if(!strlen(tmp)){
		SendClientMessage(playerid,COR_VERMELHO,"/descalar [id]");
		return 1;
		}
		plid = strlen(tmp);
		if(IsPlayerConnected(plid)){
		if(Mudo[plid] == 0){
		SendClientMessage(playerid,COR_VERMELHO,"Este jogador ja não esta mudo!");
		return 1;
		} else {
		SendClientMessage(playerid,COR_BRANCO,"Feito.");
		SendClientMessage(plid,COR_VERDE,"Agora você já pode falar novamente!");
		Mudo[plid] = 0;
		return 1;
		}
		} else {
	        SendClientMessage(playerid,COR_VERMELHO,"O jogador não esta conectado!");
			return 1;
		}
     	} else {
	        SendClientMessage(playerid,COR_VERMELHO,"Você não tem permissão!");
			return 1;
		}
	}
	
	if(strcmp(cmd, "/ejetar", true)==0){
  		if(IsPlayerAdmin(playerid)) {
		new tmp[256],plid;
		tmp = strtok(cmdtext,idx);
		if(!strlen(tmp)){
		SendClientMessage(playerid,COR_VERMELHO,"/ejetar [id]");
		return 1;
		}
		plid = strlen(tmp);
		if(IsPlayerConnected(plid)){
		SendClientMessage(playerid,COR_BRANCO,"Feito.");
		SendClientMessage(plid,COR_VERDE,"Voce foi expulso do carro!");
		RemovePlayerFromVehicle(plid);
		return 1;
		}
		} else {
	        SendClientMessage(playerid,COR_VERMELHO,"O jogador não esta conectado!");
			return 1;
		}
       	if(playerid != IsPlayerAdmin(playerid)) {
	        SendClientMessage(playerid,COR_VERMELHO,"Você não tem permissão!");
			return 1;
		}
	}

 	if(strcmp(cmdtext, "/limparchat", true) ==0 && IsPlayerAdmin(playerid)){
		SendClientMessageToAll(COR_VERMELHO, " ");
		SendClientMessageToAll(COR_VERMELHO, " ");
		SendClientMessageToAll(COR_VERMELHO, " ");
		SendClientMessageToAll(COR_VERMELHO, " ");
		SendClientMessageToAll(COR_VERMELHO, " ");
		SendClientMessageToAll(COR_VERMELHO, " ");
		SendClientMessageToAll(COR_VERMELHO, " ");
		SendClientMessageToAll(COR_VERMELHO, " ");
		SendClientMessageToAll(COR_VERMELHO, " ");
		SendClientMessageToAll(COR_VERMELHO, "Chat Limpado!");
		return 1;
	}
	
	if(strcmp(cmd, "/sellcomb", true) == 0) {
		if(Profissao[playerid] == FRENTISTA || IsPlayerAdmin(playerid)){
			new tmp[256];
			new msg[256];
			new petroleo;
			new plid, comb;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)){
				SendClientMessage(playerid, COR_VERMELHO, "/sellcomb [id] [litros]");
				return 1;
			}
		    plid = strval(tmp);
    	    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COR_VERMELHO, "/sellcomb [id] [litros]");
				return 1;
			}
			comb = strval(tmp);
			if(comb > 100 || comb <= 0){
				SendClientMessage(playerid, COR_VERMELHO, "Quantidade inválida. Os valores devem ser de 1 à 100.");
				return 1;
			}
			if(IsPlayerConnected(plid)){
			if(IsPlayerInAnyVehicle(plid)){
			if((Combustivel[GetPlayerVehicleID(plid)] + comb) < 0){
			    petroleo = Combustivel[GetPlayerVehicleID(plid)] + comb;
				Combustivel[GetPlayerVehicleID(plid)] = petroleo;
				format(msg,sizeof(msg),"%s colocou %d litros de combustível para você, agora você tem %d litros de combustivel.",PlayerName(playerid),comb,petroleo);
				SendClientMessage(plid,COR_VERDE,msg);
				TogglePlayerControllable(plid, 1);
				GivePlayerMoney(playerid, comb);
				GivePlayerMoney(plid, - comb);
				SendClientMessage(playerid,COR_VERDE,"Combustível fornecido.");
				return 1;
			}
			else if((Combustivel[GetPlayerVehicleID(plid)] + comb) >= 0){
			    udb_setBankMoney(PlayerName(playerid), udb_getBankMoney(PlayerName(playerid)) - petroleo);
				petroleo = 0 - Combustivel[GetPlayerVehicleID(plid)];
				Combustivel[GetPlayerVehicleID(plid)] = 0;
				format(msg,sizeof(msg),"%s completou seu tanque, colocando %d litros",PlayerName(playerid),petroleo);
				SendClientMessage(plid,COR_VERDE,msg);
				TogglePlayerControllable(plid, 1);
				GivePlayerMoney(playerid, comb);
				GivePlayerMoney(plid, - comb);
				SendClientMessage(playerid,COR_VERDE,"Combustivel fornecido.");
				return 1;
			}
			return 1;
			}
			else{
			    SendClientMessage(playerid, COR_VERMELHO, "Jogador não conectado/logado.");
				return 1;
			}
		}
			else{
		    	SendClientMessage(playerid, COR_VERMELHO, "Jogador não está em um veículo!");
				return 1;
			}
		}
		else{
		    SendClientMessage(playerid, COR_VERMELHO, "Você não é Frentista!");
			return 1;
		}
	}

	if(strcmp(cmd, "/abastecer", true) == 0) {
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER){
			new tmp[256];
			new quantidade;
			new string[256];
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)){
				SendClientMessage(playerid, COR_VERMELHO, "Uso: /abastecer [litros]");
				return 1;
			}
		    quantidade = strval(tmp);
		    if(quantidade <= -100 || GetPlayerMoney(playerid) < quantidade){
		        SendClientMessage(playerid, COR_VERMELHO, "Você não tem dinheiro para pagar. Ou você está querendo tirar combustível do veículo.");
				return 1;
			}
			if(AreaPosto[playerid] == 1){
				if(quantidade + Combustivel[GetPlayerVehicleID(playerid)] < 0){
				    Combustivel[GetPlayerVehicleID(playerid)] = Combustivel[GetPlayerVehicleID(playerid)] + quantidade;
				    format(string, sizeof(string), "Colocamos %d litros de combustível.", quantidade);
					SendClientMessage(playerid, COR_VERDE, string);
					return 1;
				}
				if(quantidade + Combustivel[GetPlayerVehicleID(playerid)] >= 0){
				    new quantia;
				    quantia = 0 - Combustivel[GetPlayerVehicleID(playerid)];
				    Combustivel[GetPlayerVehicleID(playerid)] = 0;
					format(string, sizeof(string), "Enchemos o tanque, colocados %d litros.", quantia);
					SendClientMessage(playerid, COR_VERDE, string);
					GivePlayerMoney(playerid, - quantia);
					return 1;
				}
			}
			else{
			    SendClientMessage(playerid, COR_VERMELHO, "Você não está no posto, consulte o mapa para ver a localização do posto mais proximo.");
				return 1;
			}
		}
		else{
			SendClientMessage(playerid, COR_VERMELHO, "Você precisa estar em um veículo para usar este comando.");
			return 1;
		}
	}
    if(strcmp(cmd, "/ligar", true) == 0)
		{
		new tmp[256];
		new plid;
		new string[256];
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid, COR_JUIZ, "/ligar [id]");
			return 1;
		}
		giveplayerid = strval(tmp);

		if(!IsPlayerConnected(plid))
		{
		    SendClientMessage(playerid, COR_BRANCO, "Voce deve estar logado para ligar");
			return 1;
		}
		if (GetPlayerMoney(playerid) < CallCost)
		{
			SendClientMessage(playerid, COR_BRANCO, "Voce não tem dinheiro para uma ligação");
			return 1;
		}

		if (giveplayerid == playerid)
		{
		    SendClientMessage(playerid, COR_BRANCO, "Você não pode ligar para voce mesmo");
		    return 1;
		}
		if (!(IsPlayerConnected(giveplayerid)))
		{
		    SendClientMessage(playerid, COR_BRANCO, "Jogador não conectado/logado");
		    return 1;
		}
		if (Calling[playerid] > -1)
		{
			GetPlayerName(Calling[playerid], giveplayer, sizeof(giveplayer));
			format(string, sizeof(string), "Voce esta no telefone com %s!", giveplayer);
			SendClientMessage(playerid, COR_COP_ELITE, string);
			return 1;
		}
		if (Calling[giveplayerid] > -1)
		{
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			format(string, sizeof(string), "%s ja esta no telefone, tente mais tarde.", giveplayer);
			SendClientMessage(playerid, COR_BRANCO, string);
			return 1;
		}
		else
		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "%s esta te ligando digite /atender para atender o celular ou /desligar para desligar o celular", sendername);
		SendClientMessage(giveplayerid, COR_BRANCO, string);
		format(string, sizeof(string), "Você esta falando com %s", giveplayer);
		SendClientMessage(playerid, COR_COP_ELITE, string);
        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
   		Calling[playerid] = giveplayerid;
   		Calling[giveplayerid] = playerid;
		Callerid[playerid] = 1;
	    return 1;
	}
    if(strcmp(cmd, "/atender", true) == 0)
		{
		new plid;
		new string[256];
		new tmp[256];

		plid = strval(tmp);
		if(!IsPlayerConnected(plid))
		{
		    SendClientMessage(playerid, COR_BRANCO, "Voce deve estar logado para atender uma chamada de telefone");
			return 1;
		}
		if (Calling[playerid] == -1)
		{
		    SendClientMessage(playerid, COR_BRANCO, "Ninguem está te ligando");
		    return 1;
		}
		if (Answered[playerid] == 1)
		{
		    SendClientMessage(playerid, COR_BRANCO, "Voce ja esta no telefone");
		    return 1;
		}
		else
		GetPlayerName(Calling[playerid], giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "%s esta te chamando", sendername);
		SendClientMessage(Calling[playerid], COR_AZUL, string);
		format(string, sizeof(string), "Você aceitou a chamada de %s's call", giveplayer);
        SendClientMessage(playerid, COR_AZUL, string);
        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
   		Answered[playerid] = 1;
   		Answered[Calling[playerid]] = 1;
		Callerid[Calling[playerid]] = 1;
	    return 1;
	}
    if(strcmp(cmd, "/desligar", true) == 0)
		{
		new plid;
		new string[256];
		new tmp[256];

		plid = strval(tmp);
		if(!IsPlayerConnected(plid))
		{
		    SendClientMessage(playerid, COR_AZUL, "Voce deve estar logado para desligar uma chamada");
			return 1;
		}
		if (Calling[playerid] == -1)
		{
		    SendClientMessage(playerid, COR_AZUL, "Voce não esta no celular");
		    return 1;
		}
		else
		{
			GetPlayerName(Calling[playerid], giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "%s Desligou o telefone", sendername);
			SendClientMessage(Calling[playerid], COR_BRANCO, string);
			format(string, sizeof(string), "Voce desligou a chamada com %s", giveplayer);
			SendClientMessage(playerid, COR_BRANCO, string);
		    new bCalling = Calling[playerid];
   			Calling[playerid] = -1;
   			Answered[playerid] = 0;
			Callerid[playerid] = 0;
   			Calling[bCalling] = -1;
   			Answered[bCalling] = 0;
			Callerid[bCalling] = 0;
		}
        return 1;
	}
	if(strcmp(cmd,"/colocar",true) == 0){
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER){
			if(Galao[playerid] == 0){
				SendClientMessage(playerid,COR_VERMELHO,"O Galão de Combustivel está vazio!");
				return 1;
			} else {
				Galao[playerid] = 0;
				SendClientMessage(playerid,COR_VERDE,"Você colocou um galão de 15 litros no tanque do carro, agora vá até o posto e abasteça.");
				Combustivel[GetPlayerVehicleID(playerid)] = Combustivel[GetPlayerVehicleID(playerid)] + 15;
				return 1;
			}
 			} else {
				SendClientMessage(playerid,COR_VERMELHO,"Você precisa estar em um veículo para usar este comando.");
				return 1;
			}
		}

	if(strcmp(cmd, "/buygalao", true) == 0) {
		if(Galao[playerid] == 0){
			if(AreaPosto[playerid] == 1){
				SendClientMessage(playerid,COR_VERDE,"Você comprou um galão com 15 litros de combustivel.");
				SendClientMessage(playerid,COR_VERDE,"Para colocar entre no carro e digite '/colocar'.");
				GivePlayerMoney(playerid, -15);
				Galao[playerid] = 1;
				return 1;
			} else {
				SendClientMessage(playerid,COR_VERMELHO,"Você não está no posto!");
	    		return 1;
  			}
		} else {
			SendClientMessage(playerid,COR_VERMELHO,"Seu galão de combustivel já está cheio!");
			return 1;
		}
	}
	
	if(strcmp(cmd, "/desmanchar", true) == 0) {
	    if(Profissao[playerid] == LADRAO_CARROS || IsPlayerAdmin(playerid)){
	        if(AreaDesmanche[playerid] == 1){
				if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER){
					if(Galao[playerid] == 0){
		   				SendClientMessage(playerid,COR_VERDE,"Veículo desmanchado, pagaram R$2500 pelo veículo roubado.");
						DestroyVehicle(GetPlayerVehicleID(playerid));
			   			GivePlayerMoney(playerid, 2500);
			   			Desmanche[playerid] = 1;
			   			SetTimer("Desmanchado",60000,false);
						return 1;
					} else {
						SendClientMessage(playerid,COR_VERMELHO,"Você precisa estar em um veículo para usar este comando!");
		    			return 1;
  					}
				} else {
					SendClientMessage(playerid, COR_VERMELHO, "Você não está no desmanche!");
					return 1;
		    	}
			} else {
				SendClientMessage(playerid, COR_VERMELHO, "Você não é Ladrão de Carros!");
				return 1;
			}
		} else {
			SendClientMessage(playerid, COR_VERMELHO, "Vai com calma, espera a poeira abaixar para entregar outro veículo!");
			return 1;
		}
	}

	if(strcmp(cmd,"/descarregar",true) == 0){
	    if(Profissao[playerid] == CAMINHONEIRO || IsPlayerAdmin(playerid)){
	        if(AreaDescarga[playerid] == 1){
	            if(Carregamento[playerid] == 0){
	                SendClientMessage(playerid,COR_VERMELHO,"Seu veículo não está carregado!");
					return 1;
				} else {
				    Carregamento[playerid] = 0;
				    SendClientMessage(playerid,COR_VERDE,"Seu veículo foi descarregado. Pagaram R$350 pela sua carga.");
				    GivePlayerMoney(playerid,350);
					return 1;
				}
			} else {
				SendClientMessage(playerid,COR_VERMELHO,"Você não está na área de carga");
				return 1;
			}
		}
	}

	if(strcmp(cmd, "/carregar", true) == 0) {
	    if(Profissao[playerid] == CAMINHONEIRO || IsPlayerAdmin(playerid)){
	        if(AreaCarga[playerid] == 1){
				new modelo;
				cGetVehicleModelID(GetPlayerVehicleID(playerid),modelo);
				if(modelo != VEH_RDTRAIN || modelo != VEH_LINERUN || modelo != VEH_TANKER){
				    if(Carregamento[playerid] == 0){
				    	SendClientMessage(playerid,COR_VERDE,"Veículo carregado!");
				    	SendClientMessage(playerid,COR_VERDE,"Para descarregá-lo, vá a área de descarga, Porto de San Fierro (Perto do aero-porto");
				    	Carregamento[playerid] = 1;
						return 1;
					} else {
				        SendClientMessage(playerid,COR_VERMELHO,"Seu caminhão já está carregado!");
						return 1;
					}
				} else {
				    SendClientMessage(playerid,COR_VERMELHO,"Você precisa estar em um caminhao Roadtrain, Linerun ou Taker para usar este comando!");
					return 1;
				}
	        } else {
	            SendClientMessage(playerid, COR_VERMELHO, "Você não está na área de carga!");
				return 1;
			}
	    }
	    else{
	        SendClientMessage(playerid,COR_VERMELHO,"Você não é Caminhoneiro!");
			return 1;
	    }
	}

	if(strcmp(cmd,"/descarregarcomb",true) == 0){
	    if(Profissao[playerid] == TRANSPORTE_GAS || IsPlayerAdmin(playerid)){
	        if(AreaPosto[playerid] == 1){
	            if(CarregamentoGas[playerid] == 0){
	                SendClientMessage(playerid,COR_VERMELHO,"Seu veículo não está carregado!");
					return 1;
				} else {
				    CarregamentoGas[playerid] = 1;
				    SendClientMessage(playerid,COR_VERDE,"Seu veículo foi descarregado. Pagaram R$250 pela sua carga.");
				    GivePlayerMoney(playerid,250);
				    CarregamentoGas[playerid] = 0;
					return 1;
				}
			} else {
				SendClientMessage(playerid,COR_VERMELHO,"Você não está no posto!");
				return 1;
			}
		}
	}

	if(strcmp(cmd, "/carregarcomb", true) == 0) {
	    if(Profissao[playerid] == TRANSPORTE_GAS || IsPlayerAdmin(playerid)){
	        if(AreaRefinaria[playerid] == 1){
				new modelo;
				cGetVehicleModelID(GetPlayerVehicleID(playerid),modelo);
				if(modelo != VEH_RDTRAIN || modelo != VEH_LINERUN || modelo != VEH_TANKER){
				    if(CarregamentoGas[playerid] == 0){
				    	SendClientMessage(playerid,COR_VERDE,"Veículo carregado!");
				    	SendClientMessage(playerid,COR_VERDE,"Para descarregá-lo, vá à um posto.");
				    	CarregamentoGas[playerid] = 1;
						return 1;
					} else {
				        SendClientMessage(playerid,COR_VERMELHO,"Seu caminhão já está carregado!");
						return 1;
					}
				} else {
				    SendClientMessage(playerid,COR_VERMELHO,"Você precisa estar em um caminhao Roadtrain, Linerun ou Taker para usar este comando!");
					return 1;
				}
	        } else {
	            SendClientMessage(playerid, COR_VERMELHO, "Você não está na refinaria!");
				return 1;
			}
	    }
	    else{
	        SendClientMessage(playerid,COR_VERMELHO,"Você não é Caminhoneiro!");
			return 1;
	    }
	}

	if(strcmp(cmd, "/pizza", true)==0){
	    SendClientMessage(playerid,COR_AMARELO,"Uma pizza está a caminho!");
	    for(new i=0; i<MAX_PLAYERS; i++){
	        if(Profissao[i] == ENTREGADOR_PIZZA || IsPlayerAdmin(i)){
	            new msg[256];
	            format(msg,sizeof(msg),"O jogador %s solicita uma pizza.",PlayerName(playerid));
	            SendClientMessage(i,COR_ENTREGADOR_PIZZA,msg);
				return 1;
			}
		}
	}

	if(strcmp(cmd,"/resetarmas",true)==0 && IsPlayerAdmin(playerid)){
		new tmp[256];
	   	new plid;
	   	tmp = strtok(cmdtext,idx);
	   	if(!strlen(tmp)){
	       	SendClientMessage(playerid,COR_VERMELHO,"/resetarmas [id]");
			return 1;
		} else {
			SendClientMessage(playerid,COR_BRANCO,"Feito.");
			SendClientMessage(plid,COR_VERMELHO, "Agora você não tem mais nem uma arma em mãos.");
			ResetPlayerWeapons(plid);
			return 1;
		}
	}
	
	if(strcmp(cmd,"/paralizar",true)==0 && IsPlayerAdmin(playerid)){
		new tmp[256];
	   	new plid;
	   	tmp = strtok(cmdtext,idx);
	   	if(!strlen(tmp)){
	       	SendClientMessage(playerid,COR_VERMELHO,"/paralizar [id]");
			return 1;
		} else {
			Paralize[plid] = 1;
			SendClientMessage(playerid,COR_BRANCO,"Feito.");
			SendClientMessage(plid,COR_VERMELHO, "Um Admin te paralizou, ficará assim até que te desparalize.");
		 	TogglePlayerControllable(plid, 0);
			return 1;
		}
	}

	if(strcmp(cmd,"/desparalizar",true)==0 && IsPlayerAdmin(playerid)){
		new tmp[256];
	   	new plid;
	   	tmp = strtok(cmdtext,idx);
	   	if(!strlen(tmp)){
	       	SendClientMessage(playerid,COR_VERMELHO,"/desparalizar [id]");
			return 1;
		} else {
			Paralize[plid] = 0;
			SendClientMessage(playerid,COR_BRANCO,"Feito.");
			SendClientMessage(plid,COR_VERMELHO, "Um Admin te desparalizou, não faça mais bobagem ou será paralizado novamente.");
			TogglePlayerControllable(plid, 1);
			return 1;
		}
	}

	if(strcmp(cmd,"/assaltar",true)==0){
	    if(Profissao[playerid] == ASSALTANTE || IsPlayerAdmin(playerid)){
			new tmp[256];
	    	new plid, valor;
	    	new string[256];
	    	tmp = strtok(cmdtext,idx);
	    	if(!strlen(tmp)){
	        	SendClientMessage(playerid,COR_VERMELHO,"/assaltar [id]");
				return 1;
			}
			strval(tmp);
		 	if(GetPlayerMoney(plid) < valor){
	        SendClientMessage(playerid, COR_VERMELHO, "O Jogador que você quer assaltar não esse dinheiro em mãos.");
			return 1;
			}
			plid = strlen(tmp);
			if(IsPlayerConnected(plid) && PLAYERLIST_authed[plid] == 1){
			    if(GetDistanceBetweenPlayers(plid,playerid) > 5){
			        SendClientMessage(playerid,COR_VERMELHO,"Chegue mais perto.");
					return 1;
				} else {
				    SendClientMessage(playerid,COR_ENTREGADOR_PIZZA,"Assaltado.");
				    format(string, sizeof(string), "%s te assaltou levando R$150. Fique mais esperto na proxima vez!" , PlayerName(playerid));
					SendClientMessage(plid, COR_COP_ELITE, string);
				    GivePlayerMoney(playerid, valor);
				    GivePlayerMoney(plid, -valor);
					return 1;
				}
			} else {
			    SendClientMessage(playerid,COR_VERMELHO,"Jogador não conectado/logado");
				return 1;
   			}
		} else {
		    SendClientMessage(playerid,COR_VERMELHO,"Você não é Assaltante!");
			return 1;
		}
	}

	if(strcmp(cmd,"/segurar",true)==0){
	    if(Profissao[playerid] == SEGURADOR || IsPlayerAdmin(playerid)){
			new tmp[256];
	    	new plid, minutos;
	    	new string[256];
	    	tmp = strtok(cmdtext,idx);
	    	if(!strlen(tmp)){
	        	SendClientMessage(playerid,COR_VERMELHO,"/segurar [id] [minutos]");
				return 1;
			}
			minutos = strval(tmp);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COR_VERMELHO, "/segurar [id] [minutos]");
				return 1;
			}
			strval(tmp);
		 	if(GetPlayerMoney(plid) > 20*minutos){
	        SendClientMessage(playerid, COR_VERMELHO, "O Jogador que você quer segurar não esse dinheiro em mãos.");
			return 1;
			}
			strval(tmp);
		 	if(minutos >= 1){
	        SendClientMessage(playerid, COR_VERMELHO, "Tempo mínimo de 1 minuto.");
			return 1;
			}
			plid = strlen(tmp);
			if(IsPlayerConnected(plid) && PLAYERLIST_authed[plid] == 1){
			    if(GetDistanceBetweenPlayers(plid,playerid) > 15){
			        SendClientMessage(playerid,COR_VERMELHO,"Chegue mais perto.");
					return 1;
				} else {
				    Seguro[plid] = 1;
				    SendClientMessage(playerid,COR_ENTREGADOR_PIZZA,"Segurado.");
				    format(string, sizeof(string), "%s te vendeu um seguro de vida e cobrou R$500, agora quando morrer não vai mais gastar dinheiro com hospital (até o proximo gmx)." , PlayerName(playerid));
					SendClientMessage(plid, COR_COP_ELITE, string);
				    GivePlayerMoney(playerid, 500);
				    GivePlayerMoney(plid, -500);
				    SetTimer("Segurado",60000*minutos,0);
					return 1;
				}
			} else {
			    SendClientMessage(playerid,COR_VERMELHO,"Jogador não conectado/logado");
				return 1;
   			}
		} else {
		    SendClientMessage(playerid,COR_VERMELHO,"Você não é Segurador!");
			return 1;
		}
	}

	if(strcmp(cmd,"/socorrer",true)==0){
	    if(Profissao[playerid] == PARAMEDICO || IsPlayerAdmin(playerid)){
			new tmp[256];
	    	new plid;
	    	new string[256];
	    	tmp = strtok(cmdtext,idx);
	    	if(!strlen(tmp)){
	        	SendClientMessage(playerid,COR_VERMELHO,"/socorrer [id]");
				return 1;
			}
			strval(tmp);
		 	if(GetPlayerMoney(plid) > 20){
	        SendClientMessage(playerid, COR_VERMELHO, "O Jogador que você quer socorrer não tem o dinehiro da consulta em mãos.");
			return 1;
			}
			plid = strlen(tmp);
			if(IsPlayerConnected(plid) && PLAYERLIST_authed[plid] == 1){
			    if(GetDistanceBetweenPlayers(plid,playerid) > 10){
			        SendClientMessage(playerid,COR_VERMELHO,"Chegue mais perto.");
					return 1;
				} else {
				    Seguro[playerid] = 1;
				    SendClientMessage(playerid,COR_ENTREGADOR_PIZZA,"Socorrido.");
				    format(string, sizeof(string), "%s encheu sua vida e cobrou R$20." , PlayerName(playerid));
					SendClientMessage(plid, COR_COP_ELITE, string);
				    GivePlayerMoney(playerid, 20);
				    GivePlayerMoney(plid, -20);
					return 1;
				}
			} else {
			    SendClientMessage(playerid,COR_VERMELHO,"Jogador não conectado/logado");
				return 1;
   			}
		} else {
		    SendClientMessage(playerid,COR_VERMELHO,"Você não é Paramedico!");
			return 1;
		}
	}

	if(strcmp(cmd, "/registrar", true) == 0) {
		new tmp[256];
		tmp = strtok(cmdtext, idx);
    	// The command shouldn't work if an account with this
    	// nick already exists
    	if (udb_Exists(PlayerName(playerid))) {
			SendClientMessage(playerid, COR_VERMELHO, "Você já está registrado! Entre com /logar [senha].");
			return 1;
		}

		// The command shouldn't work if we already are authed
    	if(PLAYERLIST_authed[playerid] == 1) {
			SendClientMessage(playerid, COR_VERMELHO, "Você já está registrado! Entre com /logar [senha]");
			return 1;
		}

    	// Did he forgot the password?
    	if (strlen(tmp)==0) {
			SendClientMessage(playerid, COR_VERMELHO, "/registrar [senha]");
			return 1;
		}

    	// We save the money to the accstate
    	else{
    	    PLAYERLIST_authed[playerid] = 1;
			udb_Create(PlayerName(playerid), tmp /*senha*/,0 /*creditos*/, 0 /*grana*/,60 /*skin*/, 5000 /*gbanco*/, 0/*seguro*/, 0 /*har*/, 0 /*hterra*/, 0 /*hmar*/, 0 /*preso*/, 1 /*prof*/, ""/*clantag*/,-1425.0415/*X*/, -289.4514/*Y*/, 14.1484/*Z*/,140.4826/*ang*/, 100.0 /*hp*/);
			new Float:X, Float:Y, Float:Z, Float:ang;
			udb_getPosition(PlayerName(playerid), X, Y, Z);
			udb_getAng(PlayerName(playerid), ang);
			SetPlayerColor(playerid, COR_DESEMPREGADO);
			SetSpawnInfo(playerid, 1, udb_getSkin(PlayerName(playerid)), 1552.8347, -1675.3934, 16.1953, 95.2490, 0, 0, 0, 0, 0, 0);
			SpawnPlayer(playerid);
			new string[256];
			format(string, sizeof(string), "* %s acabou de se registrar.", PlayerName(playerid));
			SendClientMessageToAll(COR_COP_ELITE, string);
			TextDrawDestroy(Texto);
			SetPlayerCheckpoint(playerid, 1537.9189, -1678.7523, 13.5469, 2.0);
			SendClientMessage(playerid, COR_JUIZ, "Registrado e logado.");
			SendClientMessage(playerid, COR_AZUL, "Você acabou de sair da prisão, precisa sair da cidade até que a poeira abaixe.");
			SendClientMessage(playerid, COR_AZUL, "Os policiais vão te dar uma carona até o aero-porto.");
			SendClientMessage(playerid, COR_VERMELHO, "Vá até o checkpoint marcado em seu mapa.");
	    	return 1;
		}
 	}

	if(strcmp(cmd, "/logar", true) == 0 && IsPlayerConnected(playerid)) {
		new tmp[256];
		tmp = strtok(cmdtext, idx);
	    // The command shouldn't work if an account with this
	    // nick does not exists
	    if (!udb_Exists(PlayerName(playerid))) {
			SendClientMessage(playerid, COR_VERMELHO, "Você não está registrado. Entre com /registrar [senha]");
			return 1;
		}

		// The command shouldn't work if we already are authed
	    if (PLAYERLIST_authed[playerid] == 1) {
			SendClientMessage(playerid, COR_AMARELO, "Você já está logado.");
			return 1;
		}

	    // Did he forgot the password?
	    if (strlen(tmp)==0) {
			SendClientMessage(playerid, COR_VERMELHO, "Você tem uma senha. USO: /logar [senha]");
			return 1;
		}

	    if (udb_CheckLogin(PlayerName(playerid),tmp)) {
		PLAYERLIST_authed[playerid] = 1;
		LogarPlayer(playerid);
		new string[256];
		TextDrawDestroy(Texto);
		format(string, sizeof(string), "* %s acabou de logar.", PlayerName(playerid));
		SendClientMessageToAll(COR_COP_ELITE, string);
	 	SendClientMessage(playerid, COR_JUIZ, "Logado");
		return 1;
		}
		else {
	       // Login was incorrect
			SendClientMessage(playerid, COR_VERMELHO, "Senha Incorreta");
			return 1;
  		}
	}

	if(strcmp(cmd, "/setcasa", true) == 0) {
	    if(Profissao[playerid] == CORRETOR || IsPlayerAdmin(playerid)){
			new plid;
			new string[256];
			new tmp[256];
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COR_VERMELHO, "/setcasa [id]");
				return 1;
			}
			plid = strval(tmp);
    		if(udb_Exists(PlayerName(plid))) {
    		    if(Casa[plid] == 0){
                if(IsPlayerConnected(plid) && PLAYERLIST_authed[plid] == 1){
		        new Float:X,Float:Y,Float:Z,Float:ang;
		        new File:temp;
		        new File:temx;
				GetPlayerPos(playerid,X,Y,Z);
				GetPlayerFacingAngle(playerid,ang);
				udb_setPosition(PlayerName(plid), X, Y, Z);
			    udb_setAng(PlayerName(plid), ang);
			    SendClientMessage(playerid, COR_VERDE, "Casa vendida/salva.");
			    AddStaticPickup(1272,1,X,Y,Z);
			    format(string, sizeof(string), "AddStaticPickup(1272,1,%f %f %f) //%s\r\n",X, Y, Z);
			    temx = fopen("icones.ini", io_append);
                fwrite(temx, string);
                fclose(temx);
			    format(string, sizeof(string), "%s te setou uma casa em %s, digite /mudar para mudar para sua casa nova.", PlayerName(playerid));
			    SendClientMessage(plid, COR_VERDE, string);
				format(string, sizeof(string), "%f %f %f // %s(vendedor: %s), Local: %s\r\n", X, Y, Z, PlayerName(plid), PlayerName(playerid));
				temp = fopen("reloadrpg.casas", io_append);
    			fwrite(temp, string);
       			fclose(temp);
          		SetTimerEx("SetCasa",10000,0,"fff", X, Y, Z);
				Casa[plid] = 1;
    	    	return 1;
    	    	}
    	    	}
			}
			else{
		   		SendClientMessage(playerid, COR_VERMELHO, "Jogador não conectado/logado");
				return 1;
			}
		}
		else{
		    SendClientMessage(playerid, COR_VERMELHO, "Você não é Corretor de Imoveis");
			return 1;
		}
    	return 1;
	}
	
	if(strcmp(cmd,"/mudar",true) == 0){
		if(Casa[playerid] == 0){
			SendClientMessage(playerid,COR_VERMELHO,"Você não tem uma casa nova!");
			return 1;
		} else {
		    Casa[playerid] = 0;
		    SendClientMessage(playerid,COR_VERDE,"Você se mudou para sua casa nova.");
			LogarPlayer(playerid);
			return 1;
		}
	}

	if(strcmp(cmd, "/setskin", true) == 0) {
		if(IsPlayerAdmin(playerid)){
			new tmp[256];
			new plid, skin;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)){
				SendClientMessage(playerid, COR_VERMELHO, "/setskin [id] [skin]");
				return 1;
			}
		    plid = strval(tmp);
    	    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COR_VERMELHO, "/setskin [id] [skin]");
				return 1;
			}
			skin = strval(tmp);
			if(skin==1 || skin==2 || skin==3 || skin==4 || skin==5 || skin==6 || skin==8 || skin==42 || skin==65 || skin==74 || skin==86 || skin==119 || skin==149 || skin==208 || skin==265 || skin==266 || skin==267 || skin==268 || skin==269 || skin==270 || skin==271 || skin==272 || skin==273 || skin==274 || skin>=289){
			SendClientMessage(playerid, COR_VERMELHO, "ID de skin inválido!");
			return 1;
			}
			if(IsPlayerConnected(plid)){
			    udb_setSkin(PlayerName(plid), skin);
				SendClientMessage(playerid, COR_VERDE, "Skin Setado.");
				SendClientMessage(plid, COR_VERDE, "Agora você tem um skin novo!");
				SetPlayerSkin(plid,skin);
				printf("%s(id: %d) setou a %s(id: %d) um skin novo",PlayerName(playerid), playerid, PlayerName(plid), plid);
				return 1;
			}
			else{
			    SendClientMessage(playerid, COR_VERMELHO, "O jogador não está conectado!");
				return 1;
			}
		}
		else{
		    SendClientMessage(playerid, COR_VERMELHO, "Você não tem permissão para isso");
			return 1;
		}
	}

	if(strcmp(cmd, "/skin", true) == 0) {
		new tmp[256];
		new skin;
		tmp = strtok(cmdtext, idx);
   		if(!strlen(tmp)){
			SendClientMessage(playerid, COR_VERMELHO, "/setskin [skin]");
			return 1;
		}
		skin = strval(tmp);
		if(skin==1 || skin==2 || skin==3 || skin==4 || skin==5 || skin==6 || skin==8 || skin==42 || skin==65 || skin==74 || skin==86 || skin==119 || skin==149 || skin==208 || skin==265 || skin==266 || skin==267 || skin==268 || skin==269 || skin==270 || skin==271 || skin==272 || skin==273 || skin==274 || skin>=289){
		SendClientMessage(playerid, COR_VERMELHO, "ID de skin inválido!");
		return 1;
		}
		if(IsPlayerConnected(playerid)){
		    udb_setSkin(PlayerName(playerid), skin);
			SendClientMessage(playerid, COR_VERDE, "Agora você tem um skin novo!");
			SetPlayerSkin(playerid,skin);
			printf("%s(id: %d) comprou um novo skin",PlayerName(playerid), playerid);
			return 1;
		}
	}

	if(strcmp(cmd, "/hospedar", true) == 0) {
    	if(AreaHotel[playerid] == 1){
    		if(udb_getBankMoney(PlayerName(playerid)) < 1500){
				SendClientMessage(playerid,COR_VERMELHO,"Você não tem toda essa quantia no banco!(custo: R$1500)");
 				return 1;
			}
			if(AreaHotel[playerid] == 0){
			   		SendClientMessage(playerid, COR_VERDE, "Você pagou R$1500 e ficara hospedado aqui até ter condições de comprar uma casa.");
			   		udb_setBankMoney(PlayerName(playerid), udb_getBankMoney(PlayerName(playerid)) - 1500);
    	   			return 1;
  	  	 		}
			} else {
			SendClientMessage(playerid,COR_VERMELHO,"Você não está no hotel!");
	   		return 1;
  		}
	}
    if(strcmp(cmd, "/ajuda", true) == 0) {
        SendClientMessage(playerid, COR_COP_ELITE, "Ajuda?");
        SendClientMessage(playerid, COR_AMARELO_CLARO, "/comandos : comandos do RPG");
        SendClientMessage(playerid, COR_AMARELO_CLARO, "/registrar [senha] : se registra");
        SendClientMessage(playerid, COR_AMARELO_CLARO, "/logar [senha] : se loga no jogo");
        SendClientMessage(playerid, COR_AMARELO_CLARO, "/aprender : Mostra uma breve explicação.");
        SendClientMessage(playerid, COR_AMARELO_CLARO, "/creditos : Vê os creditos.");
		return 1;
	}

	if(strcmp(cmd, "/creditos", true) == 0) {
	    SendClientMessage(playerid, COR_COP_ELITE, "MPA® Reload RPG.");
	    SendClientMessage(playerid, COR_AMARELO_SCLARO,"Codders: [MPA]Guilherme, [MPA]Rodrigo,[MPA]Rafael");
	    SendClientMessage(playerid, COR_AMARELO_SCLARO, "Agradecimentos: [MPA]Matraka, [MPA]VanCy, [NNF]Jnr,Keninho.");
	    SendClientMessage(playerid, COR_LARANJA, "Feito com base no mode .:GT:. RPG.");
		return 1;
	}

	if(strcmp(cmd, "/aprender", true) == 0) {
	    SendClientMessage(playerid, COR_CINZA, "MPA® Reload RPG");
	    SendClientMessage(playerid, COR_BRANCO, "Este servidor é um RPG, ou seja, simula como se fosse a vida real.");
	    SendClientMessage(playerid, COR_BRANCO, "Nele você arranja um emprego para ganhar dinheiro para pode comprar sua casa, carros, etc.");
	    SendClientMessage(playerid, COR_BRANCO, "Como na vida real, existem crimes, como roubo e morte, e neste mode a policia irá te prender caso você cometa algum crime.");
		SendClientMessage(playerid, COR_BRANCO, "Você também só pode dirigir com habilitação (terrestre para carros e motos, naútica para barcos e a aérea para helicópteros e aviões).");
		SendClientMessage(playerid, COR_BRANCO, "Caso a policia te pegue andando sem habilitação, você vai tomar uma multa e poderá até ser preso.");
		SendClientMessage(playerid, COR_BRANCO, "Espero que você se divirta neste servidor. Boa diverção! :D");
		SendClientMessage(playerid, COR_LARANJA, "Digite /ajuda ou /comandos para visualizar os comandos.");
		return 1;
	}
	
	if(strcmp(cmd, "/comandos", true) == 0) {
		SendClientMessage(playerid, COR_COP_ELITE, "Comandos:");
		SendClientMessage(playerid, COR_AMARELO_CLARO, "/profs : mostra as profissões disponiveis.");
		SendClientMessage(playerid, COR_AMARELO_CLARO, "/docs [id] : mostra seus ducumentos.");
		SendClientMessage(playerid, COR_AMARELO_CLARO, "/taxi [local] : chama um taxí.");
		SendClientMessage(playerid, COR_AMARELO_CLARO, "/190 [denuncia] : faz uma denuncia para todos policiais.");
		SendClientMessage(playerid, COR_AMARELO_CLARO, "/192 [local] : chama uma ambulancia.");
		SendClientMessage(playerid, COR_AMARELO_CLARO, "/abastecer [litros] : Abastece seu veículo (você deve estar no posto para usar este comando).");
		SendClientMessage(playerid, COR_AMARELO_CLARO, "/trancar : tranca seu veículo impossibilitando que os outros jogadores possam entrar.");
		SendClientMessage(playerid, COR_AMARELO_CLARO, "/destrancar : destranca seu veículo.");
		SendClientMessage(playerid, COR_LARANJA, "Para mais comandos digite /comandos2.");
		return 1;
	}
	
	if(strcmp(cmd, "/comandos2", true) == 0) {
		SendClientMessage(playerid, COR_COP_ELITE, "Comandos - Parte 2:");
		SendClientMessage(playerid, COR_AMARELO_CLARO, "/presos : vê a lista de jogadores presos.");
		SendClientMessage(playerid, COR_AMARELO_CLARO, "/procurados : vê a lista de jogadores procurados.");
		SendClientMessage(playerid, COR_AMARELO_CLARO, "/advogado : pede um advogado.");
		SendClientMessage(playerid, COR_AMARELO_CLARO, "/carteiras : vê as os preços das carteiras (você precisa estar na auto-escola).");
		SendClientMessage(playerid, COR_AMARELO_CLARO, "/report [id] [rasão] : denuncia o uso de cheater aos admins.");
		return 1;
	}

	if(strcmp(cmd, "/bancoinfo", true) == 0) {
        SendClientMessage(playerid, COR_COP_ELITE, "Comandos do Banco:");
        SendClientMessage(playerid, COR_AMARELO_CLARO, "/depositar [quantia] : Deposita dinheiro na sua conta do banco");
        SendClientMessage(playerid, COR_AMARELO_CLARO, "/sacar [quantia] : retira dinheiro na sua conta do banco");
        SendClientMessage(playerid, COR_AMARELO_CLARO, "/saldo : checa seu o saldo bancário..");
        SendClientMessage(playerid, COR_AMARELO_CLARO, "/saldocel : checa seu o saldo bancário através do seu celular, custo R$20.");
        SendClientMessage(playerid, COR_LARANJA, "Você precisa estar em um banco para usar esses comandos, menos o /saldocel.");
		return 1;
	}

	if(strcmp(cmd, "/autoinfo", true) == 0) {
		if(AreaEscola[playerid] == 1){
        	SendClientMessage(playerid, COR_COP_ELITE, "Comandos da Auto-Escola:");
        	SendClientMessage(playerid, COR_AMARELO_SCLARO, "/carteiras : Vê o id das carteiras.");
        	SendClientMessage(playerid, COR_AMARELO_SCLARO, "/carteira [id_da_carteira] : Pede uma carteira uma carteira.");
        	SendClientMessage(playerid, COR_ROSA, "As Carteiras só podem ser constatadas com teste e por um Instrutor de Direção.");
			return 1;
		}
		else{
			SendClientMessage(playerid, COR_VERMELHO, "Você não está na Auto-Escola");
			return 1;
		}
	}
	
	if(strcmp(cmd, "/carteiras", true) == 0) {
		if(AreaEscola[playerid] == 1){
        	SendClientMessage(playerid, COR_COP_ELITE, "ID das Cateiras:");
        	SendClientMessage(playerid, COR_AMARELO_CLARO, "1 - Terrestre:   R$  500");
        	SendClientMessage(playerid, COR_AMARELO_CLARO, "2 - Aeria:       R$ 1200");
        	SendClientMessage(playerid, COR_AMARELO_CLARO, "3 - Nautica:     R$  800");
        	SendClientMessage(playerid, COR_ROSA, "As Carteiras só podem ser constatadas com teste e por um Instrutor de Direção.");
			return 1;
		}
		else{
			SendClientMessage(playerid, COR_VERMELHO, "Você não está na Auto -Escola");
			return 1;
		}
	}
	
	if(strcmp(cmd, "/postoinfo", true) == 0) {
		if(AreaPosto[playerid] == 1){
    	    SendClientMessage(playerid, COR_VERMELHO, "Comandos do Posto:");
    	    SendClientMessage(playerid, COR_AMARELO_CLARO, "/abastecer [litros] : Abastece seu veículo.");
    	    SendClientMessage(playerid, COR_AMARELO_CLARO, "/buygalao : Compra um galão de combustivel com 15 litros para colocar em seu veículo.");
			return 1;
		}
		else{
			SendClientMessage(playerid, COR_VERMELHO, "Você não está no Posto");
			return 1;
		}
	}
	
	if(strcmp(cmd, "/pescainfo", true) == 0) {
		if(AreaPosto[playerid] == 1){
    	    SendClientMessage(playerid, COR_AZUL, "Comandos de Pesca:");
    	    SendClientMessage(playerid, COR_AMARELO_CLARO, "/pescar : Pesca(você precisa estar na área de pesca).");
    	    SendClientMessage(playerid, COR_AMARELO_CLARO, "/sellpesca : Vende sua pesca(você precisa estar na cooperativa de pesca).");
			return 1;
		}
		else{
			SendClientMessage(playerid, COR_VERMELHO, "Você não está no Posto");
			return 1;
		}
	}
	
	if(strcmp(cmd, "/refinariainfo", true) == 0) {
		if(AreaRefinaria[playerid] == 1){
    	    SendClientMessage(playerid, COR_VERMELHO, "Comandos da Refinaria:");
    	    SendClientMessage(playerid, COR_AMARELO_CLARO, "/carregarcomb : Carrega seu veículo(você precisa ser transportador de combustivel).");
			return 1;
		}
		else{
			SendClientMessage(playerid, COR_VERMELHO, "Você não está na Refinaria!");
			return 1;
		}
	}

	if(strcmp(cmd, "/cardapio", true) == 0) {
		if(AreaBar[playerid] == 1){
	        SendClientMessage(playerid, COR_COP_ELITE, "Cardapio de nosso Bar:");
	        SendClientMessage(playerid, COR_AMARELO_CLARO, "1 - X-Bacon.");
	        SendClientMessage(playerid, COR_AMARELO_CLARO, "2 - X-Burguer.");
	        SendClientMessage(playerid, COR_AMARELO_CLARO, "3 - X-Salada.");
	        SendClientMessage(playerid, COR_AMARELO_CLARO, "4 - Hotdog.");
	        SendClientMessage(playerid, COR_AMARELO_CLARO, "5 - Batata Frita.");
	        SendClientMessage(playerid, COR_AMARELO_CLARO, "6 - Refrigerante");
	        SendClientMessage(playerid, COR_AMARELO_CLARO, "7 - Cerveja");
	        SendClientMessage(playerid, COR_AMARELO_CLARO, "8 - Suco");
	        SendClientMessage(playerid, COR_LARANJA, "Para comprar digite /bar [id].");
			return 1;
	 	}
	 	else{
			SendClientMessage(playerid, COR_VERMELHO, "Você não está no Bar");
			return 1;
		}
	}

	if(strcmp(cmd, "/sabores", true) == 0) {
        SendClientMessage(playerid, COR_COP_ELITE, "Sabores de sorvetes:");
        SendClientMessage(playerid, COR_AMARELO_CLARO, "1 - Morango.");
        SendClientMessage(playerid, COR_AMARELO_CLARO, "2 - Leite Condensado.");
        SendClientMessage(playerid, COR_AMARELO_CLARO, "3 - Flocos.");
        SendClientMessage(playerid, COR_AMARELO_CLARO, "4 - Creme.");
        SendClientMessage(playerid, COR_AMARELO_CLARO, "5 - Doce de Leite.");
        SendClientMessage(playerid, COR_AMARELO_CLARO, "6 - Refrigerante");
        SendClientMessage(playerid, COR_AMARELO_CLARO, "7 - Coco");
        SendClientMessage(playerid, COR_AMARELO_CLARO, "8 - Tutti-frutti");
        SendClientMessage(playerid, COR_SORVETEIRO, "Pessa para um Sorveteiro te vender.");
		return 1;
	}

	if(strcmp(cmd, "/lanches", true) == 0) {
        SendClientMessage(playerid, COR_COP_ELITE, "Lanches Disponiveis:");
        SendClientMessage(playerid, COR_AMARELO_CLARO, "1 - X-Bacon.");
        SendClientMessage(playerid, COR_AMARELO_CLARO, "2 - X-Burguer.");
        SendClientMessage(playerid, COR_AMARELO_CLARO, "3 - X-Salada.");
        SendClientMessage(playerid, COR_AMARELO_CLARO, "4 - Hotdog.");
        SendClientMessage(playerid, COR_VENDEDOR_LANCHES, "Pessa para um Vendedor de Lanches te vender.");
		return 1;
	}
	
	if(strcmp(cmd, "/gralta", true) == 0) {
        SendClientMessageToAll(COR_BRANCO, "Gravidade Alta!");
		SetGravity(1.2);
		return 1;
	}

	if(strcmp(cmd, "/grnormal", true) == 0) {
		SendClientMessageToAll(COR_BRANCO, "Gravidade Normal!");
		SetGravity(0.008);
		return 1;
	}

	if(strcmp(cmd, "/grbaixa", true) == 0) {
		SendClientMessageToAll(COR_BRANCO, "Gravidade Baixa!");
		SetGravity(0.0008);
		return 1;
	}
	
	if(strcmp(cmd, "/pizzas", true) == 0) {
        SendClientMessage(playerid, COR_COP_ELITE, "Pizzas Disponiveis:");
        SendClientMessage(playerid, COR_AMARELO_CLARO, "1 - 4 Queijos.");
        SendClientMessage(playerid, COR_AMARELO_CLARO, "2 - Calabresa.");
        SendClientMessage(playerid, COR_AMARELO_CLARO, "3 - Frango-Catupiry.");
        SendClientMessage(playerid, COR_AMARELO_CLARO, "4 - Presunto e Queijo.");
        SendClientMessage(playerid, COR_ENTREGADOR_PIZZA, "Pessa para um Entregador de Pizza te vender.");
		return 1;
	}
	
	if(strcmp(cmd, "/int", true) == 0) {
		SetPlayerInterior(playerid, GetPlayerInterior(playerid));
		return 1;
	}

	if(strcmp(cmd, "/profs", true) == 0) {
        SendClientMessage(playerid, COR_COP_ELITE, "Profissões disponíveis:");
        SendClientMessage(playerid, COR_DESEMPREGADO, "1 - Desempregado (Seguro desemprego: R$350)");
        SendClientMessage(playerid, COR_ENTREGADOR_PIZZA, "2 - Entregador de Pizza (Salário: R$850 + pizzas vendidas)");
        SendClientMessage(playerid, COR_BARMAN, "3 - Barman (Salário: R$850 + drinks vendidos)");
        SendClientMessage(playerid, COR_SORVETEIRO, "4 - Sorveteiro (Salário: R$350 + sorvetes vendidos)");
        SendClientMessage(playerid, COR_VENDEDOR_LANCHES, "5 - Vendedor de Lanches (Salário: R$650 + lanches entregues)");
        SendClientMessage(playerid, COR_PARAMEDICO, "6 - Paramedico (Salário: R$650 + curativos) - Profissão Limitada");
        SendClientMessage(playerid, COR_INSTRUTOR, "7 - Instrutor de Direção (Salário: R$600 + carteiras) - Profissão Limitada");
        SendClientMessage(playerid, COR_FRENTISTA, "8 - Frentista (Salário: R$650 + o que vender de combustível) - Profissão Limitada");
        SendClientMessage(playerid, COR_LARANJA, "Para mais profissões digite /profs2");
		return 1;
	}

	if(strcmp(cmd, "/profs2", true) == 0) {
        SendClientMessage(playerid, COR_COP_ELITE, "Profissões disponíveis - Parte 2:");
        SendClientMessage(playerid, COR_TAXISTA, "9 - Taxista(Salário: R$900 + corridas)");
        SendClientMessage(playerid, COR_MOTO_TAXI, "10 - Moto-taxi (Salário: R$650 + corridas)");
        SendClientMessage(playerid, COR_TAXI_AEREO, "11 - Taxi-Aerio Rodoviario (Salário: R$1050 + viagens) - Profissão Limitada.");
        SendClientMessage(playerid, COR_SEQUESTRADOR, "12 - Sequestrador (Salário: R$550 + sequestros).");
        SendClientMessage(playerid, COR_ASSASSINO, "13 - Assassino (Salário: R$650 + o que ganhar com o mandato do crime).");
        SendClientMessage(playerid, COR_ASSALTANTE, "14 - Assaltante (Salário: R$650 + o que ganhar no crime)");
        SendClientMessage(playerid, COR_LADRAO_CARROS, "15 - Ladrão de Carros(Salário: R$750 + Carros roubados)");
        SendClientMessage(playerid, COR_TRAFICANTE, "16 - Traficante (Salário: R$550 + O que vender de drogas)");
        SendClientMessage(playerid, COR_LARANJA, "Para mais profissões digite /profs3");
		return 1;
	}

	if(strcmp(cmd, "/profs3", true) == 0) {
        SendClientMessage(playerid, COR_COP_ELITE, "Profissões disponíveis - Parte 3:");
        SendClientMessage(playerid, COR_VENDEDOR_ARMAS, "17 - Vendedor de Armas (Salário: R$700) - Profissão Limitada");
		SendClientMessage(playerid, COR_CACADOR, "18 - Caçador (Salario R$750)");
        SendClientMessage(playerid, COR_PESCADOR, "19 - Pescador (Salario R$650)");
        SendClientMessage(playerid, COR_AGRICULTOR, "20 - Agricultor (Salario R$850)");
        SendClientMessage(playerid, COR_COP_CIVIL, "21 - Policial Civil (Salario R$1200) - Profissão Limitada");
        SendClientMessage(playerid, COR_COP_RODOVIARIO, "22 - Policial Rodoviario (Salário: R$1200) - Profissão Limitada");
        SendClientMessage(playerid, COR_COP_ELITE, "23 - S.W.A.T. (Salário: R$2500) - Profissão Limitada");
        SendClientMessage(playerid, COR_DELEGADO, "24 - Delegado (Salário: R$3000) - Profissão Limitada");
        SendClientMessage(playerid, COR_LARANJA, "Para mais profissões digite /profs4");
		return 1;
	}

    if(strcmp(cmd, "/profs4", true) == 0) {
        SendClientMessage(playerid, COR_COP_ELITE, "Profissões disponíveis - Parte 4:");
		SendClientMessage(playerid, COR_JUIZ, "25 - Juiz (Salario R$3200) - Profissão Limitada");
        SendClientMessage(playerid, COR_NARCOTICOS, "26 - Narcoticos (Salario R$2800) - Profissão Limitada");
        SendClientMessage(playerid, COR_POLICIA_FLORESTAL, "27 - Policia Florestal (Salario R$1100 ) - Profissão Limitada");
        SendClientMessage(playerid, COR_IBAMA, "28 - Ibama  (Salario R$1100) - Profissão Limitada");
		SendClientMessage(playerid, COR_EXERCITO, "29 - Exercito (Salário: R$2300) - Profissão Limitada");
        SendClientMessage(playerid, COR_ADVOGADO, "30 - Advogado (Salário: R$1600 + processos) - Profissão Limitada");
        SendClientMessage(playerid, COR_SEGURANÇA, "31 - Segurança (Salário: R$850 + o que ganhar do patrão)");
        SendClientMessage(playerid, COR_MOTORISTA, "32 - Motorista Particular (Salário R$800 + o que hanhar do patrão)");
        SendClientMessage(playerid, COR_LARANJA, "Para mais profissões digite /profs5");
		return 1;
	}

	if(strcmp(cmd, "/profs5", true) == 0) {
		SendClientMessage(playerid, COR_COP_ELITE, "Profissões disponíveis - Parte 5:");
        SendClientMessage(playerid, COR_MOTORISTA_ONIBUS, "33 - Motorista de onibus (Salario R$900)");
        SendClientMessage(playerid, COR_MENDINGO, "34 - Mendigo (Seguro mendingo R$200)");
        SendClientMessage(playerid, COR_VENDEDOR, "35 - Vendedor de Carros  (Salario R$600 + comissão) - Profissão Limitada");
		SendClientMessage(playerid, COR_CORRETOR, "36 - Corretor de Imoveis (Salário: R$600 + comissão) - Profissão Limitada");
        SendClientMessage(playerid, COR_SEGURADOR, "37 - Segurador (Salário: R$600) - Profissão Limitada");
        SendClientMessage(playerid, COR_JORNALISTA, "38 - Jornalista (Salário: R$950) - Profissão Limitada");
        SendClientMessage(playerid, COR_CAMINHONEIRO, "39 - Caminhoneiro (Salário: R$650 + viagens)");
        SendClientMessage(playerid, COR_TRANSPORTE_GAS, "40 - Transporte de Combustível (Salário: R$600 + viagens)");
        SendClientMessage(playerid, COR_AMARELO_CLARO, "As Profissões limitadas só podem ser contratadas por um admin. Favor não insistir!");
		return 1;
	}
	if(strcmp(cmd, "/profs6", true) == 0) {
		SendClientMessage(playerid, COR_COP_ELITE, "Profissões disponíveis - Parte 5:");
        SendClientMessage(playerid, COR_CONFISCADOR_CARROS, "42 - Fiscal de Transito (Salário R$1200 + fiscalizaçoes)");
        SendClientMessage(playerid, COR_AMARELO_CLARO, "As Profissões limitadas só podem ser contratadas por um admin. Favor não insistir!");
		return 1;
	}
	if(strcmp(cmd, "/gasolina", true) == 0 || strcmp(cmd, "/buygas", true) == 0) {
        SendClientMessage(playerid, COR_INSTRUTOR, "Comando incoreto!");
        SendClientMessage(playerid, COR_LARANJA, "Use: /abastecer [litros].");
		return 1;
	}
	if(strcmp(cmd, "/dinheiro", true) == 0 && IsPlayerAdmin(playerid)) {
        SendClientMessage(playerid, COR_BRANCO, "Feito.");
		udb_setBankMoney(PlayerName(playerid), udb_getBankMoney(PlayerName(playerid)) + 1500);
		return 1;
	}
	if(strcmp(cmd, "/ci", true) == 0) {
        SendClientMessage(playerid, COR_INSTRUTOR, "Comando incorreto!");
        SendClientMessage(playerid, COR_LARANJA, "Use: /docs [id].");
		return 1;
	}
	if(strcmp(cmd, "/givecash", true) == 0 || strcmp(cmd, "/transferir", true) == 0) {
        SendClientMessage(playerid, COR_INSTRUTOR, "Comando incorreto!");
        SendClientMessage(playerid, COR_LARANJA, "Use: /enviar [id] [valor].");
		return 1;
	}
	if(strcmp(cmd, "/bdp", true) == 0 || strcmp(cmd, "/sacar", true) == 0 || strcmp(cmd, "/bwd", true) == 0 || strcmp(cmd, "/bstats", true) == 0 || strcmp(cmd, "/bscell", true) == 0) {
        SendClientMessage(playerid, COR_INSTRUTOR, "Comando incorreto!");
        SendClientMessage(playerid, COR_AMARELO_CLARO, "/retirar [valor] ou /sacar [valor] : Retira dinheiro de sua conta bancaria. ");
		SendClientMessage(playerid, COR_AMARELO_CLARO, "/depositar [valor] : Deposita em sua conta bancaria");
		SendClientMessage(playerid, COR_AMARELO_CLARO, "/saldo : Vê o saldo de sua conta bancaria.");
		SendClientMessage(playerid, COR_AMARELO_CLARO, "/saldocel : Vê o saldo de sua conta bancaria pelo celular.");
		return 1;
	}


	if (strcmp(cmd, "/taxi", true)==0){
		new tmp[256];
		new string[256];
	    strmid(tmp, cmdtext, 5, strlen(cmdtext));
		if(!strlen(tmp)) {
			SendClientMessage(playerid, COR_VERMELHO, "/taxi [aonde]");
			return 1;
		}
		else{
		    SendClientMessage(playerid, COR_AMARELO, "Os taxistas foram informados");
		    for(new i=0; i<MAX_PLAYERS; i++){
		        if(Profissao[i] == TAXISTA){
					format(string, sizeof(string), "%s pede um taxi. Local: %s", PlayerName(playerid), tmp);
					SendClientMessage(i, COR_AMARELO, string);
		        }
			}
			return 1;
		}
	}
	if (strcmp(cmd, "/perdirprof", true)==0 && IsPlayerConnected(playerid)){
		new prof;
		new tmp[256];
		new string[256];
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid, COR_VERMELHO, "/pedirprof [prof]");
			return 1;
		}
		if(prof > 1 && prof < 43){
		    SendClientMessage(playerid, COR_VERMELHO, "Profissão Invalida, as profissões são de 2 a 42");
			return 1;
		}
		else{
		    format(string, sizeof(string), "Você pediu profissão de %s(id: %d)", ProfName[prof],prof);
			SendClientMessage(playerid, COR_AZUL, string);
		    for(new i=0; i<MAX_PLAYERS; i++){
		        if(IsPlayerAdmin(i)){
					format(string, sizeof(string), "%s(id: %d) está pedindo profissão de %s(id: %d)", PlayerName(playerid), playerid, ProfName[prof],prof);
					SendClientMessage(i, COR_AZUL, string);
		        }
			}
			return 1;
		}
	}
	if (strcmp(cmd, "/report", true)==0 && IsPlayerConnected(playerid)){
		new plid, msg[256];
		new tmp[256];
		new string[256];
	    strmid(tmp, cmdtext, 7, strlen(cmdtext));
		if(!strlen(tmp)) {
			SendClientMessage(playerid, COR_VERMELHO, "/report [id] [rasão]");
			return 1;
		}
		plid = strval(tmp);
		if(!strlen(tmp)) {
			SendClientMessage(playerid, COR_VERMELHO, "/report [id] [rasão]");
			return 1;
		}
		else{
		    SendClientMessage(playerid, COR_AMARELO, "Denuncia concedida!");
		    format(string, sizeof(string), "Você foi denunciado. Rasão: %s",msg);
			SendClientMessage(plid, COR_AZUL, string);
		    for(new i=0; i<MAX_PLAYERS; i++){
		        if(IsPlayerAdmin(i)){
					format(string, sizeof(string), "%s foi denunciado por %s. Rasão: %s", PlayerName(plid), PlayerName(playerid), msg);
					SendClientMessage(i, COR_AZUL, string);
		        }
			}
			return 1;
		}
	}
	if (strcmp(cmd, "/reforco", true)==0){
	    if(Profissao[playerid] == DELEGADO || Profissao[playerid] == COP_RODOVIARIO || Profissao[playerid] == COP_CIVIL || IsPlayerAdmin(playerid)){
			new plid;
			new tmp[256];
			new string[256];
			strmid(tmp, cmdtext, 8, strlen(cmdtext));
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COR_VERMELHO, "/reforco [id_do_procurado]");
				return 1;
			}
         	plid = strval(tmp);
			if(IsPlayerConnected(plid) && PLAYERLIST_authed[playerid] == 1){
			    SendClientMessage(playerid, COR_AMARELO, "Os policiais foram informados");
			    for(new i=0; i<MAX_PLAYERS; i++){
			        if(Profissao[i] == EXERCITO || Profissao[i] == COP_ELITE || Profissao[i] == COP_RODOVIARIO || Profissao[i] == COP_CIVIL){
						format(string, sizeof(string), "O Policial %s precisa de reforços contra %s", PlayerName(playerid),PlayerName(plid));
						SendClientMessage(i, COR_AMARELO, string);
						return 1;
					}
		        }
			}
			} else {
	  			SendClientMessage(playerid, COR_VERMELHO, "Jogador não conectado/logado!");
				return 1;
			}
		if(Profissao[playerid] != DELEGADO || Profissao[playerid] != COP_RODOVIARIO || Profissao[playerid] != COP_CIVIL){
			SendClientMessage(playerid, COR_VERMELHO, "Você não é Policial!");
			return 1;
		}
	}
	if (strcmp(cmd, "/noticia", true)==0){
	    if(Profissao[playerid] == JORNALISTA || IsPlayerAdmin(playerid)){
			new tmp[256];
			new string[256];
	    	strmid(tmp, cmdtext, 8, strlen(cmdtext));
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COR_VERMELHO, "/noticia [mensagen]");
				return 1;
			}
			else{
			    SendClientMessage(playerid, COR_AMARELO, "Noticia Publicada.");
				format(string, sizeof(string), "Noticias de San Andreas, Jornalista %s.", PlayerName(playerid));
				SendClientMessageToAll(COR_BRANCO, string);
				format(string, sizeof(string), "Noticia: %s ", tmp);
				SendClientMessageToAll(COR_AZUL_CLARO, string);
				return 1;
		    }
		} else {
		    SendClientMessage(playerid, COR_VERMELHO, "Você não é Jornalista!");
			return 1;
		}
	}
	if(strcmp(cmd, "/textall", true)==0 && IsPlayerAdmin(playerid)){
		new msg[256];
	   	strmid(msg, cmdtext, 8, strlen(cmdtext));
		if(!strlen(msg)) {
			SendClientMessage(playerid, COR_VERMELHO, "/textall [mensagen]");
			return 1;
		}
		else{
		    SendClientMessage(playerid, COR_BRANCO, "Feito.");
			format(msg, sizeof(msg), "%s", msg);
			TextAll = TextDrawCreate(280,600,msg);
			TextDrawShowForAll(TextAll);
    		TextDrawFont(TextAll,5);
    		TextDrawUseBox(TextAll, true);
    		SetTimer("Text",8000,false);
			return 1;
		}
	}
	
	if (strcmp(cmd, "/190", true)==0){
		new tmp[256];
		new string[256];
	    strmid(tmp, cmdtext, 4, strlen(cmdtext));
		if(!strlen(tmp)) {
			SendClientMessage(playerid, COR_VERMELHO, "/190 [denuncia]");
			return 1;
		}
		else{
		    SendClientMessage(playerid, COR_COP_ELITE, "Os policiais foram informados");
		    for(new i=0; i<MAX_PLAYERS; i++){
		        if(Profissao[i] == COP_CIVIL || Profissao[i] == COP_RODOVIARIO || Profissao[i] == COP_ELITE){
					format(string, sizeof(string), "%s fez uma denuncia: %s", PlayerName(playerid), tmp);
					SendClientMessage(i, COR_COP_ELITE, string);
		        }
			}
			return 1;
		}
	}

	if (strcmp(cmd, "/192", true)==0){
		new tmp[256];
		new string[256];
	    strmid(tmp, cmdtext, 4, strlen(cmdtext));
		if(!strlen(tmp)) {
			SendClientMessage(playerid, COR_VERMELHO, "/192 [local]");
			return 1;
		}
		else{
		    SendClientMessage(playerid, COR_COP_ELITE, "Os paramedicos foram informados");
		    for(new i=0; i<MAX_PLAYERS; i++){
		        if(Profissao[i] == PARAMEDICO){
					format(string, sizeof(string), "%s precisa de uma Ambulancia. Local: %s", PlayerName(playerid), tmp);
					SendClientMessage(i, COR_COP_ELITE, string);
		        }
			}
			return 1;
		}
	}

	if (strcmp(cmdtext, "/trancar", true)==0){
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER){
			new i;
			for(i=0;i<MAX_PLAYERS;i++){
				if(i != playerid){
					SetVehicleParamsForPlayer(GetPlayerVehicleID(playerid),i, 0, 1);
				}
			}
			SendClientMessage(playerid, COR_VERMELHO, "Você não está dirigindo nenhum veiculo!");
		}
		else{
			SendClientMessage(playerid, COR_COP_ELITE, "Veículo Trancado");
			new Float:X, Float:Y, Float:Z;
			PlayerPlaySound(playerid,1056,X,Y,Z);
			return 1;
		}
	}

	if (strcmp(cmdtext, "/destrancar", true)==0){
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER){
			new i;
			for(i=0;i<MAX_PLAYERS;i++){
				if(i != playerid){
					SetVehicleParamsForPlayer(GetPlayerVehicleID(playerid),i, 0, 0);
				}
			}
			SendClientMessage(playerid, COR_VERMELHO, "Você não está dirigindo nenhum veiculo!");
		}
		else{
			SendClientMessage(playerid, COR_COP_ELITE, "Veículo Destrancado");
			new Float:X, Float:Y, Float:Z;
			PlayerPlaySound(playerid,1057,X,Y,Z);
			return 1;
		}
		return 1;
	}

	if(strcmp(cmd, "/enviar", true) == 0) {
		new string[256];
	    new tmp[256];
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid, COR_VERMELHO, "Uso: /enviar [id] [valor]");
			return 1;
		}
		giveplayerid = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid, COR_VERMELHO, "Uso: /enviar [id] [valor]");
			return 1;
		}
 		moneys = strval(tmp);
		if (IsPlayerConnected(giveplayerid)) {
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
			playermoney = GetPlayerMoney(playerid);
			if (moneys > 0 && playermoney >= moneys) {
				GivePlayerMoney(playerid, (0 - moneys));
				GivePlayerMoney(giveplayerid, moneys);
				format(string, sizeof(string), "Você enviou %s(id: %d), R$%d.", giveplayer,giveplayerid, moneys);
				SendClientMessage(playerid, COR_AMARELO, string);
				format(string, sizeof(string), "Você recebeu R$%d de %s(id: %d).", moneys, sendername, playerid);
				SendClientMessage(giveplayerid, COR_AMARELO, string);
			}
			else {
				SendClientMessage(playerid, COR_AMARELO, "Valor inválido.");
			}
		}
		else {
			format(string, sizeof(string), "O Jogandor de id: %d, não está online", giveplayerid);
			SendClientMessage(playerid, COR_AMARELO, string);
		}
		return 1;
	}

	if(strcmp(cmd, "/transferir", true) == 0) {
		new string[256];
	    new tmp[256];
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid, COR_VERMELHO, "Uso: /transferir [id] [valor]");
			return 1;
		}
		giveplayerid = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid, COR_VERMELHO, "Uso: /transferir [id] [valor]");
			return 1;
		}
 		moneys = strval(tmp);
		if (IsPlayerConnected(giveplayerid)) {
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
			playermoney = GetPlayerMoney(playerid);
			if (moneys > 0 && playermoney >= moneys) {
				udb_setBankMoney(PlayerName(playerid), udb_getBankMoney(PlayerName(playerid)) - moneys);
				udb_setBankMoney(PlayerName(giveplayerid), udb_getBankMoney(PlayerName(giveplayerid)) + moneys);
				format(string, sizeof(string), "Você enviou %s(id: %d), R$%d.", giveplayer,giveplayerid, moneys);
				SendClientMessage(playerid, COR_AMARELO, string);
				format(string, sizeof(string), "Você recebeu R$%d de %s(id: %d) em sua conta bancaria.", moneys, sendername, playerid);
				SendClientMessage(giveplayerid, COR_AMARELO, string);
			}
			else {
				SendClientMessage(playerid, COR_AMARELO, "Valor inválido.");
			}
		}
		else {
			format(string, sizeof(string), "O Jogandor de id: %d, não está online.", playerid);
			SendClientMessage(playerid, COR_AMARELO, string);
		}
		return 1;
	}

    if(strcmp(cmd, "/depositar", true) == 0) {
		new tmp[256];
		new quantidade;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)){
			SendClientMessage(playerid, COR_BRANCO, "Uso: /depositar [quantidade]");
			return 1;
		}
	    quantidade = strval(tmp);
	    if(quantidade <= 0 || quantidade > GetPlayerMoney(playerid)){
	        SendClientMessage(playerid, COR_VERMELHO, "Você não tem todo esse dinheiro. Ou está tentando enviar R$0.");
			return 1;
		}
	    if(IsPlayerInCheckpoint(playerid)){
	        GivePlayerMoney(playerid, 0 - quantidade);
	        udb_setBankMoney(PlayerName(playerid), udb_getBankMoney(PlayerName(playerid)) + quantidade);
			return 1;
		}
		else{
			SendClientMessage(playerid, COR_AMARELO, "Você precisa estar em um banco para usar esse comando.");
			return 1;
		}
	}

    if(strcmp(cmd, "/sacar", true) == 0 || strcmp(cmd, "/retirar", true) == 0) {
        new string[256];
		new tmp[256];
		new quantidade;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)){
			SendClientMessage(playerid, COR_BRANCO, "Uso: /sacar [valor] ou /retirar [valor]");
			return 1;
		}
	    quantidade = strval(tmp);
	    if(quantidade < 0){
	        SendClientMessage(playerid, COR_VERMELHO, "Você não pode depositar com esse comando");
			return 1;
		}
		if(quantidade > udb_getBankMoney(PlayerName(playerid))){
		    SendClientMessage(playerid, COR_VERMELHO, "Você não pode tem essa quantidade no banco");
			return 1;
		}
	    if(IsPlayerInCheckpoint(playerid)){
	        GivePlayerMoney(playerid, quantidade);
	        udb_setBankMoney(PlayerName(playerid), udb_getBankMoney(PlayerName(playerid)) - quantidade);
			format(string, sizeof(string), "Você retirou R$%d do banco. seu saldo atual é de R$%d", quantidade, udb_getBankMoney(PlayerName(playerid)));
			SendClientMessage(playerid, COR_AMARELO, string);
			return 1;
		}
		else{
			SendClientMessage(playerid, COR_AMARELO, "Você precisa estar em um banco para usar esse comando.");
			return 1;
		}
	}

    if(strcmp(cmd, "/saldo", true) == 0) {
		new string[256];
        if(IsPlayerInCheckpoint(playerid)){
			format(string, sizeof(string), "%s, você tem %d na conta (seu id: %d)", PlayerName(playerid),udb_getBankMoney(PlayerName(playerid)), playerid);
			SendClientMessage(playerid, COR_VERDE, string);
			return 1;
		}
		else{
			SendClientMessage(playerid, COR_AMARELO, "Você precisa estar em um banco para usar esse comando.");
			return 1;
		}
	}

	if(strcmp(cmd, "/saldocel", true) == 0) {
		new string[256];
	    if(GetPlayerMoney(playerid) < 2){
            SendClientMessage(playerid, COR_AMARELO, "Você não tem dinheiro em mãos(Custo: R$2).");
			return 1;
		}
		else{
		    GivePlayerMoney(playerid, 0 - 2);
		    SendClientMessage(playerid, COR_AMARELO, "Nova mensagem de Bancos SA.");
			format(string, sizeof(string),"%s(id: %d), você tem %d em sua conta bancaria.", PlayerName(playerid),udb_getBankMoney(PlayerName(playerid)), playerid);
			SendClientMessage(playerid, COR_VERDE, string);
			return 1;
		}
	}

	if(strcmp(cmd, "/pagar", true) == 0) {
		new string[256];
	    new tmp[256];
	    new plid;
	    new pagamento;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid, COR_VERMELHO, "/pagar [id] [valor]");
			return 1;
		}
		plid = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid, COR_VERMELHO, "/pagar [id] [valor]");
			return 1;
		}
 		pagamento = strval(tmp);
        if(Profissao[plid] == VENDEDOR_DE_CARROS || Profissao[plid] == CORRETOR){
 			if(pagamento > GetPlayerMoney(plid) || pagamento <= 0){
				SendClientMessage(playerid, COR_VERMELHO, "Você não tem esse dinheiro! ou não está querendo pagar de forma justa.");
				return 1;
			}
 			if(IsPlayerConnected(plid)){
 			    GivePlayerMoney(plid, pagamento/10);
 			    GivePlayerMoney(playerid, 0-pagamento);
    	        SendClientMessage(playerid, COR_VERDE, "Pagamento feito.");
				format(string, sizeof(string), "Você vendeu por %d e lucrou %d com a venda", pagamento, pagamento/10);
				SendClientMessage(playerid, COR_VERDE, string);
				return 1;
			}
			else{
				SendClientMessage(playerid, COR_VERMELHO, "O jogador não está conectado!");
				return 1;
			}
		}
		if(Profissao[plid] != VENDEDOR_DE_CARROS || Profissao[plid] != CORRETOR){
		    SendClientMessage(playerid, COR_VERMELHO, "Você está tentando pagaer a alguem que não é coretoe e nem vendedor!");
			return 1;
		}
		return 1;
	}

	if(strcmp(cmd, "/docs", true) == 0) {
		new string[256];
	    new tmp[256];
	    new plid;
	    new hab[5];
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid, COR_VERMELHO, "Documentos mostrados.");
			return 1;
		}
        plid = strval(tmp);
		if(IsPlayerConnected(plid)){
		    hab[2] = udb_getHabaerea(PlayerName(playerid));
		    hab[0] = udb_gethabterre(PlayerName(playerid));
		    hab[1] = udb_getHabnauti(PlayerName(playerid));
			format(string, sizeof(string), "Identidade de : %s", PlayerName(playerid));
			SendClientMessage(playerid, COR_COP_ELITE, string);
			format(string, sizeof(string), "Skin : %d", udb_getSkin(PlayerName(playerid)));
			SendClientMessage(playerid, COR_LARANJA, string);
			if(hab[0] == 0){
			    SendClientMessage(playerid, COR_AMARELO_CLARO, "Habilitação de Carros e Motos: NÂO");
			}
			if(hab[0] == 1){
			    SendClientMessage(playerid, COR_AMARELO_CLARO, "Habilitação de Carros e Motos: SIM");
			}
			if(hab[1] == 0){
			    SendClientMessage(playerid, COR_AMARELO_CLARO, "Habilitação Náutica: NÂO");
			}
			if(hab[1] == 1){
			    SendClientMessage(playerid, COR_AMARELO_CLARO, "Habilitação Náutica: SIM");
			}
			if(hab[2] == 0){
			    SendClientMessage(playerid, COR_AMARELO_CLARO, "Habilitação Aérea: NÂO");
			}
			if(hab[2] == 1){
			    SendClientMessage(playerid, COR_AMARELO_CLARO, "Habilitação Aérea: SIM");
			}
			format(string, sizeof(string), "Documentos mostrados para %s.", PlayerName(plid));
			SendClientMessage(playerid, COR_COP_ELITE, string);
			return 1;
		}
		else{
		    SendClientMessage(playerid, COR_VERMELHO, "Jogador nao conectado/logado.");
		}
		return 1;
	}

	if(strcmp(cmd, "/habaero", true) == 0) {
	    if(Profissao[playerid] == INSTRUTOR_DE_DIRECAO || IsPlayerAdmin(playerid)){
		    new tmp[256];
		    new plid;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COR_VERDE, "Habilitação de direção aerea concedida.");
				return 1;
			}
	        plid = strval(tmp);
			if(IsPlayerConnected(plid)){
			    udb_setHabaerea(PlayerName(plid), 1);
			    SendClientMessage(playerid, COR_VERDE, "Habilitação de direção habilitação aeria concedida.");
			    SendClientMessage(plid, COR_VERDE, "Agora você tem carteira de habilitação aeria, pode dirigir: helicopteros e aviões.");
			    printf("O Jogador %s(id: %d) deu carteira de habilitaçao aeria a %s(id: %d).", PlayerName(playerid),playerid,PlayerName(plid),plid);
			    GivePlayerMoney(plid, -1200);
				return 1;
			}
			else{
			    SendClientMessage(playerid, COR_VERMELHO, "ID inválido");
				return 1;
			}
		}
        if(Profissao[playerid] != INSTRUTOR_DE_DIRECAO){
            SendClientMessage(playerid, COR_VERMELHO, "Você não é Intrutor de Direção.");
			return 1;
		}
	}


	if(strcmp(cmd, "/habterrestre", true) == 0) {
	    if(Profissao[playerid] == INSTRUTOR_DE_DIRECAO || IsPlayerAdmin(playerid)){
			new tmp[256];
		    new plid;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COR_VERDE, "Habilitação de direção terrestre concedida.");
				return 1;
			}
    	    plid = strval(tmp);
			if(IsPlayerConnected(plid)){
			    udb_setHabterre(PlayerName(plid), 1);
			    SendClientMessage(playerid, COR_VERDE, "Habilitação de direção terrestre concedida.");
			    SendClientMessage(plid, COR_VERDE, "Agora você tem carteira de habilitação terrestre, pode dirigir: carros, motos, caminhoes e onibus.");
			    printf("O Jogador %s(id: %d) deu carteira de habilitaçao terrestre a %s(id: %d).", PlayerName(playerid),playerid,PlayerName(plid),plid);
			    GivePlayerMoney(plid, -500);
				return 1;
			}
			else{
			    SendClientMessage(playerid, COR_VERMELHO, "ID inválido");
				return 1;
			}
		}
        if(Profissao[playerid] != INSTRUTOR_DE_DIRECAO){
            SendClientMessage(playerid, COR_VERMELHO, "Você não é Intrutor de Direção.");
			return 1;
		}
	}

	if(strcmp(cmd, "/habnautica", true) == 0) {
		if(Profissao[playerid] == INSTRUTOR_DE_DIRECAO || IsPlayerAdmin(playerid)){
			new tmp[256];
			new plid;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
			SendClientMessage(playerid, COR_VERDE, "Habilitação de direção náutica concedida.");
			return 1;
			}
    	    plid = strval(tmp);
			if(IsPlayerConnected(plid)){
			    udb_setHabnauti(PlayerName(plid), 1);
			    SendClientMessage(playerid, COR_VERDE, "Habilitação de direção náutica concedida.");
			    SendClientMessage(plid, COR_VERDE, "Agora você tem carteira de habilitação nautica, pode dirigir: barcos, navios.");
			    printf("O Jogador %s(id: %d) deu carteira de habilitaçao nautica a %s(id: %d).", PlayerName(playerid),playerid,PlayerName(plid),plid);
			    GivePlayerMoney(plid, -800);
				return 1;
			}
			else{
			    SendClientMessage(playerid, COR_VERMELHO, "ID inválido");
				return 1;
			}
		}
        if(Profissao[playerid] != INSTRUTOR_DE_DIRECAO){
            SendClientMessage(playerid, COR_VERMELHO, "Você não tem level o suficiente.");
			return 1;
		}
	}

	if(strcmp(cmd, "/cacarterrestre", true) == 0) {
	    if(Profissao[playerid] == COP_RODOVIARIO || IsPlayerAdmin(playerid)){
			new tmp[256];
		    new plid;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COR_VERDE, "Habilitação de direção terrestre caçada.");
				return 1;
			}
    	    plid = strval(tmp);
			if(IsPlayerConnected(plid)){
			    udb_setHabterre(PlayerName(plid), 0);
			    SendClientMessage(playerid, COR_VERDE, "Habilitação de direção terrestre caçada.");
			    SendClientMessage(plid, COR_VERDE, "Sua Carteira de habilitação terrestre foi caçada, agora não pode dirigir mais nem um veículo terrestre.");
			    printf("O Jogador %s(id: %d) deu carteira de habilitaçao terrestre a %s(id: %d).", PlayerName(playerid),playerid,PlayerName(plid),plid);
				return 1;
			}
			else{
			    SendClientMessage(playerid, COR_VERMELHO, "ID inválido");
				return 1;
			}
		}
        if(Profissao[playerid] != COP_RODOVIARIO){
            SendClientMessage(playerid, COR_VERMELHO, "Você não é Policial.");
			return 1;
		}
	}

    if(strcmp(cmd,"/gorjeta",true)==0){
        if(Profissao[playerid] == TAXISTA || Profissao[playerid] == ENTREGADOR_PIZZA || Profissao[playerid] == VENDEDOR_LANCHE){
	    	new tmp[256];
	    	new msg[256];
            new plid;
	    	strmid(tmp,cmdtext,8,strlen(cmdtext));
            plid = strval(tmp);
	    	if(!strlen(tmp)) {
	        	SendClientMessage(playerid,COR_VERMELHO,"Uso: /gorjeta [id]");
		    	return 1;
			    }
            if(IsPlayerConnected(plid)){
				format(msg,sizeof(msg),"%s esta lhe pedindo gorjeta.", PlayerName(playerid));
			    SendClientMessage(plid, COR_VERDE,msg);
       		}
			else{
			    SendClientMessage(playerid, COR_VERMELHO, "ID inválido");
				return 1;
			}
		}
		else{
   			SendClientMessage(playerid, COR_VERMELHO, "Você não é Taxista/Entregador de Pizza/Vendedor de Lanches.");
			return 1;
		}
	}
	
	if(strcmp(cmd,"/almento",true)==0){
        if(Profissao[playerid] == MOTORISTA_PARTICULAR || Profissao[playerid] == SEGURANÇA){
	    	new tmp[256];
	    	new msg[256];
            new plid;
	    	strmid(tmp,cmdtext,8,strlen(cmdtext));
            plid = strval(tmp);
	    	if(!strlen(tmp)) {
	        	SendClientMessage(playerid,COR_VERMELHO,"Uso: /almento [id]");
		    	return 1;
			    }
            if(IsPlayerConnected(plid)){
				format(msg,sizeof(msg),"%s esta lhe pedindo almento.", PlayerName(playerid));
			    SendClientMessage(plid, COR_VERDE,msg);
       		}
			else{
			    SendClientMessage(playerid, COR_VERMELHO, "ID inválido");
				return 1;
			}
		}
		else{
    		SendClientMessage(playerid, COR_VERMELHO, "Você não é Motorista Particular/Segurança.");
			return 1;
		}
	}
    if(strcmp(cmd, "/tirarterrestre", true) == 0) {
	    if(Profissao[playerid] == CONFISCADOR_CARROS || IsPlayerAdmin(playerid)){
			new tmp[256];
		    new plid;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COR_INSTRUTOR, "Habilitação de direção terrestre removida.");
				return 1;
			}
    	    plid = strval(tmp);
			if(IsPlayerConnected(plid)){
			    udb_setHabterre(PlayerName(plid), 0);
			    SendClientMessage(playerid, COR_INSTRUTOR, "Habilitação de direção terrestre concedida.");
			    SendClientMessage(plid, COR_INSTRUTOR, "Você perdeu a habilitação de direção de carros e motos.");
				return 1;
			}
			else{
			    SendClientMessage(playerid, COR_VERMELHO, "ID inválido");
				return 1;
			}
		}
        if(Profissao[playerid] != CONFISCADOR_CARROS){
            SendClientMessage(playerid, COR_VERMELHO, "Você não tem level o suficiente.");
			return 1;
		}
	}
	
    if(strcmp(cmd, "/tirarnautica", true) == 0) {
		if(Profissao[playerid] == CONFISCADOR_CARROS || IsPlayerAdmin(playerid)){
			new tmp[256];
			new plid;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
			SendClientMessage(playerid, COR_INSTRUTOR, "Habilitação de direção náutica removida.");
			return 1;
			}
    	    plid = strval(tmp);
			if(IsPlayerConnected(plid)){
			    udb_setHabnauti(PlayerName(plid), 0);
			    SendClientMessage(playerid, COR_INSTRUTOR, "Habilitação de direção náutica excluida.");
			    SendClientMessage(plid, COR_INSTRUTOR, "Você perdeu a habilitação de direção náutica.");
				return 1;
			}
			else{
			    SendClientMessage(playerid, COR_VERMELHO, "ID inválido");
				return 1;
			}
		} else {
            SendClientMessage(playerid, COR_VERMELHO, "Você não tem level o suficiente.");
			return 1;
		}
	}
	if(strcmp(cmd, "/tiraraerea", true) == 0) {
            if(Profissao[playerid] == CONFISCADOR_CARROS || IsPlayerAdmin(playerid)){
		    new tmp[256];
		    new plid;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COR_INSTRUTOR, "Habilitação de direção aerea removida.");
				return 1;
			}
	        plid = strval(tmp);
			if(IsPlayerConnected(plid)){
			    udb_setHabaerea(PlayerName(plid), 0);
			    SendClientMessage(playerid, COR_INSTRUTOR, "Habilitação de direção aerea excluida.");
			    SendClientMessage(plid, COR_INSTRUTOR, "Você perdeu a habilitação de direção aerea.");
				return 1;
			}
			else{
			    SendClientMessage(playerid, COR_VERMELHO, "ID inválido");
				return 1;
			}
		}
            if(Profissao[playerid] != CONFISCADOR_CARROS){
            SendClientMessage(playerid, COR_VERMELHO, "Você não tem level o suficiente.");
			return 1;
		}
	}
 	if(strcmp(cmd, "/prender", true) == 0) {
	    if(Profissao[playerid] == COP_CIVIL || Profissao[playerid] == COP_RODOVIARIO || Profissao[playerid] == DELEGADO || Profissao[playerid] == COP_ELITE || Profissao[playerid] == NARCOTICOS || IsPlayerAdmin(playerid)){
	    	new tmp[256];
	    	new plid;
	    	new distancia;
	    	new string[256];
	    	distancia = GetDistanceBetweenPlayers(playerid, plid);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COR_VERMELHO, "/prender [id]");
				return 1;
			}
        	plid = strval(tmp);
			if(IsPlayerConnected(plid) && PLAYERLIST_authed[plid] == 1){
			    if(distancia > 10){
			        SendClientMessage(playerid, COR_VERMELHO, "Chegue mais perto!");
					return 1;
				}
				if(distancia <= 10){
				    RemovePlayerFromVehicle(plid);
				    Presos[plid] = 1;
				    udb_setPrisao(PlayerName(plid), 1);
				    SetTimerEx("Prisao", 2000, 0, "%d", plid);
					RemovePlayerFromVehicle(plid);
					LogarPlayer(plid);
					format(string, sizeof(string), "Você foi preso por: %s", PlayerName(playerid));
					SendClientMessage(plid, COR_SEGURANÇA, string);
				    SendClientMessage(playerid, COR_VERDE, "Prisão concluida");
				    SetPlayerSpecialAction(plid,SPECIAL_ACTION_HANDSUP);
				    printf("O Jogador %s(id: %d) prendeu %s(id: %d).", PlayerName(playerid),playerid,PlayerName(plid),plid);
					return 1;
				}
			}
			else{
    	        SendClientMessage(playerid, COR_VERMELHO, "Jogador não está conectado/logado");
				return 1;
			}
		}
		if(Profissao[playerid] != COP_CIVIL || Profissao[playerid] != COP_RODOVIARIO || Profissao[playerid] != DELEGADO || Profissao[playerid] != COP_ELITE){
			SendClientMessage(playerid, COR_VERMELHO, "Você não é policial/Delegado");
			return 1;
		}
	}

    if(strcmp(cmd, "/fianca", true) == 0) {
        if(Presos[playerid] == 0){
            SendClientMessage(playerid,COR_VERMELHO,"Você não está preso!");
			return 1;
		} else {
		    if(udb_getBankMoney(PlayerName(playerid)) < 1000){
		        SendClientMessage(playerid,COR_VERMELHO,"Você não tem toda essa quantia no banco!");
	 	   		return 1;
		    } else {
				udb_setPrisao(PlayerName(playerid), 0);
				Presos[playerid] = 0;
				SetSpawnInfo(playerid,1,udb_getSkin(PlayerName(playerid)),-1605.3073,718.3339,11.9387,0,0,0,0,0,0,0);
				SpawnPlayer(playerid);
				SetPlayerWantedLevel(playerid, 0);
				SendClientMessage(playerid, COR_VERDE, "Você pagou a fiança no valor de R$1000 e foi solto.");
				udb_setBankMoney(PlayerName(playerid), udb_getBankMoney(PlayerName(playerid)) - 1000);
				return 1;
			}
		}
	}

	if(strcmp(cmd, "/soltar", true) == 0) {
	    if(Profissao[playerid] == JUIZ || Profissao[playerid] == DELEGADO || IsPlayerAdmin(playerid)){
		    new tmp[256];
		    new plid;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COR_VERMELHO, "/soltar [id]");
				return 1;
			}
	        plid = strval(tmp);
			if(IsPlayerConnected(plid) && PLAYERLIST_authed[playerid] == 1){
				if(Presos[plid] == 0){
				    SendClientMessage(playerid,COR_VERMELHO,"O jogador não está preso!");
					return 1;
				} else {
				    udb_setPrisao(PlayerName(playerid), 0);
				    Presos[plid] = 0;
				    SetSpawnInfo(plid,0,udb_getSkin(PlayerName(plid)),-1605.3073,718.3339,11.9387,0,0,0,0,0,0,0);
				    SetPlayerInterior(plid,0);
				    SpawnPlayer(plid);
				    SetPlayerWantedLevel(plid, 0);
				    SendClientMessage(plid,COR_VERDE,"Sua sentença acabou, não cometa mais crimes, ou será preso novamente.");
				    format(tmp,sizeof(tmp),"Você foi solto por %s",PlayerName(playerid));
				    SendClientMessage(plid,COR_VERDE,tmp);
				    SendClientMessage(playerid,COR_VERDE,"Libertado");
					return 1;
				}
			}
			else{
	            SendClientMessage(playerid, COR_VERMELHO, "Jogador não está conectado/logado");
				return 1;
			}
		}
		if(Profissao[playerid] != JUIZ || Profissao[playerid] != DELEGADO){
		    SendClientMessage(playerid, COR_VERMELHO, "Você não é Juiz/Delegado");
			return 1;
		}
	}

	if(strcmp(cmd, "/setprof", true) == 0) {
	    if(IsPlayerAdmin(playerid)){
	    	new tmp[256];
	    	new plid;
	    	new prof;
	    	new string[256];
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COR_VERMELHO, "/setprof [id] [prof]");
				return 1;
			}
        	plid = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COR_VERMELHO, "/setprof [id] [prof]");
				return 1;
			}
        	prof = strval(tmp);
        	if(IsPlayerConnected(plid)){
    			if(prof > 1 && prof < 41){
					if(GetPlayerState(plid) != PLAYER_STATE_DRIVER){
						udb_setProf(PlayerName(plid), prof);
						format(string, sizeof(string), "%s, você mudou a profissão de %s para %s." , PlayerName(playerid), PlayerName(plid), ProfName[prof]);
						SendClientMessage(playerid, COR_COP_ELITE, string);
						format(string, sizeof(string), "%s, %s mudou sua profissão, agora você é um %s.", PlayerName(plid), PlayerName(playerid), ProfName[prof]);
						printf("%s mudou a profissão de %s para %s.", PlayerName(playerid), PlayerName(plid), ProfName[prof]);
						SendClientMessage(plid, COR_VERDE, string);
						SendClientMessage(plid, COR_VERDE, "Digite /profissao para ver os comandos de sua profissão.");
						Profissao[plid] = prof;
						LogarPlayer(plid);
						SpawnPlayer(plid);
						if(prof == DESEMPREGADO) {
							SetPlayerColor(plid, COR_DESEMPREGADO); // Cinza
							return 1;
						}
						else if(prof == ENTREGADOR_PIZZA) {
							SetPlayerColor(plid, COR_ENTREGADOR_PIZZA); // Beje
							SetPlayerPos(plid, -1805.1130,948.6368,24.8906);
							SetPlayerSkin(plid, 155);
							udb_setSkin(PlayerName(plid), 155);
							GameTextForPlayer(plid, "~y~Entregador de Pizza",1500,4);
							return 1;
						}
						else if(prof == BARMAN) {
							SetPlayerColor(plid, COR_BARMAN); // Bege
							SetPlayerPos(plid, -2244.1035,-89.8179,35.3203);
							SetPlayerSkin(plid, 240);
							udb_setSkin(PlayerName(plid), 240);
							GameTextForPlayer(plid, "~y~Barman",1500,4);
							return 1;
						}
						else if(prof == SORVETEIRO) {
							SetPlayerColor(plid, COR_SORVETEIRO); // Bege
							SetPlayerPos(plid, -2097.6360,-2348.1455,30.6250);
							SetPlayerSkin(plid, 188);
							udb_setSkin(PlayerName(plid), 188);
							GameTextForPlayer(plid, "~y~Sorveteiro",1500,4);
							return 1;
						}
     					else if(prof == VENDEDOR_LANCHE) {
							SetPlayerColor(plid, COR_VENDEDOR_LANCHES); // Bege
							SetPlayerPos(plid, -2333.7896,-167.2186,35.5547);
							SetPlayerSkin(plid, 98);
							udb_setSkin(PlayerName(plid), 98);
							GameTextForPlayer(plid, "~y~Vendedor de Lanches",1500,4);
							return 1;
						}
						else if(prof == PARAMEDICO) {
							SetPlayerColor(plid, COR_PARAMEDICO); // Gold
							SetPlayerPos(plid, -2620.2874,629.6313,14.4531);
							SetPlayerSkin(plid, 70);
							udb_setSkin(PlayerName(plid), 70);
							GameTextForPlayer(plid, "~y~Paramedico",1500,4);
							return 1;
      					}
      					else if(prof == INSTRUTOR_DE_DIRECAO) {
							SetPlayerColor(plid, COR_INSTRUTOR); // Vermelho Claro
							SetPlayerPos(plid, -2026.2343,-98.7060,35.1641);
							SetPlayerSkin(plid, 250);
							udb_setSkin(PlayerName(plid), 250);
							GameTextForPlayer(plid, "~y~Instrutor de Direcao",1500,4);
							return 1;
						}
						else if(prof == FRENTISTA) {
							SetPlayerColor(plid, COR_FRENTISTA); // Cinza
							SetPlayerPos(plid, -1675.9708,431.7278,7.1797);
							SetPlayerSkin(plid, 184);
							udb_setSkin(PlayerName(plid), 184);
							GameTextForPlayer(plid, "~y~Frentista",1500,4);
							return 1;
						}
						else if(prof == TAXISTA) {
							SetPlayerColor(playerid, COR_TAXISTA); // Amarelo
							SetPlayerPos(plid, -1754.8579,961.1520,24.8828);
							SetPlayerSkin(plid, 234);
							GameTextForPlayer(plid, "~y~Taxista",1500,4);
							udb_setSkin(PlayerName(plid), 234);
							return 1;
						}
						else if(prof == MOTO_TAXI) {
							SetPlayerColor(plid, COR_TAXISTA); // Amarelo
							SetPlayerPos(plid, -1754.8579,961.1520,24.8828);
							SetPlayerSkin(plid, 234);
							udb_setSkin(PlayerName(plid), 234);
							GameTextForPlayer(plid, "~y~Moto-Taxi",1500,4);
							return 1;
						}
						else if(prof == TAXI_AERIO) {
							SetPlayerColor(plid, COR_TAXI_AEREO); // Amarelo
							SetPlayerPos(plid, -1754.8579,961.1520,24.8828);
							SetPlayerSkin(plid, 234);
							udb_setSkin(PlayerName(plid), 234);
							GameTextForPlayer(plid, "~y~Taxi Aerio",1500,4);
							return 1;
						}
						else if(prof == SEQUESTRADOR) {
							SetPlayerColor(plid, COR_SEQUESTRADOR); // Amarelo
							SetPlayerSkin(plid, 66);
							udb_setSkin(PlayerName(plid), 66);
							GameTextForPlayer(plid, "~y~Sequestrador",1500,4);
							return 1;
						}
						else if(prof == ASSASSINO) {
							SetPlayerColor(plid, COR_ASSASSINO); // Vermelho
							SetPlayerSkin(plid, 101);
							udb_setSkin(PlayerName(plid), 101);
							GameTextForPlayer(plid, "~y~Assassino",1500,4);
							return 1;
						}
						else if(prof == ASSALTANTE) {
							SetPlayerColor(plid, COR_ASSALTANTE); // Azul Mar
							SetPlayerSkin(plid, 28);
							udb_setSkin(PlayerName(plid), 28);
							GameTextForPlayer(plid, "~y~Assaltante",1500,4);
							return 1;
						}
						else if(prof == LADRAO_CARROS) {
							SetPlayerColor(plid, COR_LADRAO_CARROS); // Vermelho
							SetPlayerPos(plid, -365.7678,1166.3445,19.7422);
							SetPlayerSkin(plid, 22);
							udb_setSkin(PlayerName(plid), 22);
							GameTextForPlayer(plid, "~y~Ladrao de Carros",1500,4);
							return 1;
						}
						else if(prof == TRAFICANTE) {
							SetPlayerColor(plid, COR_TRAFICANTE); // Vermelho
							SetPlayerSkin(plid, 19);
							udb_setSkin(PlayerName(plid), 19);
							GameTextForPlayer(plid, "~y~Traficante",1500,4);
							return 1;
						}
						else if(prof == VENDEDOR_DE_ARMAS) {
							SetPlayerColor(plid, COR_VENDEDOR_ARMAS); // Vermelho
							SetPlayerSkin(plid, 101);
							udb_setSkin(PlayerName(plid), 101);
							GameTextForPlayer(plid, "~y~Vendedor de Armas",1500,4);
							return 1;
						}
						else if(prof == CACADOR) {
							SetPlayerColor(plid, COR_CACADOR); // Bege
							SetPlayerSkin(plid,  133);
							udb_setSkin(PlayerName(plid), 133);
							GameTextForPlayer(plid, "~y~Cacador",1500,4);
							return 1;
						}
						else if(prof == PESCADOR) {
							SetPlayerColor(plid, COR_PESCADOR); // Bege
							SetPlayerSkin(plid,  35);
							udb_setSkin(PlayerName(plid), 35);
							GameTextForPlayer(plid, "~y~Pescador",1500,4);
							return 1;
						}
						else if(prof == AGRICULTOR) {
							SetPlayerColor(plid, COR_AGRICULTOR); // Bege
							SetPlayerSkin(plid,  160);
							udb_setSkin(PlayerName(plid), 160);
							GameTextForPlayer(plid, "~y~Agricutor",1500,4);
							return 1;
						}
						else if(prof == COP_CIVIL) {
							SetPlayerColor(plid, COR_COP_CIVIL); // Azul
							SetPlayerPos(plid, -1605.3073,718.3339,11.9387);
							SetPlayerSkin(plid, 280);
							udb_setSkin(PlayerName(plid), 280);
							GameTextForPlayer(plid, "~y~Policial Civil",1500,4);
							return 1;
						}
						else if(prof == COP_RODOVIARIO) {
							SetPlayerColor(plid, COR_COP_RODOVIARIO); // Azul
							SetPlayerPos(plid, -211.6215,980.4658,19.3253);
							SetPlayerSkin(plid, 283);
							udb_setSkin(PlayerName(plid), 283);
							GameTextForPlayer(plid, "~y~Policial Rodoviario",1500,4);
							return 1;
						}
						else if(prof == COP_ELITE) {
							SetPlayerColor(plid, COR_COP_ELITE); // Azul Claro
							SetPlayerPos(plid, 1552.9604,-1675.1140,16.1953);
							SetPlayerSkin(plid, 285);
							udb_setSkin(PlayerName(plid), 285);
							GameTextForPlayer(plid, "~y~S.W.A.T.",1500,4);
							return 1;
						}
						else if(prof == DELEGADO) {
							SetPlayerColor(plid, COR_DELEGADO); // Azul Escuro
							SetPlayerPos(plid, -1605.3073,718.3339,11.9387);
							SetPlayerSkin(plid, 125);
							udb_setSkin(PlayerName(plid),  125);
							GameTextForPlayer(plid, "~y~Delegado",1500,4);
							return 1;
						}
						else if(prof == JUIZ) {
							SetPlayerColor(plid, COR_JUIZ); // verde claro
							SetPlayerPos(plid, -1605.3073,718.3339,11.9387);
							SetPlayerSkin(plid, 59);
							udb_setSkin(PlayerName(plid), 59);
							GameTextForPlayer(plid, "~y~Juiz",1500,4);
							return 1;
						}
						else if(prof == NARCOTICOS) {
							SetPlayerColor(plid, COR_JUIZ); //
							SetPlayerPos(plid, 1552.9604,-1675.1140,16.1953);
							SetPlayerSkin(plid, 46);
							udb_setSkin(PlayerName(plid), 46);
							GameTextForPlayer(plid, "~y~Narcoticos",1500,4);
							return 1;
						}
						else if(prof == POLICIA_FLORESTAL) {
							SetPlayerColor(plid, COR_POLICIA_FLORESTAL); // verde azul
							SetPlayerPos(plid, -2163.1667,-2387.7739,30.6250);
							SetPlayerSkin(plid, 127);
							udb_setSkin(PlayerName(plid), 127);
							GameTextForPlayer(plid, "~y~Policia Florestal",1500,4);
							return 1;
						}
						else if(prof == IBAMA) {
							SetPlayerColor(plid, COR_IBAMA); // Azul Claro
							SetPlayerPos(plid, -2163.1667,-2387.7739,30.6250);
							SetPlayerSkin(plid, 98);
							udb_setSkin(PlayerName(plid), 98);
							GameTextForPlayer(plid, "~y~Ibama",1500,4);
							return 1;
						}
						else if(prof == EXERCITO) {
							SetPlayerColor(plid, COR_EXERCITO); // Verde Escuro
							SetPlayerPos(plid, -1310.9027,472.2223,7.1875);
							SetPlayerSkin(plid, 287);
							udb_setSkin(PlayerName(plid), 287);
							GameTextForPlayer(plid, "~y~Exercito",1500,4);
							return 1;
						}
						else if(prof == ADVOGADO) {
							SetPlayerColor(plid, COR_ADVOGADO); // Roxo
							SetPlayerPos(plid, -1938.5940,569.9607,35.2899);
							SetPlayerSkin(plid, 147);
							udb_setSkin(PlayerName(plid), 147);
							GameTextForPlayer(plid, "~y~Advogado",1500,4);
							return 1;
						}
						else if(prof == SEGURANÇA) {
							SetPlayerColor(plid, COR_SEGURANÇA); // Azul super claro
							SetPlayerPos(plid, -2180.6013,-2401.2395,30.6250);
							SetPlayerSkin(plid, 165);
							udb_setSkin(PlayerName(plid), 165);
							GameTextForPlayer(plid, "~y~Seguranca",1500,4);
							return 1;
						}
						else if(prof == MOTORISTA_PARTICULAR) {
							SetPlayerColor(plid, COR_MOTORISTA); // Laranja
							SetPlayerPos(plid, -1754.8579,961.1520,24.8828);
							SetPlayerSkin(plid, 255);
							udb_setSkin(PlayerName(plid), 255);
							GameTextForPlayer(plid, "~y~Motorista Particular",1500,4);
							return 1;
						}
						else if(prof == MOTORISTA_DE_ONIBUS) {
							SetPlayerColor(plid, COR_MOTORISTA_ONIBUS); // Claro
							SetPlayerPos(plid, -1938.5940,569.9607,35.2899);
							SetPlayerSkin(plid, 252);
							udb_setSkin(PlayerName(plid), 253);
							GameTextForPlayer(plid, "~y~Motorista de Onibus",1500,4);
							return 1;
						}
						else if(prof == MENDINGO) {
							SetPlayerColor(plid, COR_MENDINGO); // Claro
							SetPlayerPos(plid, -2085.4712,-2448.2737,30.6250);
							SetPlayerSkin(plid, 252);
							udb_setSkin(PlayerName(plid), 253);
							GameTextForPlayer(plid, "~y~Motorista de Onibus",1500,4);
							return 1;
						}
						else if(prof == VENDEDOR_DE_CARROS) {
							SetPlayerColor(plid, COR_VENDEDOR); // Verde
							SetPlayerPos(plid, -1652.3525,1207.9297,7.2500);
							SetPlayerSkin(plid, 120);
							udb_setSkin(PlayerName(plid), 120);
							GameTextForPlayer(plid, "~y~Vendedor de Carros",1500,4);
							return 1;
						}
						else if(prof == CORRETOR) {
							SetPlayerColor(plid, COR_CORRETOR); // Marfin
							SetPlayerSkin(plid, 126);
							udb_setSkin(PlayerName(plid), 126);
							GameTextForPlayer(plid, "~y~Corretor",1500,4);
							return 1;
						}
						else if(prof == SEGURADOR) {
							SetPlayerColor(plid, COR_SEGURADOR); // Bege
							GameTextForPlayer(plid, "~y~Segurador",1500,4);
							SetPlayerPos(plid, 1153.8121,-1770.8701,16.5992);
							SetPlayerSkin(plid, 117);
							udb_setSkin(PlayerName(plid), 117);
							return 1;
						}
						else if(prof == JORNALISTA) {
							SetPlayerColor(plid, COR_JORNALISTA); // Bege
							GameTextForPlayer(plid, "~y~Jornalista",1500,4);
							SetPlayerPos(plid, -2521.2449,-624.7714,132.7831);
							SetPlayerSkin(plid, 186);
							udb_setSkin(PlayerName(plid), 186);
							return 1;
						}
						else if(prof == CAMINHONEIRO) {
							SetPlayerColor(plid, COR_CAMINHONEIRO); // Gold
							SetPlayerPos(plid, -2097.3877,-2255.6489,30.6250);
							SetPlayerSkin(plid, 124);
							udb_setSkin(PlayerName(plid), 124);
							GameTextForPlayer(plid, "~y~Caminhoneiro",1500,4);
							return 1;
						}
						else if(prof == TRANSPORTE_GAS) {
							SetPlayerColor(plid, COR_TRANSPORTE_GAS);
							SetPlayerPos(plid, 295.6498,1385.6342,10.1560);
							SetPlayerSkin(plid, 125);
							udb_setSkin(PlayerName(plid), 125);
							GameTextForPlayer(plid, "~y~Transporte de Combustivel",1500,4);
							return 1;
						}
						else{
			 				SendClientMessage(playerid, COR_VERMELHO, "Essa não é uma profisssão válida!");
							return 1;
						}
					}
					else{
						SendClientMessage(playerid, COR_VERMELHO, "O Jogador está em um veículo!");
						return 1;
					}
				}
				else{
				   	SendClientMessage(playerid, COR_VERMELHO, "Jogador não conectado/logado.");
					return 1;
				}
			}
			else{
			    SendClientMessage(playerid, COR_VERMELHO, "Você não tem permissão!");
				return 1;
			}
		}
	}

	if (strcmp(cmd, "/pt", true)==0){
		new tmp[256];
		new string[256];
	    strmid(tmp, cmdtext, 3, strlen(cmdtext));
		if(!strlen(tmp)) {
			SendClientMessage(playerid, COR_VERMELHO, "/pt [texto]");
			return 1;
		}
		else{
		    for(new i=0; i<MAX_PLAYERS; i++){
		        if(Profissao[i] == Profissao[playerid]){
					format(string, sizeof(string), "%s: %s", PlayerName(playerid), tmp);
					SendClientMessage(i, GetPlayerColor(playerid), string);
					SendClientMessage(playerid, GetPlayerColor(playerid), string);
					return 1;
				}
			}
			return 1;
		}
	}

	if (strcmp(cmdtext, "/profissao", true)==0){
	    if(Profissao[playerid] == ENTREGADOR_PIZZA) {
			SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - ENTRAGADOR DE PIZZA");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
			SendClientMessage(playerid, COR_AMARELO, "/sellpizza [id] : Vende uma pizza a um jogador.");
		}
		else if(Profissao[playerid] == BARMAN) {
			SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - BARMAN");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
			SendClientMessage(playerid, COR_AMARELO, "/selldrink [id] [teor] : Vende uma bebida alcoolica e adiciona o teor de alcool no sangue da pessoa");
		}
		else if(Profissao[playerid] == SORVETEIRO) {
			SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - SORVETEIRO");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
			SendClientMessage(playerid, COR_AMARELO, "/sellsorvete [id] [sabor] : Vende um sorvete a uma jogador.");
		}
		else if(Profissao[playerid] == VENDEDOR_LANCHE) {
			SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - VENDEDOR DE LANCHES");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
			SendClientMessage(playerid, COR_AMARELO, "/selllanche [id] [lanche] : Vende um lanche a uma jogador.");
		}
		else if(Profissao[playerid] == PARAMEDICO) {
			SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - PARAMEDICO");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
			SendClientMessage(playerid, COR_AMARELO, "/socorrer [id] [lanche] : Socorre um jogador enchendo sua vida.");
		}
		else if(Profissao[playerid] == INSTRUTOR_DE_DIRECAO) {
			SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - INSTRUTOR DE DIREÇÃO");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
			SendClientMessage(playerid, COR_AMARELO, "/habaero : Habilita uma pessoa a dirigir veículos aereos (aviões e helicopteros).");
			SendClientMessage(playerid, COR_AMARELO, "/habterrestre : Habilita uma pessoa a dirigir veículos terrestres (carros e motos).");
			SendClientMessage(playerid, COR_AMARELO, "/habnautica : Habilita uma pessoa a dirigir veículos nauticos (barcos).");
		}
		else if(Profissao[playerid] == FRENTISTA) {
			SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - FRENTISTA");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
			SendClientMessage(playerid, COR_AMARELO, "/sellcomb [id] [litros] : Vende combustivel a um jogador.");
		}
		else if(Profissao[playerid] == TAXISTA) {
			SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - TAXISTA");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
			SendClientMessage(playerid, COR_AMARELO, "/staxi [id] : Começa a rodar o taxímetro (o passageiro tem que estar no seu carro).");
		}
		else if(Profissao[playerid] == MOTO_TAXI) {
			SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - MOTO-TAXI");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
			SendClientMessage(playerid, COR_AMARELO, "/mtaxi [id] : Começa a rodar o moto-taxímetro (o passageiro tem que estar em sua moto).");
		}
		else if(Profissao[playerid] == TAXI_AERIO) {
			SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - TAXI AERIO");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
			SendClientMessage(playerid, COR_AMARELO, "/ataxi [id] : Começa a rodar o aero-taxímetro (o passageiro tem que estar em seu helicoptero).");
		}
		else if(Profissao[playerid] == SEQUESTRADOR) {
			SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - SEQUESTRADOR");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
			SendClientMessage(playerid, COR_AMARELO, "/sequestrar [id] : Sequestra um jogador.");
		}
		else if(Profissao[playerid] == ASSASSINO) {
			SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - ASSASSINO");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
			SendClientMessage(playerid, COR_AMARELO, "Sua profissão não tem comando especiais! É só matar e ganhar dinheiro.");
		}
		else if(Profissao[playerid] == ASSALTANTE) {
			SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - ASSALTANTE");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
			SendClientMessage(playerid, COR_AMARELO, "/assaltar [id] : Assalta um Jogador.");
		}
		else if(Profissao[playerid] == LADRAO_CARROS) {
			SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - LADRÃO DE CARROS");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
			SendClientMessage(playerid, COR_AMARELO, "/desmanchar : Vende um carro pro desmanche.");
		}
		else if(Profissao[playerid] == TRAFICANTE) {
			SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - TRAFICANTE");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
			SendClientMessage(playerid, COR_AMARELO, "/sellcocaina [id] [quantidade] : Vende cocaína para um jogador.");
	        SendClientMessage(playerid, COR_AMARELO, "/sellheroina [id] [quantidade] : Aplica uma injeção de heroína em um jogador.");
	        SendClientMessage(playerid, COR_AMARELO, "/sellmaconha [id] [quantidade] : Vende maconha para um jogador.");
		}
		else if(Profissao[playerid] == VENDEDOR_DE_ARMAS) {
			SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - VENDEDOR DE ARMAS");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
			SendClientMessage(playerid, COR_AMARELO, "/setarma [id] [id_da_arma] [balas] : Vende um carro pro desmanche.");
		}
		else if(Profissao[playerid] == CACADOR) {
			SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - CAÇADOR");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
			SendClientMessage(playerid, COR_AMARELO, "/cacar : Caça animais (você precisa estar na Area de Caça).");
			SendClientMessage(playerid, COR_AMARELO, "/sellcaca : Vende sua Caça.");
		}
		else if(Profissao[playerid] == PESCADOR) {
			SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - PESCADOR");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
			SendClientMessage(playerid, COR_AMARELO, "/pescar : Pesca (você precisa estar na Area de Pesca).");
			SendClientMessage(playerid, COR_AMARELO, "/sellpesca : Vende sua Pesca.");
		}
		else if(Profissao[playerid] == AGRICULTOR) {
			SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - AGRICULTOR");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
			SendClientMessage(playerid, COR_AMARELO, "/plantar : Planta milho.");
			SendClientMessage(playerid, COR_AMARELO, "/colher : Colhe o milho.");
			SendClientMessage(playerid, COR_AMARELO, "/sellmilho : Vende o milho a Fazenda.");
		}
		else if(Profissao[playerid] == COP_CIVIL) {
			SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - POLICIAL CIVIL");
			SendClientMessage(playerid, COR_LARANJA, "A está cheia de bandidos, por isso sua missão é cuidar bem da cidade, evitando assaltos, roubos, crimes");
			SendClientMessage(playerid, COR_LARANJA, "assassinatos e rachas. Bom Trabalho!");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
			SendClientMessage(playerid, COR_AMARELO, "/prender [id] : Prende uma pessoa na cadeia para aguardar julgamento.");
			SendClientMessage(playerid, COR_AMARELO, "/bafometro [id] : Vê o teor de alcool no sangue de alguém");
			SendClientMessage(playerid, COR_AMARELO, "/procurar [id] : Coloca o ID na lista de procurados da policia.");
			SendClientMessage(playerid, COR_AMARELO, "/desprocurar [id] : Retira o ID da lista de procurados da policia.");
			SendClientMessage(playerid, COR_AMARELO, "/multar [id] [valor] : Multar um Jogador.");
		}
		else if(Profissao[playerid] == COP_RODOVIARIO) {
			SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - POLICIAL RODOVIARIO");
			SendClientMessage(playerid, COR_LARANJA, "As Estradas são muito perigosas, por isso sua missão é cuidar de nossas estradas, evitando rachas e dando multa");
			SendClientMessage(playerid, COR_LARANJA, "a jogadores a cima da velocidade permitida. Bom Trabalho!");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
			SendClientMessage(playerid, COR_AMARELO, "/prender [id] : Prende uma pessoa na cadeia para aguardar julgamento.");
			SendClientMessage(playerid, COR_AMARELO, "/bafometro [id] : Vê o teor de alcool no sangue de alguém");
			SendClientMessage(playerid, COR_AMARELO, "/procurar [id] : Coloca o ID na lista de procurados da policia.");
			SendClientMessage(playerid, COR_AMARELO, "/desprocurar [id] : Retira o ID da lista de procurados da policia.");
			SendClientMessage(playerid, COR_AMARELO, "/multar [id] [valor] : Multar uma pessoa.");
        	SendClientMessage(playerid, COR_AMARELO, "/cacarterrestre [id] : Caça a carteira de um Jogador.");
		}
		else if(Profissao[playerid] == COP_ELITE) {
			SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - ATIRADOR DE ELITE");
			SendClientMessage(playerid, COR_LARANJA, "A Policia trabalha bem, mais quando a policia não consegur prender ou matar o assassino é chamado Atiradores de Elite. Por isso sua missão é ficar sempre");
			SendClientMessage(playerid, COR_LARANJA, "a disposição para matar assassinos e ladrões Bom Trabalho!");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
			SendClientMessage(playerid, COR_AMARELO, "/prender [id] : Prende uma pessoa na cadeia para aguardar julgamento.");
			SendClientMessage(playerid, COR_AMARELO, "/bafometro [id] : Vê o teor de alcool no sangue de alguém");
			SendClientMessage(playerid, COR_AMARELO, "/procurar [id] : Coloca o ID na lista de procurados da policia.");
			SendClientMessage(playerid, COR_AMARELO, "/desprocurar [id] : Retira o ID da lista de procurados da policia.");
			SendClientMessage(playerid, COR_AMARELO, "/multar [id] [valor] : Multar uma pessoa.");
		}
		else if(Profissao[playerid] == DELEGADO) {
			SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - DELEGADO");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
            SendClientMessage(playerid, COR_AMARELO, "/prender [id] : Prende uma pessoa na cadeia para aguardar julgamento.");
			SendClientMessage(playerid, COR_AMARELO, "/soltar [id] : Solta uma pessoa da cadeia.");
			SendClientMessage(playerid, COR_AMARELO, "/multar [id] [valor] : Multar uma pessoa.");
			SendClientMessage(playerid, COR_AMARELO, "/exercito [mensagen] : pede ajuda ao exercito.");
		}
		else if(Profissao[playerid] == JUIZ) {
			SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - JUIZ");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
			SendClientMessage(playerid, COR_AMARELO, "/prender [id] : Prende uma pessoa na cadeia para aguardar julgamento.");
			SendClientMessage(playerid, COR_AMARELO, "/soltar [id] : Solta uma pessoa da cadeia.");
		}
		else if(Profissao[playerid] == NARCOTICOS) {
		    SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - NARCOTICOS:");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
		    SendClientMessage(playerid, COR_AMARELO, "/examead [id] : Realiza o exame anti-dopping para verificar a presença de entorpecentes no sangue de um jogador.");
		    SendClientMessage(playerid, COR_AMARELO, "/prender [id] : Prende uma pessoa na cadeia para aguardar julgamento.");
		}
		else if(Profissao[playerid] == POLICIA_FLORESTAL) {
		    SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - POLICIAL FLORESTAL:");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
		    SendClientMessage(playerid, COR_AMARELO, "/cacaon : Liga a temporada de Caça.");
		    SendClientMessage(playerid, COR_AMARELO, "/cacaoff : Desliga a temporada de Caça");
		    SendClientMessage(playerid, COR_AMARELO, "/vercaca : Vê se um jogador está caçando.");
		    SendClientMessage(playerid, COR_AMARELO, "/multar : Multa um jogador.");
		}
		else if(Profissao[playerid] == IBAMA) {
		    SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - IBAMA:");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
		    SendClientMessage(playerid, COR_AMARELO, "/pescaon : Liga a temporada de Pesca.");
		    SendClientMessage(playerid, COR_AMARELO, "/pescaoff : Desliga a temporada de Pesca");
		    SendClientMessage(playerid, COR_AMARELO, "/verpesca : Vê se um jogador está pescando.");
		    SendClientMessage(playerid, COR_AMARELO, "/multar : Multa um jogador.");
		}
		else if(Profissao[playerid] == EXERCITO) {
			SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - EXERCITO");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
			SendClientMessage(playerid, COR_AMARELO, "/procurar [id] : Coloca o ID na lista de procurados da policia.");
			SendClientMessage(playerid, COR_AMARELO, "/desprocurar [id] : Retira o ID da lista de procurados da policia.");
        }
		else if(Profissao[playerid] == CONFISCADOR_CARROS) {
		    SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - IBAMA:");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
		    SendClientMessage(playerid, COR_AMARELO, "/tiraraerea : Tira a habilitação aerea de alguem.");
		    SendClientMessage(playerid, COR_AMARELO, "/tirarnautica : Tira a habilitação nautica de alguem");
		    SendClientMessage(playerid, COR_AMARELO, "/tirarterrestre : Tira a habilitação terrestre de alguem.");
		    SendClientMessage(playerid, COR_AMARELO, "/radar : Vê as opçoes de radares da cidade.");
		}
		else if(Profissao[playerid] == ADVOGADO) {
			SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - EXERCITO");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
			SendClientMessage(playerid, COR_AMARELO, "/processo [nome_do_reu] [descrição_da_causa] : Entra com um processo em favor ao réu.");
		}
		else if(Profissao[playerid] == SEGURANÇA) {
			SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - SEGURANÇA");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
			SendClientMessage(playerid, COR_VERDE, "Sua Profissão não tem comandos especiais.");
		}
		else if(Profissao[playerid] == MOTORISTA_PARTICULAR) {
			SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - MOTORISTA PARTICULAR");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
			SendClientMessage(playerid, COR_VERDE, "Sua Profissão não tem comandos especiais.");
		}
		else if(Profissao[playerid] == MOTORISTA_DE_ONIBUS) {
			SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - MOTORISTA DE ONIBUS");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
			SendClientMessage(playerid, COR_VERDE, "Sua Profissão não tem comandos especiais.");
		}
		else if(Profissao[playerid] == MENDINGO) {
			SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - MENDINGO");
			SendClientMessage(playerid, COR_VERDE, "Sua Profissão não tem comandos especiais.");
		}
		else if(Profissao[playerid] == VENDEDOR_DE_CARROS) {
			SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - VENDEDOR DE CARROS");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
			SendClientMessage(playerid, COR_AMARELO, "/setcar [id_do_veículo] [id_do_comprador] [cor1] [cor2] : Vende um carro (esteja com ele na posição de spawn).");
		}
		else if(Profissao[playerid] == CORRETOR) {
			SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - CORRETOR DE IMOVEIS");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
			SendClientMessage(playerid, COR_AMARELO, "/setcasa [id] : Seta a casa para alguem, (esteja na posiçao exterior à casa).");
		}
		else if(Profissao[playerid] == CORRETOR) {
			SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - CORRETOR DE IMOVEIS");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
			SendClientMessage(playerid, COR_AMARELO, "/setcasa [id] : Seta a casa para alguem, (esteja na posiçao exterior à casa).");
		}
		else if(Profissao[playerid] == SEGURADOR) {
			SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - SEGURADOR");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
			SendClientMessage(playerid, COR_AMARELO, "/segurar [id] : Vende um seguro de vida a um jogador.");
			SendClientMessage(playerid, COR_AMARELO, "/seguros : Ve os jogadores que tem seguro de vida.");
		}
		else if(Profissao[playerid] == JORNALISTA) {
			SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - JORNALISTA");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
			SendClientMessage(playerid, COR_AMARELO, "/noticia [texto] : Publica uma notícia.");
		}
		else if(Profissao[playerid] == CAMINHONEIRO) {
			SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - CAMINHONEIRO");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
			SendClientMessage(playerid, COR_AMARELO, "/carregar : Carrega seu caminhão.");
			SendClientMessage(playerid, COR_AMARELO, "/descarregar : descarrega seu caminhão.");
		}
		else if(Profissao[playerid] == TRANSPORTE_GAS) {
			SendClientMessage(playerid, COR_VERDE, "Comandos de sua profissão - TRANSPORTE DE COMBUSTIVEL");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que têm a mesma profissão que você");
			SendClientMessage(playerid, COR_AMARELO, "/carregarcomb : Carrega seu caminhão.");
			SendClientMessage(playerid, COR_AMARELO, "/descarregarcomb : descarrega seu caminhão.");
		}
		else{
			SendClientMessage(playerid, COR_VERDE, "Você é Desempregado, não tem comandos especiais");
			SendClientMessage(playerid, COR_AMARELO, "/pt [texto] : Manda uma mensagem para todas as pessoas que são desempregadas.");
		}
		return 1;
	}

	if (strcmp(cmd, "/presos", true)==0){
		new string[256];
	    SendClientMessage(playerid, COR_AMARELO, "Lista de presos:");
   		if(Presos[playerid] == 1){
			format(string, sizeof(string), "- %s", PlayerName(playerid));
			SendClientMessage(playerid, COR_AMARELO, string);
			return 1;
		}
	}

	if (strcmp(cmd, "/procurar", true)==0){
	    if(Profissao[playerid] == COP_CIVIL || Profissao[playerid] == COP_RODOVIARIO || Profissao[playerid] == COP_ELITE || Profissao[playerid] == EXERCITO || IsPlayerAdmin(playerid)){
		    new tmp[256];
		    new string[256];
		    new plid, wanted;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COR_BRANCO, "/procurar [id] [nível_de_procurado].");
				return 1;
			}
	        plid = strval(tmp);
			if(IsPlayerConnected(plid) && PLAYERLIST_authed[playerid] == 1){
				Procurados[plid] = 1;
				Wanted[plid] = wanted;
				SetPlayerWantedLevel(plid, wanted);
				format(string, sizeof(string), "%s está sendo procurado pela policia, vá atráz dele (nivel de procurado: %d).", PlayerName(plid), wanted);
				SendClientMessage(plid, COR_VERDE, string);
    			format(string, sizeof(string), "%s, %s te colcou na lista de procurados, agora seu nivel de procurado está em %d", PlayerName(plid),PlayerName(playerid),wanted);
				SendClientMessage(plid, COR_VERDE, string);
				return 1;
			}
			else{
	            SendClientMessage(playerid, COR_BRANCO, "Jogador não esta conectado/logado.");
				return 1;
			}
		}
		if(Profissao[playerid] != COP_CIVIL || Profissao[playerid] != COP_RODOVIARIO || Profissao[playerid] != COP_ELITE){
			SendClientMessage(playerid, COR_VERMELHO, "Você não é policial");
			return 1;
		}
		return 1;
	}

	if (strcmp(cmd, "/desprocurar", true)==0){
	    if(Profissao[playerid] == COP_CIVIL || Profissao[playerid] == COP_RODOVIARIO || Profissao[playerid] == COP_ELITE || Profissao[playerid] == EXERCITO || IsPlayerAdmin(playerid)){
		    new tmp[256];
		    new plid;
		    new string[256];
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COR_BRANCO, "/desprocurar [id]");
				return 1;
			}
	        plid = strval(tmp);
			if(IsPlayerConnected(plid) && PLAYERLIST_authed[playerid] == 1){
				Procurados[plid] = 0;
				SetPlayerWantedLevel(playerid, 0);
				format(string, sizeof(string), "%s excluiu %s da lista de procurados", PlayerName(playerid),PlayerName(plid));
				SendClientMessage(plid, COR_VERDE, string);
    			format(string, sizeof(string), "%s, %s te excuiu na lista de procurados", PlayerName(plid),PlayerName(playerid));
				SendClientMessage(plid, COR_VERDE, string);
				return 1;
			}
			else{
	            SendClientMessage(playerid, COR_BRANCO, "Jogador não esta conectado/logado.");
				return 1;
			}
		}
		if(Profissao[playerid] != COP_CIVIL || Profissao[playerid] != COP_RODOVIARIO || Profissao[playerid] != COP_ELITE){
			SendClientMessage(playerid, COR_VERMELHO, "Você não é policial");
			return 1;
		}
	}

	if (strcmp(cmd, "/procurados", true)==0){
		new string[256];
	    SendClientMessage(playerid, COR_AMARELO, "Lista de procurados");
   		if(Procurados[playerid] == 1){
			format(string, sizeof(string), "- %s", PlayerName(playerid));
			SendClientMessage(playerid, COR_AMARELO, string);
			return 1;
		}
		if(Procurados[playerid] == 0){
			SendClientMessage(playerid, COR_AMARELO, "");
			return 1;
		}
	}
	if (strcmp(cmd, "/seguros", true)==0){
		new string[256];
	    SendClientMessage(playerid, COR_AMARELO, "Lista de segurados");
   		if(Seguro[playerid] == 1){
			format(string, sizeof(string), "- %s", PlayerName(playerid));
			SendClientMessage(playerid, COR_AMARELO, string);
			return 1;
		}
		if(Seguro[playerid] == 0){
			SendClientMessage(playerid, COR_AMARELO, "");
			return 1;
		}
	}

	if (strcmp(cmd, "/say", true)==0){
		new tmp[256];
		new string[256];
	    strmid(tmp, cmdtext, 4, strlen(cmdtext));
		if(!strlen(tmp)) {
			SendClientMessage(playerid, COR_VERMELHO, "/say [texto]");
			return 1;
		}
		else{
		    for(new i=0; i<MAX_PLAYERS; i++){
		        if(GetDistanceBetweenPlayers(playerid, i) < 10){
					format(string, sizeof(string), "%s: %s", PlayerName(playerid), tmp);
					SendClientMessage(i, COR_CINZA, string);
					SendClientMessage(playerid, COR_CINZA, string);
					return 1;
				}
			}
			return 1;
		}
	}

	if(strcmp(cmd, "/multar", true) == 0) {
	    if(Profissao[playerid] == COP_CIVIL || Profissao[playerid] == COP_RODOVIARIO || Profissao[playerid] == IBAMA || Profissao[playerid] == COP_ELITE || IsPlayerAdmin(playerid)){
			new tmp[256];
	    	new plid;
	    	new quant;
	    	new string[256];
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COR_VERMELHO, "/multar [id] [valor]");
				return 1;
			}
        	plid = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COR_VERMELHO, "/multar [id] [valor]");
				return 1;
			}
        	quant = strval(tmp);
 			if(quant > 1000 || quant <= 0){
				SendClientMessage(playerid, COR_VERMELHO, "Você não está querendo multar de forma justa.");
				return 1;
			}
			if(IsPlayerConnected(plid)){
				format(string, sizeof(string), "Você recebeu uma multa de %d dada por %s. Descontade direto de sua conta bancaria.", quant, PlayerName(playerid));
				SendClientMessage(plid, COR_VERDE, string);
				SendClientMessage(playerid, COR_VERDE, "Multa dada.");
				printf("O Jogador %s(id: %d) deu uma multa para %s(id: %d) de R$%d.", PlayerName(playerid),playerid,PlayerName(plid),plid,quant);
				udb_setBankMoney(PlayerName(plid), udb_getBankMoney(PlayerName(plid)) - quant);
				return 1;
			}
			else{
			    SendClientMessage(playerid, COR_VERMELHO, "O jogador não está conectado!");
				return 1;
			}
		}
		if(Profissao[playerid] != COP_CIVIL || Profissao[playerid] != COP_RODOVIARIO || Profissao[playerid] != IBAMA || Profissao[playerid] != COP_ELITE){
			SendClientMessage(playerid, COR_VERMELHO, "Você não é policial.");
			return 1;
		}
		return 1;
	}
	if(strcmp(cmd, "/ataxi", true) == 0 && IsPlayerConnected(playerid)) {
	    if(Profissao[playerid] == TAXI_AERIO || IsPlayerAdmin(playerid)) {
	        new tmp[256];
	        new plid;
	        tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp)) {
	            SendClientMessage(playerid, COR_VERMELHO, "/mtaxi [id]");
				return 1;
			}
			plid = strval(tmp);
			new modelo;
			cGetVehicleModelID(GetPlayerVehicleID(playerid),modelo);
			if(modelo != VEH_MAVERICK){
			    SendClientMessage(playerid, COR_VERMELHO, "Você não está dirigindo uma aeronave autorizada para sua profissão.");
				SendClientMessage(playerid, COR_VERMELHO, "Use apenas helicópteros Maverick.");
				return 1;
			} else {
			    if(GetPlayerVehicleID(playerid) == GetPlayerVehicleID(plid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER){
			        SendClientMessage(playerid, COR_VERDE, "O aero-taxímetro começou a rodar");
			        SendClientMessage(plid, COR_VERDE, "O aero-taxímetro já está rodando. A corrida está sendo cobrada a partir de agora.");
			        ATaximetro[plid][0] = 1;
					ATaximetro[plid][1] = playerid;
					return 1;
				}
				else {
				    SendClientMessage(playerid, COR_VERMELHO, "O passageiro não está na sua moto, ou você não é o condutor.");
					return 1;
				}
			}
	    } else {
	        SendClientMessage(playerid, COR_VERMELHO, "Você não é Taxista Aério.");
			return 1;
		}
	}

	if(strcmp(cmd, "/mtaxi", true) == 0 && IsPlayerConnected(playerid)) {
	    if(Profissao[playerid] == MOTO_TAXI || IsPlayerAdmin(playerid)) {
	        new tmp[256];
	        new plid;
	        tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp)) {
	            SendClientMessage(playerid, COR_VERMELHO, "/mtaxi [id]");
				return 1;
			}
			plid = strval(tmp);
			new modelo;
			cGetVehicleModelID(GetPlayerVehicleID(playerid),modelo);
			if(modelo != VEH_BF400){
			    SendClientMessage(playerid, COR_VERMELHO, "Você não está dirigindo uma moto autorizada para moto-taxí.");
				SendClientMessage(playerid, COR_VERMELHO, "Use motos do modelo PCJ-600 para esse tipo de profissão.");
				return 1;
			} else {
			    if(GetPlayerVehicleID(playerid) == GetPlayerVehicleID(plid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER){
			        SendClientMessage(playerid, COR_VERDE, "O moto-taxímetro começou a rodar");
			        SendClientMessage(plid, COR_VERDE, "O moto-taxímetro já está rodando. A corrida está sendo cobrada a partir de agora.");
			        MTaximetro[plid][0] = 1;
					MTaximetro[plid][1] = playerid;
					return 1;
				}
				else {
				    SendClientMessage(playerid, COR_VERMELHO, "O passageiro não está em uma moto, ou você não é o condutor.");
					return 1;
				}
			}
	    } else {
	        SendClientMessage(playerid, COR_VERMELHO, "Você não é mototaxista.");
			return 1;
		}
	}

	if(strcmp(cmd, "/staxi", true) == 0 && IsPlayerConnected(playerid)) {
	    if(Profissao[playerid] == TAXISTA || IsPlayerAdmin(playerid)) {
	        new tmp[256];
	        new plid;
	        tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp)) {
	            SendClientMessage(playerid, COR_VERMELHO, "/staxi [id]");
				return 1;
			}
			plid = strval(tmp);
			new modelo;
			cGetVehicleModelID(GetPlayerVehicleID(playerid),modelo);
			if(modelo != VEH_CABBIE || modelo != VEH_TAXI){
			    SendClientMessage(playerid, COR_VERMELHO, "Você não está dirigindo um veiculo autorizada para taxísta.");
				SendClientMessage(playerid, COR_VERMELHO, "Use carros do modelo Cabbie ou Taxi para esse tipo de profissão.");
				return 1;
			} else {
			    if(GetPlayerVehicleID(playerid) == GetPlayerVehicleID(plid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER){
			        SendClientMessage(playerid, COR_VERDE, "O taxímetro começou a rodar");
			        SendClientMessage(plid, COR_VERDE, "O taxímetro já está rodando. A corrida está sendo cobrada a partir de agora.");
			        Taximetro[plid][0] = 1;
					Taximetro[plid][1] = playerid;
					return 1;
				}
				else {
				    SendClientMessage(playerid, COR_VERMELHO, "O passageiro não está em um taxi, ou você não é o condutor.");
					return 1;
				}
			}
	    } else {
	        SendClientMessage(playerid, COR_VERMELHO, "Você não é Taxista.");
			return 1;
		}
	}
	
	if(strcmp(cmd, "/setcar", true) == 0) {
		if(Profissao[playerid] == VENDEDOR_DE_CARROS || IsPlayerAdmin(playerid)){
			new tmp[256];
			new carid, plid, cor1, cor2;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)){
				SendClientMessage(playerid, COR_VERMELHO, "ID fora do normal | ID's = 400-611");
				return 1;
			}
		    carid = strval(tmp);

    	    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COR_VERMELHO, "/setcar [id_do_veículo] [id_do_comprador] [cor1] [cor2]");
				return 1;
			}
			plid = strval(tmp);

    	    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COR_VERMELHO, "/setcar [id_do_veículo] [id_do_comprador] [cor1] [cor2]");
				return 1;
			}
			cor1 = strval(tmp);

    	    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COR_VERMELHO, "/setcar [id_do_veículo] [id_do_comprador] [cor1] [cor2]");
				return 1;
			}
			cor2 = strval(tmp);

			if(carid >= 400 && carid <= 611){
			    if(IsPlayerInAnyVehicle(playerid)){
			        if(IsPlayerConnected(plid)){
			       	new string[256];
			       	new File:temp;
			       	new Float:X,Float:Y,Float:Z,Float:ang;
    	    		GetPlayerPos(playerid,X,Y,Z);
					GetVehicleZAngle(GetPlayerVehicleID(playerid),ang);
					format(string, sizeof(string), "%s %d %f %f %f %f %d %d // Local:\r\n",  PlayerName(plid), carid, X, Y, Z, ang, cor1, cor2);
					temp = fopen("reloadrpg.carros", io_append);
                   	fwrite(temp, string);
                   	fclose(temp);
                   	SetTimerEx("SetCar",10000,0,"dffffdd",carid,X,Y,Z,ang,cor1,cor2);
                   	format(string, sizeof(string), "Você vendeu um veículo(id: %d) para %s, dentro de 10 segundos ele aparecerá.", carid, PlayerName(plid));
                   	SendClientMessage(playerid, COR_COP_ELITE, string);
                   	format(string, sizeof(string), "%s te vendeu um veículo(id: %d).", PlayerName(playerid),carid);
					SendClientMessage(plid, COR_VERDE, string);
                   	format(string, sizeof(string), "* %s setou um veículo(id: %d) para %s.", PlayerName(playerid),carid,PlayerName(plid));
					SendClientMessageToAll(COR_COP_ELITE, string);
					printf("O Jogador %s setou um veiculo(id: %d) para %s.", PlayerName(playerid),carid,PlayerName(plid));
					return 1;
					}
					else{
				    	SendClientMessage(playerid, COR_VERMELHO, "Jogador não conectado.");
						return 1;
					}
				}
				else{
				    SendClientMessage(playerid, COR_VERMELHO, "Você precisa estar em um veiculo para vender.");
					return 1;
				}
			}
			else{
				SendClientMessage(playerid, COR_VERMELHO, "ID fora do normal | ID's = 400-611");
				return 1;
			}
		}
		if(Profissao[playerid] != VENDEDOR_DE_CARROS){
			SendClientMessage(playerid, COR_VERMELHO, "Você não é Vendedor de Carros e Skins");
			return 1;
		}
	}

	if(strcmp(cmd, "/relogio", true) == 0) {
		SendClientMessage(playerid, COR_VERMELHO, "Está cego? O relogio está no seu marcador de vida!");
		return 1;
	}

    if(strcmp(cmd, "/sellcerveja", true) == 0) {
        if(Profissao[playerid] == BARMAN || IsPlayerAdmin(playerid)){
            new string[256];
			new tmp[256];
			new plid, quantia;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)){
				SendClientMessage(playerid, COR_VERMELHO, "/selldcerveja [id] [quantia]");
				return 1;
			}
		    plid = strval(tmp);
    	    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COR_VERMELHO, "/sellcerveja [id] [quantia]");
				return 1;
			}
			quantia = strval(tmp);
			if(quantia < 1 || quantia > 10){
			    SendClientMessage(playerid, COR_VERMELHO, "Mínimo 1 cerveja e maxímo 10 cervejas.");
				return 1;
			}
			else{
       			if(GetDistanceBetweenPlayers(playerid, plid) <= 20){
			       	if(Bebida[plid] == 10){
			       	  	SendClientMessage(playerid,COR_VERMELHO, "Você quer matar seu cliente!");
						return 1;
					}
					if(IsPlayerConnected(plid)){
					    QtCerveja[plid] = quantia;
				    	SendClientMessage(playerid,COR_VERDE, "Missão cumprida!");
				    	format(string,sizeof(string),"%s te vendeu %d latas de cerveja, para bebe-las digite /beber [latas].",PlayerName(playerid),quantia);
				    	SendClientMessage(plid,COR_VERDE,string);
				    	QtCerveja[plid]++;
						return 1;
					}
					else{
					    SendClientMessage(playerid, COR_VERMELHO, "O jogador não está conectado/logado!");
						return 1;
					}
				}
				else{
				    SendClientMessage(playerid, COR_VERMELHO, "Você está muito longe, chegue mais perto para entregar a bebida.");
					return 1;
				}
			}
		}
		if(Profissao[playerid] != BARMAN){
		    SendClientMessage(playerid, COR_VERMELHO, "Você não é Barman!");
			return 1;
		}
		return 1;
	}

	if(strcmp(cmd, "/selllanche", true) == 0) {
        if(Profissao[playerid] == SORVETEIRO || IsPlayerAdmin(playerid)){
            new string[256];
			new tmp[256];
			new plid, lanche;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)){
				SendClientMessage(playerid, COR_VERMELHO, "/selllanche [id] [lanche]");
				return 1;
			}
		    plid = strval(tmp);
    	    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COR_VERMELHO, "/selllanche [id] [lanche]");
				return 1;
			}
			lanche = strval(tmp);
			if(lanche < 1 || lanche > 7){
			    SendClientMessage(playerid, COR_VERMELHO, "Lanche Invalido, Os lanches são de 1 a 7.");
				return 1;
			}
			strval(tmp);
			if(GetPlayerMoney(plid) < 8){
	        SendClientMessage(playerid, COR_VERMELHO, "O Jogador não tem dinheiro em mãos.");
			return 1;
			}
			else{
			    if(GetDistanceBetweenPlayers(playerid, plid) <= 10){
					if(IsPlayerConnected(plid)){
					    Lanche[plid] = lanche;
						format(string, sizeof(string), "%s, %s", PlayerName(playerid),LancheName[lanche]);
			            SendClientMessage(plid, COR_VERDE, string);
			            SetPlayerHealth(plid,100);
			            GivePlayerMoney(plid,-8);
               			format(string, sizeof(string), "Você vendeu lanche para %s",PlayerName(plid));
			            SendClientMessage(playerid, COR_VERDE, string);
			            ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.00, 0, 0, 0, 0, 0);
			            GivePlayerMoney(playerid,8);
			            fome[plid] --;
						return 1;
					}
					else{
					    SendClientMessage(playerid, COR_VERMELHO, "O jogador não está conectado/logado!");
						return 1;
					}
				}
				else{
				    SendClientMessage(playerid, COR_VERMELHO, "Você está muito longe, chegue mais perto para entregar a bebida.");
					return 1;
				}
			}
		}
		if(Profissao[playerid] != VENDEDOR_LANCHE){
		    SendClientMessage(playerid, COR_VERMELHO, "Você não é Barman!");
			return 1;
		}
		return 1;
	}

	if(strcmp(cmd, "/sellpizza", true) == 0) {
        if(Profissao[playerid] == ENTREGADOR_PIZZA || IsPlayerAdmin(playerid)){
            new string[256];
			new tmp[256];
			new plid, sabor;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)){
				SendClientMessage(playerid, COR_VERMELHO, "/sellpizza [id] [sabor]");
				return 1;
			}
		    plid = strval(tmp);
    	    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COR_VERMELHO, "/sellpizza [id] [sabor]");
				return 1;
			}
			sabor = strval(tmp);
			if(sabor < 1 || sabor > 4){
			    SendClientMessage(playerid, COR_VERMELHO, "Sabor Invalido, Os sabores são de 1 a 4.");
				return 1;
			}
			strval(tmp);
			if(GetPlayerMoney(plid) < 15){
	        SendClientMessage(playerid, COR_VERMELHO, "O Jogador não tem dinheiro em mãos.");
			return 1;
			}
			else{
			    if(GetDistanceBetweenPlayers(playerid, plid) <= 20){
					if(IsPlayerConnected(plid)){
					    Pizza[plid] = sabor;
						format(string, sizeof(string), "%s te vendeu uma pizza de %s", PlayerName(playerid),PizzaName[sabor]);
			            SendClientMessage(plid, COR_VERDE, string);
			            SetPlayerHealth(plid,100);
			            GivePlayerMoney(plid,-15);
               			format(string, sizeof(string), "Você vendeu uma pizza de %s para %s", PizzaName[sabor],PlayerName(plid));
			            SendClientMessage(playerid, COR_VERDE, string);
			            ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.00, 0, 0, 0, 0, 0);
			            GivePlayerMoney(playerid,15);
			            fome[plid] --;
						return 1;
					}
					else{
					    SendClientMessage(playerid, COR_VERMELHO, "O jogador não está conectado/logado!");
						return 1;
					}
				}
				else{
				    SendClientMessage(playerid, COR_VERMELHO, "Você está muito longe, chegue mais perto para entregar a bebida.");
					return 1;
				}
			}
		}
		if(Profissao[playerid] != ENTREGADOR_PIZZA){
		    SendClientMessage(playerid, COR_VERMELHO, "Você não é Sorveteiro!");
			return 1;
		}
		return 1;
	}

	if(strcmp(cmd, "/sellsorvete", true) == 0) {
        if(Profissao[playerid] == SORVETEIRO || IsPlayerAdmin(playerid)){
            new string[256];
			new tmp[256];
			new plid, sabor;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)){
				SendClientMessage(playerid, COR_VERMELHO, "/sellsorvete [id] [sabor]");
				return 1;
			}
		    plid = strval(tmp);
    	    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COR_VERMELHO, "/sellsorvete [id] [sabor]");
				return 1;
			}
			sabor = strval(tmp);
			if(sabor < 1 || sabor > 4){
			    SendClientMessage(playerid, COR_VERMELHO, "Sabor Invalido, Os sabores são de 1 a 4.");
				return 1;
			}
			strval(tmp);
			if(GetPlayerMoney(plid) < 5){
	        SendClientMessage(playerid, COR_VERMELHO, "O Jogador não tem dinheiro em mãos.");
			return 1;
			}
			else{
			    if(GetDistanceBetweenPlayers(playerid, plid) <= 20){
					if(IsPlayerConnected(plid)){
					    Sorvete[plid] = sabor;
						format(string, sizeof(string), "%s te vendeu um sorvete de %s", PlayerName(playerid),SaborName[sabor]);
			            SendClientMessage(plid, COR_VERDE, string);
			            SetPlayerHealth(plid,100);
			            GivePlayerMoney(plid,-5);
               			format(string, sizeof(string), "Você vendeu um sorvete de %s para %s", SaborName[sabor],PlayerName(plid));
			            SendClientMessage(playerid, COR_VERDE, string);
			            ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.00, 0, 0, 0, 0, 0);
			            GivePlayerMoney(playerid,5);
			            fome[plid] --;
						return 1;
					}
					else{
					    SendClientMessage(playerid, COR_VERMELHO, "O jogador não está conectado/logado!");
						return 1;
					}
				}
				else{
				    SendClientMessage(playerid, COR_VERMELHO, "Você está muito longe, chegue mais perto para entregar a bebida.");
					return 1;
				}
			}
		}
		if(Profissao[playerid] != SORVETEIRO){
		    SendClientMessage(playerid, COR_VERMELHO, "Você não é Sorveteiro!");
			return 1;
		}
		return 1;
	}

	if(strcmp(cmd,"/setarma",true)==0) {
	    if(IsPlayerAdmin(playerid)){
	        new plid[256], weapon[256], ammo[256];
	        new msg[256];
	        plid = strtok(cmdtext, idx);
	        weapon = strtok(cmdtext, idx);
	        ammo = strtok(cmdtext, idx);
	        if(!strlen(plid) || !strlen(weapon)){
	            SendClientMessage(playerid,COR_VERMELHO,"Ei, especifique ao menos um jogador e uma arma!");
	            return 1;
			}
			if(strval(weapon) < 1 || strval(weapon) > 46 || strval(weapon) == 39 || strval(weapon) == 40){
			    SendClientMessage(playerid,COR_VERMELHO,"Arma inválida.");
			    return 1;
			} else {
				if(!IsPlayerConnected(strval(plid))){
				    SendClientMessage(playerid,COR_VERMELHO,"Jogador não conectado.");
				    return 1;
				} else {
					format(msg,sizeof(msg),"%s te vendeu uma arma(id: %d) com %d de munição.",PlayerName(playerid),weapon, ammo);
			    	SendClientMessage(strval(plid),COR_VERDE,msg);
			    	format(msg,sizeof(msg),"Você vendeu uma arma(id: %d) para %s com %d de munição.",weapon,PlayerName(playerid), ammo);
			    	SendClientMessage(playerid,COR_VERDE,msg);
				    if(!strval(ammo)){
				        GivePlayerWeapon(strval(plid),strval(weapon),1000);
					} else {
					    GivePlayerWeapon(strval(plid),strval(weapon),strval(ammo));
					}
				}
			}
		}
	}

	if(strcmp(cmd, "/bar", true) == 0) {
		if(AreaBar[playerid] == 1){
            new string[256];
			new tmp[256];
			new refeicao;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)){
				SendClientMessage(playerid, COR_VERMELHO, "/bar [refeição]");
				return 1;
			}
			refeicao = strval(tmp);
			if(refeicao < 1 || refeicao > 8){
			    SendClientMessage(playerid, COR_VERMELHO, "Refeição Invalida, As refeições são de 0 a 8.");
				return 1;
			}
			strval(tmp);
			if(GetPlayerMoney(playerid) < 15){
	        SendClientMessage(playerid, COR_VERMELHO, "Você não tem dinheiro em mãos(custo: R$15).");
			return 1;
			}
			else{
				if(IsPlayerConnected(playerid)){
    				SetPlayerHealth(playerid,100);
			        GivePlayerMoney(playerid,-5);
        			format(string, sizeof(string), "%s, %s", PlayerName(playerid),RefeicaoName[refeicao]);
       				SendClientMessage(playerid, COR_VERDE, string);
       				SendClientMessage(playerid, COR_VERDE, "Obrigado por comer em nosso bar. Volte Sempre!");
       				ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.00, 0, 0, 0, 0, 0);
           			GivePlayerMoney(playerid,-5);
					return 1;
				}
				else{
					SendClientMessage(playerid, COR_VERMELHO, "Você não está no Bar!");
					return 1;
				}
			}
		}
	}

	if(strcmp(cmd, "/sellheroina", true) == 0) {
	    if(Profissao[playerid] == TRAFICANTE || IsPlayerAdmin(playerid)){
	        new tmp[256];
	        new msg[256];
	        new plid, mili;
	        tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp)){
	            SendClientMessage(playerid, COR_VERMELHO,"/sellheroina [id] [quantidade]");
				return 1;
			}
			plid = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)){
			    SendClientMessage(playerid, COR_VERMELHO, "/sellheroina [id] [quantidade]");
				return 1;
			}
			mili = strval(tmp);
			if(mili > 7){
			    SendClientMessage(playerid, COR_VERMELHO, "Você está louco? Quer matar o seu cliente? Doses de 1 a 7");
				return 1;
			}
			else if(mili < 1){
			    SendClientMessage(playerid, COR_VERMELHO, "Te peguei, bichinho! Querendo enganar o freguês, não? Doses de 1 à 7");
				return 1;
			}else{
			    if(!IsPlayerConnected(plid)){
			        SendClientMessage(playerid,COR_VERMELHO, "O jogador que você indicou não está conectado.");
					return 1;
			    }
			    else{
			        if(GetDistanceBetweenPlayers(playerid,plid) > 20){
						SendClientMessage(playerid,COR_VERMELHO, "Chege mais perto para aplicar a injeção.");
						return 1;
					} else {
			        	if(Heroina[plid] == 7){
			        	  	SendClientMessage(playerid,COR_VERMELHO, "Você quer matar seu cliente!");
							return 1;
						} else {
					    	Heroina[plid] = mili;
					    	SendClientMessage(playerid,COR_VERDE, "Missão cumprida!");
					    	format(msg,sizeof(msg),"Você está agora com %d doses de heroína no sangue",mili);
					    	SendClientMessage(plid,COR_BRANCO,msg);
					    	SetPlayerMoney(plid, -35);
					    	SetPlayerMoney(playerid, 35);
							return 1;
						}
					}
				}
			}
		} else {
		SendClientMessage(playerid,COR_VERMELHO,"Você não é Traficante!");
		return 1;
		}
	}
	if(strcmp(cmd, "/beber", true) == 0) {
	    new msg[256];
	    new tmp[256];
	    new quantia;
	    tmp = strtok(cmdtext, idx);
     	if(!strlen(tmp)){
      		SendClientMessage(playerid, COR_VERMELHO,"/beber [latas]");
			return 1;
		}
		quantia = strval(tmp);
		if(quantia > QtCerveja[playerid]){
		    SendClientMessage(playerid, COR_VERMELHO, "Você não tem todas estas latas.");
			return 1;
		}
    	if(QtCerveja[playerid] == 0){
	       	SendClientMessage(playerid, COR_VERMELHO, "Você não tem nenhuma lata, como poderá beber?");
	       	return 1;
		} else {
		    QtCerveja[playerid] = quantia;
		    Bebida[playerid] = quantia;
		    ApplyAnimation(playerid,"PED", "WALK_DRUNK",4.0,1,1,1,1,1);
			format(msg,sizeof(msg),"Você tomou %d latas de cerveja.",quantia);
			SendClientMessage(playerid, COR_VERDE, msg);
			QtCerveja[playerid]--;
			Bebida[playerid]++;
			return 1;
		}
	}
	if(strcmp(cmd, "/fumar", true) == 0) {
	    new msg[256];
	    new tmp[256];
	    new quantia;
	    tmp = strtok(cmdtext, idx);
     	if(!strlen(tmp)){
      		SendClientMessage(playerid, COR_VERMELHO,"/fumar [cigarros]");
			return 1;
		}
    	if(QtMaconha[playerid] == 0){
	       	SendClientMessage(playerid, COR_VERMELHO, "Você não tem nenhum cigarro, como poderá fumar?");
	       	return 1;
		} else {
		    QtMaconha[playerid] = quantia;
		    ApplyAnimation(playerid,"SMOKING", "M_smklean_loop", 4.0, 1, 1, 1, 1, 1);
			format(msg,sizeof(msg),"Você fumou %d cigarro de maconha.",quantia);
			SendClientMessage(playerid, COR_VERDE, msg);
			QtMaconha[playerid]--;
			Maconha[playerid]++;
			return 1;
		}
	}
	if(strcmp(cmd, "/cherar", true) == 0) {
	    new msg[256];
	    new tmp[256];
	    new quantia;
	    tmp = strtok(cmdtext, idx);
     	if(!strlen(tmp)){
      		SendClientMessage(playerid, COR_VERMELHO,"/cherar [gramas]");
			return 1;
		}
    	if(QtCocaina[playerid] == 0){
	       	SendClientMessage(playerid, COR_VERMELHO, "Você não cocaina, como poderá cherar?");
	       	return 1;
		} else {
		    QtCocaina[playerid] = quantia;
		   	ApplyAnimation(playerid,"CRACK", "crckdeth1", 4.0, 1, 1, 1, 1, 1);
			format(msg,sizeof(msg),"Você cherou %d gramas de cocaina.",quantia);
			SendClientMessage(playerid, COR_VERDE, msg);
			QtCocaina[playerid]--;
			Cocaina[playerid]++;
			return 1;
		}
	}
	if(strcmp(cmd, "/sellmaconha", true) == 0) {
	    if(Profissao[playerid] == TRAFICANTE || IsPlayerAdmin(playerid)){
	        new tmp[256];
	        new msg[256];
	        new plid, mili;
	        tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp)){
	            SendClientMessage(playerid, COR_VERMELHO,"/sellmaconha [id] [cigarros]");
				return 1;
			}
			plid = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)){
			    SendClientMessage(playerid, COR_VERMELHO, "/sellmaconha [id] [cigarros]");
				return 1;
			}
			mili = strval(tmp);
			if(mili > 10){
			    SendClientMessage(playerid, COR_VERMELHO, "Você está louco? Quer matar o seu cliente? Doses de 1 a 10");
				return 1;
			}
			else if(mili < 1){
			    SendClientMessage(playerid, COR_VERMELHO, "Te peguei, bichinho! Querendo enganar o freguês, não? Doses de 1 à 10");
				return 1;
			}else{
			    if(!IsPlayerConnected(plid)){
			        SendClientMessage(playerid,COR_VERMELHO, "O jogador que você indicou não está conectado.");
					return 1;
			    }
			    else{
			        if(GetDistanceBetweenPlayers(playerid,plid) > 20){
						SendClientMessage(playerid,COR_VERMELHO, "Chege mais perto para vender o bagulho.");
						return 1;
					} else {
			        	if(Maconha[plid] == 10){
			        	  	SendClientMessage(playerid,COR_VERMELHO, "Você quer matar seu cliente!");
							return 1;
						}
						if(IsPlayerConnected(plid)){
						    QtMaconha[plid] = mili;
					    	SendClientMessage(playerid,COR_VERDE, "Missão cumprida!");
					    	format(msg,sizeof(msg),"%s te vendeu %d cigarros de maconha, para fuma-los digite /fumar [cigarros].",PlayerName(playerid),mili);
					    	SendClientMessage(plid,COR_VERDE,msg);
					    	QtMaconha[plid]++;
							return 1;
						}
					}
				}
			}
		} else {
			SendClientMessage(playerid,COR_VERMELHO,"Você não é Traficante!");
			return 1;
		}
	}
	if(strcmp(cmd, "/sellcocaina", true) == 0) {
	    if(Profissao[playerid] == TRAFICANTE || IsPlayerAdmin(playerid)){
	        new tmp[256];
	        new msg[256];
	        new plid, mili;
	        tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp)){
	            SendClientMessage(playerid, COR_VERMELHO,"/sellcocaina [id] [quantidade]");
				return 1;
			}
			plid = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)){
			    SendClientMessage(playerid, COR_VERMELHO, "/sellcocaina [id] [quantidade]");
				return 1;
			}
			mili = strval(tmp);
			if(mili > 7){
			    SendClientMessage(playerid, COR_VERMELHO, "Você está louco? Quer matar o seu cliente? Doses de 1 a 7");
				return 1;
			}
			else if(mili < 1){
			    SendClientMessage(playerid, COR_VERMELHO, "Te peguei, bichinho! Querendo enganar o freguês, não? Doses de 1 à 7");
				return 1;
			}else{
			    if(!IsPlayerConnected(plid)){
			        SendClientMessage(playerid,COR_VERMELHO, "O jogador que você indicou não está conectado.");
					return 1;
			    }
			    else{
			        if(GetDistanceBetweenPlayers(playerid,plid) > 20){
						SendClientMessage(playerid,COR_VERMELHO, "Chege mais perto para vender o bagulho.");
						return 1;
					} else {
			        	if(Maconha[plid] == 10){
			        	  	SendClientMessage(playerid,COR_VERMELHO, "Você quer matar seu cliente!");
							return 1;
						}
						if(IsPlayerConnected(plid)){
						    QtCocaina[plid] = mili;
					    	SendClientMessage(playerid,COR_VERDE, "Missão cumprida!");
					    	format(msg,sizeof(msg),"%s te vendeu %d gramas de cocaina, para cherar digite /cherar [gramas].",PlayerName(playerid),mili);
					    	SendClientMessage(plid,COR_VERDE,msg);
					    	QtCocaina[plid]++;
							return 1;
						}
					}
				}
			}
		} else {
			SendClientMessage(playerid,COR_VERMELHO,"Você não é Traficante!");
			return 1;
		}
	}
	
	if(strcmp(cmd, "/irtrabalho", true) == 0) {
		if(Profissao[playerid] == DESEMPREGADO) {
			SetPlayerColor(playerid, COR_DESEMPREGADO); // Cinza
			return 1;
		}
		else if(Profissao[playerid] == ENTREGADOR_PIZZA) {
			SetPlayerColor(playerid, COR_ENTREGADOR_PIZZA); // Beje
			SetPlayerPos(playerid, -1805.1130,948.6368,24.8906);
			SetPlayerSkin(playerid, 155);
			udb_setSkin(PlayerName(playerid), 155);
			GameTextForPlayer(playerid, "~y~Entregador de Pizza",1500,4);
			return 1;
		}
		else if(Profissao[playerid] == BARMAN) {
			SetPlayerColor(playerid, COR_BARMAN); // Bege
			SetPlayerPos(playerid, -2244.1035,-89.8179,35.3203);
			SetPlayerSkin(playerid, 240);
			udb_setSkin(PlayerName(playerid), 240);
			GameTextForPlayer(playerid, "~y~Barman",1500,4);
			return 1;
		}
		else if(Profissao[playerid] == SORVETEIRO) {
			SetPlayerColor(playerid, COR_SORVETEIRO); // Bege
			SetPlayerPos(playerid, -2097.6360,-2348.1455,30.6250);
			GameTextForPlayer(playerid, "~y~Sorveteiro",1500,4);
			return 1;
		}
   		else if(Profissao[playerid] == VENDEDOR_LANCHE) {
			SetPlayerColor(playerid, COR_VENDEDOR_LANCHES); // Bege
			SetPlayerPos(playerid, -2333.7896,-167.2186,35.5547);
			GameTextForPlayer(playerid, "~y~Vendedor de Lanches",1500,4);
			return 1;
			}
		else if(Profissao[playerid] == PARAMEDICO) {
			SetPlayerColor(playerid, COR_PARAMEDICO); // Gold
			SetPlayerPos(playerid, -2620.2874,629.6313,14.4531);
			SetPlayerSkin(playerid, 70);
			udb_setSkin(PlayerName(playerid), 70);
			GameTextForPlayer(playerid, "~y~Paramedico",1500,4);
			return 1;
   		}
   		else if(Profissao[playerid] == INSTRUTOR_DE_DIRECAO) {
			SetPlayerColor(playerid, COR_INSTRUTOR); // Vermelho Claro
			SetPlayerPos(playerid, -2026.2343,-98.7060,35.1641);
			GameTextForPlayer(playerid, "~y~Instrutor de Direcao",1500,4);
			return 1;
		}
		else if(Profissao[playerid] == FRENTISTA) {
			SetPlayerColor(playerid, COR_FRENTISTA); // Cinza
			SetPlayerPos(playerid, -1675.9708,431.7278,7.1797);
			GameTextForPlayer(playerid, "~y~Frentista",1500,4);
			return 1;
		}
		else if(Profissao[playerid] == TAXISTA) {
			SetPlayerColor(playerid, COR_TAXISTA); // Amarelo
			SetPlayerPos(playerid, -1754.8579,961.1520,24.8828);
			GameTextForPlayer(playerid, "~y~Taxista",1500,4);
			return 1;
		}
		else if(Profissao[playerid] == MOTO_TAXI) {
			SetPlayerColor(playerid, COR_TAXISTA); // Amarelo
			SetPlayerPos(playerid, -1754.8579,961.1520,24.8828);
			GameTextForPlayer(playerid, "~y~Moto-Taxi",1500,4);
			return 1;
		}
		else if(Profissao[playerid] == TAXI_AERIO) {
			SetPlayerColor(playerid, COR_TAXI_AEREO); // Amarelo
			SetPlayerPos(playerid, -1754.8579,961.1520,24.8828);
			GameTextForPlayer(playerid, "~y~Taxi Aerio",1500,4);
			return 1;
		}
		else if(Profissao[playerid] == SEQUESTRADOR) {
			SetPlayerColor(playerid, COR_SEQUESTRADOR); // Amarelo
			GameTextForPlayer(playerid, "~y~Sequestrador",1500,4);
			return 1;
		}
		else if(Profissao[playerid] == ASSASSINO) {
			SetPlayerColor(playerid, COR_ASSASSINO); // Vermelho
			GameTextForPlayer(playerid, "~y~Assassino",1500,4);
			return 1;
		}
		else if(Profissao[playerid] == ASSALTANTE) {
			SetPlayerColor(playerid, COR_ASSALTANTE); // Azul Mar
			GameTextForPlayer(playerid, "~y~Assaltante",1500,4);
			return 1;
		}
		else if(Profissao[playerid] == LADRAO_CARROS) {
			SetPlayerColor(playerid, COR_LADRAO_CARROS); // Vermelho
			SetPlayerPos(playerid, -365.7678,1166.3445,19.7422);
			GameTextForPlayer(playerid, "~y~Ladrao de Carros",1500,4);
			return 1;
		}
		else if(Profissao[playerid] == TRAFICANTE) {
			SetPlayerColor(playerid, COR_TRAFICANTE); // Vermelho
			GameTextForPlayer(playerid, "~y~Traficante",1500,4);
			return 1;
		}
		else if(Profissao[playerid] == VENDEDOR_DE_ARMAS) {
			SetPlayerColor(playerid, COR_VENDEDOR_ARMAS); // Vermelho
			GameTextForPlayer(playerid, "~y~Vendedor de Armas",1500,4);
			return 1;
		}
		else if(Profissao[playerid] == CACADOR) {
			SetPlayerColor(playerid, COR_CACADOR); // Bege
			GameTextForPlayer(playerid, "~y~Cacador",1500,4);
			return 1;
		}
		else if(Profissao[playerid] == PESCADOR) {
			SetPlayerColor(playerid, COR_PESCADOR); // Bege
			GameTextForPlayer(playerid, "~y~Pescador",1500,4);
			return 1;
		}
		else if(Profissao[playerid] == AGRICULTOR) {
			SetPlayerColor(playerid, COR_AGRICULTOR); // Bege
			GameTextForPlayer(playerid, "~y~Agricutor",1500,4);
			return 1;
		}
		else if(Profissao[playerid] == COP_CIVIL) {
			SetPlayerColor(playerid, COR_COP_CIVIL); // Azul
			SetPlayerPos(playerid, -1605.3073,718.3339,11.9387);
			SetPlayerSkin(playerid, 280);
			udb_setSkin(PlayerName(playerid), 280);
			GameTextForPlayer(playerid, "~y~Policial Civil",1500,4);
			return 1;
		}
		else if(Profissao[playerid] == COP_RODOVIARIO) {
			SetPlayerColor(playerid, COR_COP_RODOVIARIO); // Azul
			SetPlayerPos(playerid, -211.6215,980.4658,19.3253);
			SetPlayerSkin(playerid, 283);
			udb_setSkin(PlayerName(playerid), 283);
			GameTextForPlayer(playerid, "~y~Policial Rodoviario",1500,4);
			return 1;
		}
		else if(Profissao[playerid] == COP_ELITE) {
			SetPlayerColor(playerid, COR_COP_ELITE); // Azul Claro
			SetPlayerPos(playerid, 1552.9604,-1675.1140,16.1953);
			SetPlayerSkin(playerid, 285);
			udb_setSkin(PlayerName(playerid), 285);
			GameTextForPlayer(playerid, "~y~S.W.A.T.",1500,4);
			return 1;
		}
		else if(Profissao[playerid] == DELEGADO) {
			SetPlayerColor(playerid, COR_DELEGADO); // Azul Escuro
			SetPlayerPos(playerid, -1605.3073,718.3339,11.9387);
			SetPlayerSkin(playerid, 125);
			udb_setSkin(PlayerName(playerid),  125);
			GameTextForPlayer(playerid, "~y~Delegado",1500,4);
			return 1;
		}
		else if(Profissao[playerid] == JUIZ) {
			SetPlayerColor(playerid, COR_JUIZ); // verde claro
			SetPlayerPos(playerid, -1605.3073,718.3339,11.9387);
			SetPlayerSkin(playerid, 59);
			udb_setSkin(PlayerName(playerid), 59);
			GameTextForPlayer(playerid, "~y~Juiz",1500,4);
			return 1;
		}
		else if(Profissao[playerid] == NARCOTICOS) {
			SetPlayerColor(playerid, COR_JUIZ); //
			SetPlayerPos(playerid, 1552.9604,-1675.1140,16.1953);
			SetPlayerSkin(playerid, 46);
			udb_setSkin(PlayerName(playerid), 46);
			GameTextForPlayer(playerid, "~y~Narcoticos",1500,4);
			return 1;
		}
		else if(Profissao[playerid] == POLICIA_FLORESTAL) {
			SetPlayerColor(playerid, COR_POLICIA_FLORESTAL); // verde azul
			SetPlayerPos(playerid, -2163.1667,-2387.7739,30.6250);
			SetPlayerSkin(playerid, 127);
			udb_setSkin(PlayerName(playerid), 127);
			GameTextForPlayer(playerid, "~y~Policia Florestal",1500,4);
			return 1;
		}
		else if(Profissao[playerid] == IBAMA) {
			SetPlayerColor(playerid, COR_IBAMA); // Azul Claro
			SetPlayerPos(playerid, -2163.1667,-2387.7739,30.6250);
			SetPlayerSkin(playerid, 98);
			udb_setSkin(PlayerName(playerid), 98);
			GameTextForPlayer(playerid, "~y~Ibama",1500,4);
			return 1;
		}
		else if(Profissao[playerid] == EXERCITO) {
			SetPlayerColor(playerid, COR_EXERCITO); // Verde Escuro
			SetPlayerPos(playerid, -1310.9027,472.2223,7.1875);
			SetPlayerSkin(playerid, 287);
			udb_setSkin(PlayerName(playerid), 287);
			GameTextForPlayer(playerid, "~y~Exercito",1500,4);
			return 1;
		}
		else if(Profissao[playerid] == ADVOGADO) {
			SetPlayerColor(playerid, COR_ADVOGADO); // Roxo
			SetPlayerPos(playerid, -1938.5940,569.9607,35.2899);
			SetPlayerSkin(playerid, 147);
			udb_setSkin(PlayerName(playerid), 147);
			GameTextForPlayer(playerid, "~y~Advogado",1500,4);
			return 1;
		}
		else if(Profissao[playerid] == SEGURANÇA) {
			SetPlayerColor(playerid, COR_SEGURANÇA); // Azul super claro
			SetPlayerPos(playerid, -2180.6013,-2401.2395,30.6250);
			SetPlayerSkin(playerid, 165);
			udb_setSkin(PlayerName(playerid), 165);
			GameTextForPlayer(playerid, "~y~Seguranca",1500,4);
			return 1;
		}
		else if(Profissao[playerid] == MOTORISTA_PARTICULAR) {
			SetPlayerColor(playerid, COR_MOTORISTA); // Laranja
			SetPlayerPos(playerid, -1754.8579,961.1520,24.8828);
			SetPlayerSkin(playerid, 255);
			udb_setSkin(PlayerName(playerid), 255);
			GameTextForPlayer(playerid, "~y~Motorista Particular",1500,4);
			return 1;
		}
		else if(Profissao[playerid] == MOTORISTA_DE_ONIBUS) {
			SetPlayerColor(playerid, COR_MOTORISTA_ONIBUS); // Claro
			SetPlayerPos(playerid, -1938.5940,569.9607,35.2899);
			GameTextForPlayer(playerid, "~y~Motorista de Onibus",1500,4);
			return 1;
		}
		else if(Profissao[playerid] == MENDINGO) {
			SetPlayerColor(playerid, COR_MENDINGO); // Claro
			SetPlayerPos(playerid, -2085.4712,-2448.2737,30.6250);
			GameTextForPlayer(playerid, "~y~Motorista de Onibus",1500,4);
			return 1;
		}
		else if(Profissao[playerid] == VENDEDOR_DE_CARROS) {
			SetPlayerColor(playerid, COR_VENDEDOR); // Verde
			SetPlayerPos(playerid, -1652.3525,1207.9297,7.2500);
			SetPlayerSkin(playerid, 120);
			udb_setSkin(PlayerName(playerid), 120);
			GameTextForPlayer(playerid, "~y~Vendedor de Carros",1500,4);
			return 1;
		}
		else if(Profissao[playerid] == CORRETOR) {
			SetPlayerColor(playerid, COR_CORRETOR); // Marfin
			SetPlayerSkin(playerid, 126);
			udb_setSkin(PlayerName(playerid), 126);
			GameTextForPlayer(playerid, "~y~Corretor",1500,4);
			return 1;
		}
		else if(Profissao[playerid] == SEGURADOR) {
			SetPlayerColor(playerid, COR_SEGURADOR); // Bege
			GameTextForPlayer(playerid, "~y~Segurador",1500,4);
			SetPlayerPos(playerid, 1153.8121,-1770.8701,16.5992);
			SetPlayerSkin(playerid, 117);
			udb_setSkin(PlayerName(playerid), 117);
			return 1;
		}
		else if(Profissao[playerid] == JORNALISTA) {
			SetPlayerColor(playerid, COR_JORNALISTA); // Bege
			GameTextForPlayer(playerid, "~y~Jornalista",1500,4);
			SetPlayerPos(playerid, -2521.2449,-624.7714,132.7831);
			SetPlayerSkin(playerid, 186);
			udb_setSkin(PlayerName(playerid), 186);
			return 1;
		}
		else if(Profissao[playerid] == CAMINHONEIRO) {
			SetPlayerColor(playerid, COR_CAMINHONEIRO); // Gold
			SetPlayerPos(playerid, -2097.3877,-2255.6489,30.6250);
			GameTextForPlayer(playerid, "~y~Caminhoneiro",1500,4);
			return 1;
		}
		else if(Profissao[playerid] == TRANSPORTE_GAS) {
			SetPlayerColor(playerid, COR_TRANSPORTE_GAS);
			SetPlayerPos(playerid, 295.6498,1385.6342,10.1560);
			GameTextForPlayer(playerid, "~y~Transporte de Combustivel",1500,4);
			return 1;
			}
		}

	if(strcmp(cmd, "/examead", true) == 0) {
	    if(Profissao[playerid] == NARCOTICOS || IsPlayerAdmin(playerid)){
	        new tmp[256];
	        new msg[256];
	        new plid;
	        tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp)) {
	            SendClientMessage(playerid,COR_VERMELHO,"/examead [id]");
				return 1;
			}
			plid = strval(tmp);
			if(IsPlayerConnected(plid) && PLAYERLIST_authed[playerid] == 1){
			    if(GetDistanceBetweenPlayers(playerid,plid) > 20){
			        SendClientMessage(playerid,COR_VERMELHO,"Você está muito longe, chegue mais perto!");
					return 1;
				} else {
				    SendClientMessage(playerid,COR_AMARELO,"Resultados do exame anti-dopping:");
				    format(msg, sizeof(msg), "Heroina : %d dose(s)",Heroina[plid]);
				    SendClientMessage(playerid,COR_BRANCO,msg);
				    format(msg, sizeof(msg), "Maconha : %d dose(s)",Maconha[plid]);
				    SendClientMessage(playerid,COR_BRANCO,msg);
				    format(msg, sizeof(msg), "Cocaína : %d dose(s)",Cocaina[plid]);
				    SendClientMessage(playerid,COR_BRANCO,msg);
				    SendClientMessage(playerid,COR_VERDE,"Exame anti-dopping concluído!");
					return 1;
				}
			} else {
			    SendClientMessage(playerid,COR_VERMELHO,"Jogador não conectado/logado");
				return 1;
			}
		} else {
			SendClientMessage(playerid,COR_VERMELHO,"Você não tem permissão para isso!");
			return 1;
		}
	}
	if(strcmp(cmd, "/verdrogas", true) == 0) {
	    if(Profissao[playerid] == NARCOTICOS || IsPlayerAdmin(playerid)){
	        new tmp[256];
	        new msg[256];
	        new plid;
	        tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp)) {
	            SendClientMessage(playerid,COR_VERMELHO,"/verdrogas [id]");
				return 1;
			}
			plid = strval(tmp);
			if(IsPlayerConnected(plid) && PLAYERLIST_authed[playerid] == 1){
			    if(GetDistanceBetweenPlayers(playerid,plid) > 20){
			        SendClientMessage(playerid,COR_VERMELHO,"Você está muito longe, chegue mais perto!");
					return 1;
				} else {
				    SendClientMessage(playerid,COR_AMARELO,"Drogas:");
				    format(msg, sizeof(msg), "Maconha : %d cigarro(s)",QtMaconha[plid]);
				    SendClientMessage(playerid,COR_AMARELO,msg);
				    format(msg, sizeof(msg), "Cocaína : %d grama(s)",QtCocaina[plid]);
				    SendClientMessage(playerid,COR_AMARELO,msg);
					return 1;
				}
			} else {
			    SendClientMessage(playerid,COR_VERMELHO,"Jogador não conectado/logado");
				return 1;
			}
		} else {
			SendClientMessage(playerid,COR_VERMELHO,"Você não tem permissão para isso!");
			return 1;
		}
	}

	if(strcmp(cmd, "/bafometro", true) == 0) {
	    if(Profissao[playerid] == COP_CIVIL || Profissao[playerid] == COP_RODOVIARIO || Profissao[playerid] == COP_ELITE || IsPlayerAdmin(playerid)){
		    new tmp[256];
		    new string[256];
      		new plid;
			new distancia;
		    distancia = GetDistanceBetweenPlayers(playerid, plid);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COR_VERMELHO, "/bafometro [id]");
				return 1;
			}
	        plid = strval(tmp);
			if(IsPlayerConnected(plid) && PLAYERLIST_authed[playerid] == 1){
				if(distancia > 20){
			        SendClientMessage(playerid, COR_VERMELHO, "Você está muito longe, chegue mais perto!");
					return 1;
				}
				if(distancia <= 20){
					format(string, sizeof(string), "O bafômetro mostra: %s no sangue", Bebida[plid]);
					SendClientMessage(playerid, COR_AMARELO, string);
					return 1;
				}
			}
			else{
	            SendClientMessage(playerid, COR_VERMELHO, "Jogador não está conectado/logado");
				return 1;
			}
		}
		if(Profissao[playerid] != COP_CIVIL || Profissao[playerid] != COP_RODOVIARIO || Profissao[playerid] != COP_ELITE){
		    SendClientMessage(playerid, COR_VERMELHO, "Você não é policial");
			return 1;
		}
		return 1;
	}

	SendClientMessage(playerid,COR_VERMELHO,"Comando desconhecido!");
	return 1;
}
public OnPlayerInfoChange(playerid)
{
	printf("OnPlayerInfoChange(%d)");
	return 1;
}
public faminto()
{
   for(new i=0; i<MAX_PLAYERS; i++){
   if(fome[i] == 5){
   if(tempofome == 6){
   new Float: vidaid;
   new vida;
   new vidaperdida;
   vida = GetPlayerHealth(i,vidaid);
   vidaperdida = vida - 20;
   SendClientMessage(i, COR_VERMELHO, "Voce esta com fome e ira perdendo vida cada vez mais se nao decidir comer");
   SetPlayerHealth(i,vidaperdida);
   }
  }
 }
}
public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
    for(new i=0; i<MAX_PLAYERS; i++){
    	if(Alarme[GetPlayerVehicleID(i)] == 1){
    	    SendClientMessage(playerid, COR_VERMELHO,"Este veículo está protegido com o Sistema de Alarmes MPA®, as portas");
    	    SendClientMessage(playerid, COR_VERMELHO,"foram trancadas e só poderá sair quando algum Policial te liberar!");
    	    printf("O Jogador %s(id: %d) entrou em um veiculo(id: %d) mais estava trancado.", PlayerName(playerid),playerid, vehicleid);
    	    TogglePlayerControllable(playerid, 0);
    	    new Float:X, Float:Y, Float:Z;
    	    new string[256];
    	    PlayerPlaySound(i,41800,X,Y,Z);
			if(Profissao[i] == COP_CIVIL || Profissao[i] == COP_RODOVIARIO || Profissao[i] == COP_ELITE){
				format(string, sizeof(string), "%s entrou em um veículo trancado!", PlayerName(playerid));
				SendClientMessage(i, COR_COP_ELITE, string);
				return 0;
			} else {
    			return 1;
			}
		}
	}
	printf("O Jogador %s(id: %d) entrou em um %s", PlayerName(playerid),playerid, VehicleName[GetPlayerVehicleID(playerid)]);
	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
	printf("O Jogador %s(id: %d) saiu de um veiculo(id: %d)", PlayerName(playerid),playerid, vehicleid);
	return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
	new modelo;
	cGetVehicleModelID(GetPlayerVehicleID(playerid),modelo);
	if(IsPlayerConnected(playerid) == 1 && modelo != 510 && modelo != 509){
		if(newstate == PLAYER_STATE_DRIVER){
			if(Combustivel[GetPlayerVehicleID(playerid)] <= -100){
				Combustivel[GetPlayerVehicleID(playerid)] = -100;
				TogglePlayerControllable(playerid, 0);
				SendClientMessage(playerid, COR_VERMELHO, "Este veículo não tem combustivel! Vá até o posto e compre um galão de combustível.");
				SendClientMessage(playerid, COR_VERMELHO, "Digite '/sair' para  do veiculo ou digite '/colocar' para colocar um galao de combustivel neste veiculo.");
    	    	return 0;
			}
		}
	}
	if(newstate == PLAYER_STATE_ONFOOT){
	    if(Taximetro[playerid][0] == 1){
			SendClientMessage(playerid, COR_VERDE, "Taxi pago.");
			SendClientMessage(Taximetro[playerid][1], COR_VERMELHO, "Você recebeu o valor da corrida até aqui.");
			GivePlayerMoney(playerid, 0 - PrecoCorrida[playerid]);
			GivePlayerMoney(Taximetro[playerid][1], PrecoCorrida[playerid]);
			PrecoCorrida[playerid] = 0;
			Taximetro[playerid][1] = 0;
			Taximetro[playerid][0] = 0;
			return 1;
		}
	}
	return 1;
}
stock CheckFuel()
{
	for(new i=0; i<MAX_PLAYERS; i++){
 		new id;
	    new modelo;
	    id = GetPlayerVehicleID(i);
		cGetVehicleModelID(id,modelo);
		if(IsPlayerConnected(i) == 1 && IsPlayerInAnyVehicle(i) == 1 && modelo != 509 && modelo != 510){
			if(Combustivel[GetPlayerVehicleID(i)] < -90 || Combustivel[GetPlayerVehicleID(i)] >= -90){
			SendClientMessage(i,COR_VERMELHO,"Atenção: seu combustível está quase acabando. Vá ao posto mais próximo e abasteça");
			return 1;
			}
		}
	}
	return 1;
}
public PhoneCut()
{
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (IsPlayerConnected(i))
		{
			if (Calling[i] > -1 && Answered[i] == 1 && Callerid[i] == 1)
			{
				if (GetPlayerMoney(i) >= CallCost)
				{
					GivePlayerMoney(i, -CallCost);
				}
				if (GetPlayerMoney(i) < CallCost)
				{
					SendClientMessage(i, COR_VERMELHO, "CHAMADA PERDIDA: Voce nao possue mais dinheiro para continuar essa ligação");
					SendClientMessage(Calling[i], COR_VERMELHO, "CHAMADA PERDIDA: O telefone de quem estava na outra chamada foi desligado por falta de créditos");
					Calling[Calling[i]] = -1;
					Answered[Calling[i]] = 0;
					Calling[i] = -1;
					Answered[i] = 0;
					Callerid[i] = 0;
				}
			}
		}
	}
	return 1;
}
public Speed(){
	for(new i=0;i<MAX_PLAYERS;i++){
		if(IsPlayerConnected(i)){
			new Float:x,Float:y,Float:z;
			GetPlayerPos(i,x,y,z);
			new
			Float:xOff = ppos[i][0] - x,
			Float:yOff = ppos[i][1] - y,
			Float:zOff = ppos[i][2] - z,
			Float:dis = floatsqroot((xOff * xOff) + (yOff * yOff) + (zOff * zOff));
			new tmpstr[256];
			format(tmpstr,256,"~h~ ~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~h~~w~%d ~g~km/h~n~~h~~g~Combustivel: ~w~%d",floatround(((dis/1000.0)*60.0)*60.0),Combustivel[GetPlayerVehicleID(i)]+100);
            if(IsPlayerInAnyVehicle(i)){
				GameTextForPlayer(i,tmpstr,6000,3);
				Velocidade[i] = floatround(((dis/1000.0)*60.0)*60.0);
			}
            ppos[i][0] = x;
            ppos[i][1] = y;
            ppos[i][2] = z;
		}
	}
}
public OnPlayerEnterCheckpoint(playerid)
{
	printf("O Jogador %s(%d) entrou em um checkpoint.", PlayerName(playerid),playerid);
	return 1;
}

public OnPlayerLeaveCheckpoint(playerid)
{
	printf("O Jogador %s(%d) saiu de um checkpoint.", PlayerName(playerid),playerid);
	return 1;
}

public OnPlayerEnterRaceCheckpoint(playerid)
{
	return 1;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
	return 1;
}

public OnRconCommand(cmd[])
{
	return 1;
}

public OnObjectMoved(objectid)
{
	return 1;
}

public OnPlayerObjectMoved(playerid, objectid)
{
	return 1;
}

public OnPlayerPickUpPickup(playerid, pickupid)
{
	return 1;
}

public OnPlayerSelectedMenuRow(playerid, row)
{
    new Menu:Current = GetPlayerMenu(playerid);
    if(Current == radares) {
   	switch(row){
    case 0:{HideMenuForPlayer(Current, playerid);radaron();TogglePlayerControllable(playerid, true);}
    case 1:{HideMenuForPlayer(Current, playerid);radaroff();TogglePlayerControllable(playerid, true);}
   	case 2:{HideMenuForPlayer(Current, playerid);TogglePlayerControllable(playerid, true);}
    }
  }
	return 1;
}
stock radaron()
{
    for(new i=0; i<MAX_PLAYERS; i++){
    Radaron[i] = 1;
    SendClientMessage(i,COR_CONFISCADOR_CARROS, "RADARES DA CIDADE ATIVADOS");
	}
}
stock radaroff()
{
    for(new i=0; i<MAX_PLAYERS; i++){
    Radaron[i] = 0;
    SendClientMessage(i, COR_CONFISCADOR_CARROS, "RADARES DA CIDADE DESATIVADOS");
	}
}
public OnPlayerExitedMenu(playerid)
{
	return 1;
}

stock PlayerName(playerid)
{
	new name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name, MAX_PLAYER_NAME);
 	new tmp[MAX_STRING];
  	set(tmp,udb_encode(name));
	return tmp;

}

public Bancos()
{
	new Float:X, Float:Y, Float:Z;
	for(new i=0; i<MAX_PLAYERS; i++){
		GetPlayerPos(i, X, Y, Z);
	    if(IsPlayerConnected(i)) {
			if(X >= 2315.3018 && X <= 2317.3018 && Y >= -13.7580 && Y <= -11.7580){//banco sf
			    if(AreaBanco[i] == 0) {
					SendClientMessage(i, COR_COP_ELITE, "Banco Central:");
					SendClientMessage(i, COR_AMARELO_CLARO, "/retirar [valor] ou /sacar [valor] : Retira dinheiro de sua conta bancaria. ");
					SendClientMessage(i, COR_AMARELO_CLARO, "/depositar [valor] : Deposita em sua conta bancaria");
					SendClientMessage(i, COR_AMARELO_CLARO, "/saldo : Vê o saldo de sua conta bancaria.");
					SendClientMessage(i, COR_AMARELO_CLARO, "/saldocel : Vê o saldo de sua conta bancaria pelo celular.");
					SendClientMessage(i, COR_LARANJA, "Para visualizar novamente os comandos digite /bancoinfo");
					AreaBanco[i] = 1;
				}
			}
			else if(X >= -2671.2031 && X <= -2665.3457 && Y >= 631.8643 && Y <= 640.1569){//caixa eletronico hospital
				if(AreaBanco[i] == 0) {
					DisablePlayerCheckpoint(i);
					SetPlayerCheckpoint(i, -2670.0745,636.9832,14.4531, 1.0);
					SendClientMessage(i, COR_COP_ELITE, "Caixa Eletrônico do Hospital:");
					SendClientMessage(i, COR_AMARELO_CLARO, "/retirar [valor] ou /sacar [valor] : Retira dinheiro de sua conta bancaria. ");
					SendClientMessage(i, COR_AMARELO_CLARO, "/depositar [valor] : Deposita em sua conta bancaria");
					SendClientMessage(i, COR_AMARELO_CLARO, "/saldo : Vê o saldo de sua conta bancaria.");
					SendClientMessage(i, COR_AMARELO_CLARO, "/saldocel : Vê o saldo de sua conta bancaria pelo celular.");
					SendClientMessage(i, COR_LARANJA, "Para visualizar novamente os comandos digite /bancoinfo");
					AreaBanco[i] = 1;

				}
			}
			else if(X >= -1986.5660 && X <= -1980.6200 && Y >= 161.8643 && Y <= 169.9125){//caixa eletronico rodoviaria
				if(AreaBanco[i] == 0) {
					DisablePlayerCheckpoint(i);
					SetPlayerCheckpoint(i, -1981.4067,165.7179,27.6875, 1.0);
					SendClientMessage(i, COR_COP_ELITE, "Caixa Eletrônico da Rodoviaria:");
					SendClientMessage(i, COR_AMARELO_CLARO, "/retirar [valor] ou /sacar [valor] : Retira dinheiro de sua conta bancaria. ");
					SendClientMessage(i, COR_AMARELO_CLARO, "/depositar [valor] : Deposita em sua conta bancaria");
					SendClientMessage(i, COR_AMARELO_CLARO, "/saldo : Vê o saldo de sua conta bancaria.");
					SendClientMessage(i, COR_AMARELO_CLARO, "/saldocel : Vê o saldo de sua conta bancaria pelo celular.");
					SendClientMessage(i, COR_LARANJA, "Para visualizar novamente os comandos digite /bancoinfo");
					AreaBanco[i] = 1;

				}
			}
			else if(X >= 1704.3108 && X <= 1710.7142 && Y >= -1687.7231 && Y <= -1682.6393){//caixa eletronico ls principal
				if(AreaBanco[i] == 0) {
					DisablePlayerCheckpoint(i);
					SetPlayerCheckpoint(i, 1707.6603,-1683.2781,13.5469, 1.0);
					SendClientMessage(i, COR_COP_ELITE, "Caixa Eletrônico de Los Santos:");
					SendClientMessage(i, COR_AMARELO_CLARO, "/retirar [valor] ou /sacar [valor] : Retira dinheiro de sua conta bancaria. ");
					SendClientMessage(i, COR_AMARELO_CLARO, "/depositar [valor] : Deposita em sua conta bancaria");
					SendClientMessage(i, COR_AMARELO_CLARO, "/saldo : Vê o saldo de sua conta bancaria.");
					SendClientMessage(i, COR_AMARELO_CLARO, "/saldocel : Vê o saldo de sua conta bancaria pelo celular.");
					SendClientMessage(i, COR_LARANJA, "Para visualizar novamente os comandos digite /bancoinfo");
					AreaBanco[i] = 1;
				}
			}
			else if(X >= 392.0194 && X <= 399.6201 && Y >= -1806.2046 && Y <= -1800.3202){//caixa eletronico ls secuntario
				if(AreaBanco[i] == 0) {
					DisablePlayerCheckpoint(i);
					SetPlayerCheckpoint(i, 395.8569,-1805.9064,7.8380, 1.0);
					SendClientMessage(i, COR_COP_ELITE, "Caixa Eletrônico da Praia de Santa Maria:");
					SendClientMessage(i, COR_AMARELO_CLARO, "/retirar [valor] ou /sacar [valor] : Retira dinheiro de sua conta bancaria. ");
					SendClientMessage(i, COR_AMARELO_CLARO, "/depositar [valor] : Deposita em sua conta bancaria");
					SendClientMessage(i, COR_AMARELO_CLARO, "/saldo : Vê o saldo de sua conta bancaria.");
					SendClientMessage(i, COR_AMARELO_CLARO, "/saldocel : Vê o saldo de sua conta bancaria pelo celular.");
					SendClientMessage(i, COR_LARANJA, "Para visualizar novamente os comandos digite /bancoinfo");
					AreaBanco[i] = 1;
				}
			}
			else if(X >= 1580.2050 && X <= 1583.5479 && Y >= 1757.5045 && Y <= 1761.8827){//caixa eletronico hospital lv
				if(AreaBanco[i] == 0) {
					DisablePlayerCheckpoint(i);
					SetPlayerCheckpoint(i, 1582.7406,1757.4973,10.8203, 1.0);
					SendClientMessage(i, COR_COP_ELITE, "Caixa Eletrônico do Hospital de Las Venturas:");
					SendClientMessage(i, COR_AMARELO_CLARO, "/retirar [valor] ou /sacar [valor] : Retira dinheiro de sua conta bancaria. ");
					SendClientMessage(i, COR_AMARELO_CLARO, "/depositar [valor] : Deposita em sua conta bancaria");
					SendClientMessage(i, COR_AMARELO_CLARO, "/saldo : Vê o saldo de sua conta bancaria.");
					SendClientMessage(i, COR_AMARELO_CLARO, "/saldocel : Vê o saldo de sua conta bancaria pelo celular.");
					SendClientMessage(i, COR_LARANJA, "Para visualizar novamente os comandos digite /bancoinfo");
					AreaBanco[i] = 1;
				}
			}
			else if(X >= -183.1262 && X <= -179.1874 && Y >= 1134.7365 && Y <= 1140.8806){//caixa eletronico fc
				if(AreaBanco[i] == 0) {
					DisablePlayerCheckpoint(i);
					SetPlayerCheckpoint(i, -181.5996,1137.5221,19.7422, 1.0);
					SendClientMessage(i, COR_COP_ELITE, "Caixa Eletrônico de Forst Carson:");
					SendClientMessage(i, COR_AMARELO_CLARO, "/retirar [valor] ou /sacar [valor] : Retira dinheiro de sua conta bancaria. ");
					SendClientMessage(i, COR_AMARELO_CLARO, "/depositar [valor] : Deposita em sua conta bancaria");
					SendClientMessage(i, COR_AMARELO_CLARO, "/saldo : Vê o saldo de sua conta bancaria.");
					SendClientMessage(i, COR_AMARELO_CLARO, "/saldocel : Vê o saldo de sua conta bancaria pelo celular.");
					SendClientMessage(i, COR_LARANJA, "Para visualizar novamente os comandos digite /bancoinfo");
					AreaBanco[i] = 1;
				}
			}
			else if(X >= -2208.0637 && X <= -2202.5322 && Y >= -2292.6494 && Y <= -2286.9622){//caixa eletronico ap
				if(AreaBanco[i] == 0) {
					DisablePlayerCheckpoint(i);
					SetPlayerCheckpoint(i, -2206.0032,-2290.7778,30.6250, 1.0);
					SendClientMessage(i, COR_COP_ELITE, "Caixa Eletrônico do Hospital de Angel Pine:");
					SendClientMessage(i, COR_AMARELO_CLARO, "/retirar [valor] ou /sacar [valor] : Retira dinheiro de sua conta bancaria. ");
					SendClientMessage(i, COR_AMARELO_CLARO, "/depositar [valor] : Deposita em sua conta bancaria");
					SendClientMessage(i, COR_AMARELO_CLARO, "/saldo : Vê o saldo de sua conta bancaria.");
					SendClientMessage(i, COR_AMARELO_CLARO, "/saldocel : Vê o saldo de sua conta bancaria pelo celular.");
					SendClientMessage(i, COR_LARANJA, "Para visualizar novamente os comandos digite /bancoinfo");
					AreaBanco[i] = 1;
				}
			}
			else if(X >= -2431.1711 && X <= -2429.1912 && Y >= 64.9186 && Y <= 69.0973){//banco sf entrada
			    SetPlayerPos(i,2307.3384, -16.1068, 26.7496);
			    SendClientMessage(i,COR_AMARELO_SCLARO, "Você entrou no banco");
			    SendClientMessage(i,COR_VERMELHO, "Vá até o checkpoint marcado em seu mapa.");
			    GameTextForPlayer(i, "~y~Banco", 1000, 1);
				SetPlayerCheckpoint(i, 2316.3018, -12.7580, 26.7422, 1.0);
				SetPlayerMapIcon(i,0,316.3018, -12.7580, 26.7422,52,0xFFFFFFFF);
				AddStaticPickup(1274,1,316.3018, -12.7580, 26.7422);
			}
			else if(X >= 2304.6868 && X <= 2306.0764 && Y >= -17.3533 && Y <= -14.2469){//banco sf saida
			    SetPlayerPos(i,-2426.4385,66.4771,35.1719);
			    DisablePlayerCheckpoint(i);
			}
			else if(X >= -229.1006 && X <= -222.3829 && Y >= 1393.7872 && Y <= 1412.1816 || X >= 488.2628 && X <= 512.0616 && Y >= -88.5894 && Y <= -67.7595){
			    GameTextForPlayer(i,"~g~Bar",1000,1);
			    AreaBar[i] = 1;
			}
			else if(X >= -2112.7395 && X <= -2090.7546 && Y >= -2247.9727 && Y <= -2222.8323){//carga ap
			    GameTextForPlayer(i,"Area de Carga",1000,4);
			    AreaCarga[i] = 1;
			}
			else if(X >= -1752.5536 && X <= -1713.5513 && Y >= -123.4906 && Y <= -23.3372){//descarga sf
				GameTextForPlayer(i,"Area de Descarga",1000,4);
				AreaDescarga[i] = 1;
			}
			else if(X >= -2158.9739 && Y <= -2435.3933 && X <= -2133.7820&& Y >= -2458.7314){//taxi ap
      			GameTextForPlayer(i,"~y~Cooperativa de Taxi",3000,1);
			}
			else if(X >= 1536.8982 && Y >= -1679.9175 && X <= 1538.9469&& Y <= -1677.3486){
				DisablePlayerCheckpoint(i);
				GameTextForPlayer(i,"~g~Aeroporto de Los Santos",3000,1);
				SendClientMessage(i, COR_AZUL, "Os policiais te deixaram no aeroporto, compre uma passagem para San Fierro.");
				SendClientMessage(i, COR_VERMELHO, "Vá até o checkpoint marcado em seu mapa.");
				SetPlayerCheckpoint(i, 1642.0026,-2335.2190,13.5469, 1.7);
				SetPlayerPos(i,1652.1752,-2326.0659,13.5469);
			}
			else if(X >= 1640.7946 && Y >= -2335.4839 && X <= 1643.2434 && Y <= -2334.0049){
				if(AreaEscola[i] == 0) {
					GameTextForPlayer(i,"~w~Caixa",3000,1);
					SendClientMessage(i, COR_AMARELO, "Você entrou no Caixa do Aeroporto de Los Santos.");
					SendClientMessage(i, COR_AMARELO_CLARO, "Digite /passagemsf comprar uma passagem para San Fierro.");
					AreaEscola[i] = 1;
				}
			}
			else if(X >= 1737.6990 && Y <= -2018.7426 && X <= 1812.3337 && Y >= -2076.6140 || X >= -2095.3232 && Y <= -103.8250 && X <= -2012.2542 && Y >= -280.0541 || X >= -150.0648 && Y <= 1137.7106 && X <= -134.8052 && Y >= 1108.8424 || X >= -2152.9187 && Y <= -2239.6670 && X <= -2117.0593 && Y >= -2272.0034){
			    if(AreaEscola[i] == 0) {
					GameTextForPlayer(i,"~y~Auto-Escola",3000,1);
					SendClientMessage(i, COR_AMARELO, "Você entrou em uma Auto-Escola.");
					SendClientMessage(i, COR_AMARELO_CLARO, "Digite /autoinfo para mais informações.");
					AreaEscola[i] = 1;
				}
			}
			else if(X >= -2218.7876 && Y <= -2283.6938 && X <= -2196.2480 && Y >= -2302.9141){//hospital ap
			    GameTextForPlayer(i,"~r~Hospital",3000,1);
			}
			else if(X >= -2199.4460 && Y <= -2251.7737 && X <= -2189.1111 && Y >= -2261.1230){//hotel ap
			    GameTextForPlayer(i,"~g~Hotel",3000,1);
			    AreaHotel[i] = 1;
			}
			else if(X >= -1610.9099 && X <= -1496.5111 && Y >= 1279.2794 && Y <= 1295.2489){
				if(AreaCoopPesca[i] == 0) {
					GameTextForPlayer(i,"~b~Cooperativa de Pesca",1000,1);
					SendClientMessage(i, COR_AZUL, "Você entrou na Coopertiva de Pesca.");
					SendClientMessage(i, COR_AMARELO_CLARO, "Digite /pescainfo para mais informações.");
					AreaCoopPesca[i] = 1;
				}
			}
			else if(X >= -1194.7273 && X <= -1007.1719 && Y >= -1064.6096 && Y <= -915.6717){
			    GameTextForPlayer(i,"Plantacao da Fazenda",1000,4);
			    AreaFazenda[i] = 1;
			}
			else if(X >= -1118.8129 && X <= -1027.5986 && Y >= -1319.42541 && Y <= -1120.223){
			    GameTextForPlayer(i,"Fazenda, VENDA do Milho",1000,4);
			    AreaCoopFazenda[i] = 1;
			}
			else if(X >= -2824.2483 && X <= -2801.2568 && Y >= -1534.1261 && Y <= -1510.1261){
			    if(AreaCoopCaca[i] == 0) {
					GameTextForPlayer(i,"~b~Cooperativa de Caca",1000,1);
					SendClientMessage(i, COR_AZUL, "Você entrou na Coopertiva de Caça.");
					SendClientMessage(i, COR_AMARELO_CLARO, "Digite /cacainfo para mais informações.");
					AreaCoopCaca[i] = 1;
				}
			}
			else if((X >= -364.4092 && Y <= 1202.5830 && X <= -357.1573 && Y >= 1194.7305 || X >= -375.7656 && Y <= 1192.6091  && X <= -345.4589 && Y >= 1156.0710)){//desmanchar fs
    			if(AreaDesmanche[i] == 0) {
					GameTextForPlayer(i,"~g~Desmanche",3000,1);
					SendClientMessage(i,COR_VERMELHO, "Digite /desmanchar para desmanchar este veículo.");
					AreaDesmanche[i] = 1;
				}
			}
			else if((X >= 110.7788 && Y <= 1484.3899  && X <= 288.1017 && Y >= 1336.3016)){//refinaria lv
				if(AreaRefinaria[i] == 0) {
					GameTextForPlayer(i,"~r~Refinaria",3000,1);
					SendClientMessage(i, COR_VERMELHO, "Você entrou na Refinaria:");
					SendClientMessage(i, COR_AMARELO_CLARO, "Digite /refinariainfo para mais informações.");
					AreaRefinaria[i] = 1;
				}
			}
			else if((X >= -1496.1409 && Y <= 1884.1014 && X <= -1449.3982 && Y >= 1851.1890) || (X >= 608.2354 && X <= 619.7912 && Y >= 1851.1890 && Y <= 1884.1014) || (X >= -1332.9951 && X <= -1324.0493 && Y >= 2669.6433 && Y <= 2685.6675)){
				if(AreaPosto[i] == 0) {
					GameTextForPlayer(i,"~r~Posto",3000,1);
					SendClientMessage(i, COR_VERMELHO, "Você entrou em um Posto.");
					SendClientMessage(i, COR_AMARELO_CLARO, "Digite /postoinfo para mais informações.");
					AreaPosto[i] = 1;
				}
			}
			else if((X >= -3911.6306 && X <= -3873.4946 && Y >= -753.1635 && Y <= -721.8635)){//posto ilha
       			if(AreaPosto[i] == 0) {
					GameTextForPlayer(i,"~r~Posto",3000,1);
					SendClientMessage(i, COR_VERMELHO, "Você entrou em um Posto.");
					SendClientMessage(i, COR_AMARELO_CLARO, "Digite /postoinfo para mais informações.");
					AreaPosto[i] = 1;
				}
			}
			else if((X >= -1643.8086 && Y <= -2685.7473 && X <= -1515.1466 && Y >= -2579.6660 || X >= -2785.4309 && Y <= -2542.8059 && X <= -2221.5046 && Y >= -2579.6660 || X >= 651.7850 && X <= 661.3630 && Y >= -577.0740 && Y <= -555.3830) || (X >= 2131.2070 && X <= 2161.8208 && Y >= 2735.4387 && Y <= 2762.3884) || (X >= -1615.1073 && X <= -1601.3243 && Y >= -2733.9380 && Y <= -2692.7102) || (X >= 1587.0552 && X <= 1605.8910 && Y >= 2189.7161 && Y <= 2208.1714)){
		 		if(AreaPosto[i] == 0) {
					GameTextForPlayer(i,"~r~Posto",3000,1);
					SendClientMessage(i, COR_VERMELHO, "Você entrou em um Posto.");
					SendClientMessage(i, COR_AMARELO_CLARO, "Digite /postoinfo para mais informações.");
					AreaPosto[i] = 1;
				}
			}
			else if((X >= 996.3851 && X <= 1011.8171 && Y >= -943.7941 && Y <= -930.1505) || (X >= -107.9445 && X <= -77.7968 && Y >= -1178.9248 && Y <= -1163.9293) || (X >= -2420.0505 && X <= -2400.0459 && Y >= 958.4067 && Y <= 997.0031) || (X >= -1703.8510 && X <= -1644.2720 && Y >= 408.3849 && Y <= 427.6900) || (X >= 2104.0168 && X <= 2136.1519 && Y >= 901.5171 && Y <= 947.6444)){
			    if(AreaPosto[i] == 0) {
					GameTextForPlayer(i,"~r~Posto",3000,1);
					SendClientMessage(i, COR_VERMELHO, "Você entrou em um Posto.");
					SendClientMessage(i, COR_AMARELO_CLARO, "Digite /postoinfo para mais informações.");
					AreaPosto[i] = 1;
				}
			}
			else if((X >= -1695.3916 && X <= -1659.0499 && Y >= 412.7228 && Y <= 414.0763) || (X >= -1675.6531 && X <= -1675.1965 && Y >= 398.1009 && Y <= 434.0430) || (X >= 1932.0310 && X <= 1948.1785 && Y >= -1783.5273 && Y <= -1764.2950) || (X >= 992.8317 && X <= 1016.6620 && Y >= -945.4556 && Y <= -929.5608) || (X >= 2189.5925 && X <= 2213.6421 && Y >= 2463.2566 && Y <= 2487.5833)){
       			if(AreaPosto[i] == 0) {
					GameTextForPlayer(i,"~r~Posto",3000,1);
					SendClientMessage(i, COR_VERMELHO, "Você entrou em um Posto.");
					SendClientMessage(i, COR_AMARELO_CLARO, "Digite /postoinfo para mais informações.");
					AreaPosto[i] = 1;
				}
			}
			else if(X >= -1610.9099 && X <= -1496.5111 && Y >= 1279.2794 && Y <= 1295.2489){
				if(AreaCoopPesca[i] == 0) {
					GameTextForPlayer(i,"~b~Cooperativa de Pesca",1000,1);
					SendClientMessage(i, COR_AZUL, "Você entrou na Coopertiva de Pesca.");
					SendClientMessage(i, COR_AMARELO_CLARO, "Digite /pescainfo para mais informações.");
					AreaCoopPesca[i] = 1;
				}
			}
			else if(X >= -2689.9836 && X <= -2638.4956 && Y >= 1388.9476 && Y <= 1431.6681){
				if(AreaBalada[i] == 0) {
					GameTextForPlayer(i,"~b~Balada",1000,1);
					SendClientMessage(i, COR_AZUL, "Você entrou na Balada Reload.");
					SendClientMessage(i, COR_AMARELO_CLARO, "Digite /baladainfo para mais informações.");
					AreaBalada[i] = 1;
				}
			}

			else if((X >= -1564.6642 && Y <= 481.7943  && X <= -1327.8732 && Y >= 308.5811)){
				if(Areacop[i] == 0) {
					GameTextForPlayer(i,"~g~Base do Exercito",3000,1);
					if(Profissao[i] != EXERCITO || i != IsPlayerAdmin(i)){
						SendClientMessage(i, COR_VERMELHO, "Você entrou em uma área não autorizada e por isso foi morto.");
						SetPlayerHealth(i, 0);
						Areacop[i] = 1;
					}
				}
			}
			else if((X >= -1640.5190 && Y <= 687.6575  && X <= -1573.1179 && Y >= 647.1256)){
    			if(Areacop[i] == 0) {
					GameTextForPlayer(i,"~b~Departamento de Policia",3000,1);
					Areacop[i] = 1;
				}
			}
			else {
				if(AreaBanco[i] == 1) {
					DisablePlayerCheckpoint(i);
					AreaBanco[i] = 0;
				}
				if(AreaHotel[i] == 1){
   					AreaHotel[i] = 0;
				}
				if(AreaBar[i] == 1){
   					AreaBar[i] = 0;
				}
				if(AreaDescarga[i] == 1){
   					AreaDescarga[i] = 0;
				}
				if(AreaCarga[i] == 1){
    				AreaCarga[i] = 0;
				}
				if(AreaPosto[i] == 1) {
				    AreaPosto[i] = 0;
				}
				if(AreaCoopPesca[i] == 1) {
				    AreaCoopPesca[i] = 0;
				}
				if(AreaFazenda[i] == 1) {
				    AreaFazenda[i] = 0;
				}
				if(AreaCoopFazenda[i] == 1) {
				    AreaCoopFazenda[i] = 0;
				}
				if(AreaRefinaria[i] == 1) {
				    AreaRefinaria[i] = 0;
				}
				if(AreaBalada[i] == 1) {
				    AreaBalada[i] = 0;
                }
				if(AreaEscola[i] == 1) {
				    AreaEscola[i] = 0;
				}
				if(AreaDesmanche[i] == 1) {
				    AreaDesmanche[i] = 0;
				}
				if(Areacop[i] == 1) {
				    Areacop[i] = 0;
				}
			}
		}
	}
}

public MoneyGrubScoreUpdate()
{
	new CashScore;
	for(new i=0; i<MAX_PLAYERS; i++){
		if (IsPlayerConnected(i)){
   			CashScore = GetPlayerMoney(i);
			SetPlayerScore(i, CashScore);
		}
	}
}

public FuelDown()
	{
	for(new i=0;i<MAX_PLAYERS;i++)
	{
	Combustivel[GetPlayerVehicleID(i)]--;
	}
	return 1;
}

public LogarPlayer(playerid)
{
    new Float:X, Float:Y, Float:Z, Float:ang;
	GivePlayerMoney(playerid, udb_getAccState(PlayerName(playerid)) - GetPlayerMoney(playerid));
	udb_getPosition(PlayerName(playerid), X, Y, Z);
	udb_getAng(PlayerName(playerid), ang);
	SetSpawnInfo(playerid, 1, udb_getSkin(PlayerName(playerid)), X, Y, Z, ang, 0, 0, 0, 0, 0, 0);
	Profissao[playerid] = udb_getProf(PlayerName(playerid));

	if(Profissao[playerid] == DESEMPREGADO) {
		SetPlayerColor(playerid, COR_DESEMPREGADO); // Cinza
	}
	else if(Profissao[playerid] == ENTREGADOR_PIZZA) {
		SetPlayerColor(playerid, COR_ENTREGADOR_PIZZA); // Beje
	}
	else if(Profissao[playerid] == BARMAN) {
		SetPlayerColor(playerid, COR_BARMAN); // Bege
	}
	else if(Profissao[playerid] == SORVETEIRO) {
		SetPlayerColor(playerid, COR_SORVETEIRO);
	}
	else if(Profissao[playerid] == VENDEDOR_LANCHE) {
		SetPlayerColor(playerid, COR_VENDEDOR_LANCHES); // Beje
	}
	else if(Profissao[playerid] == PARAMEDICO) {
		SetPlayerColor(playerid, COR_PARAMEDICO);
	}
	else if(Profissao[playerid] == INSTRUTOR_DE_DIRECAO) {
		SetPlayerColor(playerid, COR_INSTRUTOR); // VClaro
	}
	else if(Profissao[playerid] == FRENTISTA) {
		SetPlayerColor(playerid, COR_FRENTISTA); // Claro
	}
	else if(Profissao[playerid] == TAXISTA) {
		SetPlayerColor(playerid, COR_TAXISTA); // Amarelo
	}
	else if(Profissao[playerid] == MOTO_TAXI) {
		SetPlayerColor(playerid, COR_MOTO_TAXI); // Amarelo
	}
	else if(Profissao[playerid] == TAXI_AERIO) {
		SetPlayerColor(playerid, COR_TAXI_AEREO); // Amarelo
	}
	else if(Profissao[playerid] == SEQUESTRADOR) {
		SetPlayerColor(playerid, COR_TAXISTA); // Amarelo
	}
	else if(Profissao[playerid] == ASSASSINO) {
		SetPlayerColor(playerid, COR_ASSASSINO); // Vermelho
	}
	else if(Profissao[playerid] == ASSALTANTE) {
		SetPlayerColor(playerid, COR_ASSALTANTE); // Beje
	}
	else if(Profissao[playerid] == LADRAO_CARROS) {
		SetPlayerColor(playerid, COR_LADRAO_CARROS); // Vermelho
	}
	else if(Profissao[playerid] == TRAFICANTE) {
		SetPlayerColor(playerid, COR_TRAFICANTE); // Vermelho
	}
	else if(Profissao[playerid] == VENDEDOR_DE_ARMAS) {
		SetPlayerColor(playerid, COR_VENDEDOR_ARMAS); // Vermelho
	}
	else if(Profissao[playerid] == CACADOR) {
		SetPlayerColor(playerid, COR_CACADOR);
	}
	else if(Profissao[playerid] == PESCADOR) {
		SetPlayerColor(playerid, COR_PESCADOR);
	}
	else if(Profissao[playerid] == AGRICULTOR) {
		SetPlayerColor(playerid, COR_AGRICULTOR);
	}
	else if(Profissao[playerid] == COP_CIVIL) {
		SetPlayerColor(playerid, COR_COP_CIVIL); // Azul
	}
	else if(Profissao[playerid] == COP_RODOVIARIO) {
		SetPlayerColor(playerid, COR_COP_RODOVIARIO); // Azul
	}
	else if(Profissao[playerid] == COP_ELITE) {
		SetPlayerColor(playerid, COR_COP_ELITE); // Azul Claro
	}
	else if(Profissao[playerid] == DELEGADO) {
		SetPlayerColor(playerid, COR_DELEGADO); // Azul Escuro
	}
	else if(Profissao[playerid] == JUIZ) {
		SetPlayerColor(playerid, COR_JUIZ); // verde
	}
	else if(Profissao[playerid] == NARCOTICOS) {
		SetPlayerColor(playerid, COR_NARCOTICOS);
	}
	else if(Profissao[playerid] == POLICIA_FLORESTAL) {
		SetPlayerColor(playerid, COR_POLICIA_FLORESTAL); // verde azul
	}
	else if(Profissao[playerid] == IBAMA) {
		SetPlayerColor(playerid, COR_IBAMA); // azul
	}
	else if(Profissao[playerid] == EXERCITO) {
		SetPlayerColor(playerid, COR_EXERCITO); // verde
	}
	else if(Profissao[playerid] == ADVOGADO) {
		SetPlayerColor(playerid, COR_ADVOGADO); // roxo
	}
	else if(Profissao[playerid] == SEGURANÇA) {
		SetPlayerColor(playerid, COR_SEGURANÇA); // Azul claro
	}
	else if(Profissao[playerid] == MOTORISTA_PARTICULAR) {
		SetPlayerColor(playerid, COR_MOTORISTA); // Laranja
	}
	else if(Profissao[playerid] == MOTORISTA_DE_ONIBUS) {
		SetPlayerColor(playerid, COR_MOTORISTA_ONIBUS); // Claro
	}
	else if(Profissao[playerid] == MENDINGO) {
		SetPlayerColor(playerid, COR_MENDINGO); // Verde
	}
	else if(Profissao[playerid] == VENDEDOR_DE_CARROS) {
		SetPlayerColor(playerid, COR_VENDEDOR); // Verde
	}
	else if(Profissao[playerid] == CORRETOR) {
		SetPlayerColor(playerid, COR_CORRETOR); // Marfin
	}
	else if(Profissao[playerid] == SEGURADOR) {
		SetPlayerColor(playerid, COR_SEGURADOR);
	}
	else if(Profissao[playerid] == JORNALISTA) {
		SetPlayerColor(playerid, COR_JORNALISTA);
	}
	else if(Profissao[playerid] == CAMINHONEIRO) {
		SetPlayerColor(playerid, COR_CAMINHONEIRO);
	}
	else if(Profissao[playerid] == TRANSPORTE_GAS) {
		SetPlayerColor(playerid, COR_TRANSPORTE_GAS);
	}
	else if(Profissao[playerid] == CONFISCADOR_CARROS) {
		SetPlayerColor(playerid, COR_CONFISCADOR_CARROS);
	}

	if(udb_getPrisao(PlayerName(playerid)) == 1){
	    SetSpawnInfo(playerid, 1, udb_getSkin(PlayerName(playerid)), 263.7124, 77.7232, 1001.0391, 277.6703, 0, 0, 0, 0, 0, 0);
	    Procurados[playerid] = 0;
	}
	SpawnPlayer(playerid);
}

public GetDistanceBetweenPlayers(playerid,playerid2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	new Float:dis;
	GetPlayerPos(playerid,x1,y1,z1);
	GetPlayerPos(playerid2,x2,y2,z2);
	dis = floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
	return floatround(dis);
}

public Taxi()
{
	for(new i=0; i<MAX_PLAYERS; i++){
		if(Taximetro[i][0] == 1){
			if(GetPlayerMoney(i) > PrecoCorrida[i] + 3){
			    new string[256];
				PrecoCorrida[i] = PrecoCorrida[i] + 3;
				format(string, sizeof(string), "O taxímetro mostra: R$%d", PrecoCorrida[i]);
				SendClientMessage(i, COR_VERDE, string);
				SendClientMessage(Taximetro[i][1], COR_VERDE, string);
			}
			if(GetPlayerMoney(i) < PrecoCorrida[i] + 3){
				SendClientMessage(i, COR_VERMELHO, "Seu dinheiro para o taxi acabou, vai ficar aqui");
				SendClientMessage(Taximetro[i][1], COR_VERMELHO, "Seu passageiro ficou sem dinheiro e por isso foi deixado aqui.");
				GivePlayerMoney(i, 0 - PrecoCorrida[i]);
				GivePlayerMoney(Taximetro[i][1], PrecoCorrida[i]);
				RemovePlayerFromVehicle(i);
				PrecoCorrida[i] = 0;
				Taximetro[i][1] = 0;
				Taximetro[i][0] = 0;
			}
		}
	}
}
public MTaxi()
{
	for(new i=0; i<MAX_PLAYERS; i++){
		if(MTaximetro[i][0] == 1){
			if(GetPlayerMoney(i) > PrecoCorrida[i] + 1){
			    new string[256];
				PrecoCorrida[i] = PrecoCorrida[i] + 1;
				format(string, sizeof(string), "Preço do Moto Taxi: R$%d", PrecoCorrida[i]);
				SendClientMessage(i, COR_VERDE, string);
				SendClientMessage(Taximetro[i][1], COR_VERDE, string);
			}
			if(GetPlayerMoney(i) < PrecoCorrida[i] + 1){
				SendClientMessage(i, COR_VERMELHO, "Você não tem mais dinheiro para o taxi, vai ficar aqui.");
				SendClientMessage(Taximetro[i][1], COR_VERMELHO, "Seu passageiro ficou sem dinheiro e por isso foi deixado aqui.");
				GivePlayerMoney(i, 0 - PrecoCorrida[i]);
				GivePlayerMoney(Taximetro[i][1], PrecoCorrida[i]);
				RemovePlayerFromVehicle(i);
				PrecoCorrida[i] = 0;
				MTaximetro[i][1] = 0;
				MTaximetro[i][0] = 0;
			}
		}
	}
}
public ATaxi()
{
	for(new i=0; i<MAX_PLAYERS; i++){
		if(ATaximetro[i][0] == 1){
			if(GetPlayerMoney(i) > PrecoCorrida[i] + 15){
			    new string[256];
				PrecoCorrida[i] = PrecoCorrida[i] + 15;
				format(string, sizeof(string), "O aero-taxímetro mostra: R$%d", PrecoCorrida[i]);
				SendClientMessage(i, COR_VERDE, string);
				SendClientMessage(Taximetro[i][1], COR_VERDE, string);
			}
			if(GetPlayerMoney(i) < PrecoCorrida[i] + 15){
				SendClientMessage(i, COR_VERMELHO, "Você não tem mais dinheiro para o taxi, vai ficar aqui.");
				SendClientMessage(Taximetro[i][1], COR_VERMELHO, "Seu passageiro ficou sem dinheiro e por isso foi deixado aqui.");
				GivePlayerMoney(i, 0 - PrecoCorrida[i]);
				GivePlayerMoney(Taximetro[i][1], PrecoCorrida[i]);
				RemovePlayerFromVehicle(i);
				PrecoCorrida[i] = 0;
				ATaximetro[i][1] = 0;
				ATaximetro[i][0] = 0;
			}
		}
	}
}

public Cheat()
{
	SendClientMessageToAll(COR_VERMELHO, "- Denuncie o uso de cheater /report [id] [rasão] -");
}

public TempoPrisao()
{
	for(new i=0; i<MAX_PLAYERS; i++){
	    if(Presos[i] == 1){
	        if(TempoPreso[i] == 180){
	            TempoPreso[i] = 0;
				udb_setPrisao(PlayerName(i), 0);
				Presos[i] = 0;
				SetSpawnInfo(i,0,udb_getSkin(PlayerName(i)),-1605.3073,718.3339,11.9387,0,0,0,0,0,0,0);
	    		SpawnPlayer(i);
	            SendClientMessage(i, COR_AMARELO, "Sua Sentença acabou, não cometa mais crimes, ou será preso novamente.");
			}
			else {
			    TempoPreso[i]++;
			}
		}
	}
}

public SetCar(modelid,Float:X,Float:Y,Float:Z,Float:ang,Cor1,Cor2) CreateVehicle(modelid,X,Y,Z,ang,Cor1,Cor2,-1);

public SetCasa(Float:X,Float:Y,Float:Z) AddStaticPickup(1272,1,X,Y,Z);

public SetCone(Float:X,Float:Y,Float:Z) CreateObject(1238,X,Y,Z-200,0,0,0);

public Prisao(plid) SetPlayerPos(plid, 262.9540, 78.4339, 1002.0391), ApplyAnimation(plid,"BEACH", "ParkSit_M_loop", 4.0, 1, 0, 0, 0, 0);

forward Text();
public Text() {
	TextDrawDestroy(TextAll);
}
forward Desmanchado();
public Desmanchado(){
	for(new i=0; i<MAX_PLAYERS; i++){
		if(IsPlayerConnected(i) == 1 && Desmanche[i] == 1){
			Locado[i] = 0;
		}
	}
}

forward CarroLocado();
public CarroLocado(){
	for(new i=0; i<MAX_PLAYERS; i++){
		if(IsPlayerConnected(i) == 1 && Locado[GetPlayerVehicleID(i)] == 1){
			SendClientMessage(i,COR_VERMELHO,"O tempo de aluguel do carro acabou!");
			SetVehicleToRespawn(GetPlayerVehicleID(i));
			Locado[GetPlayerVehicleID(i)] = 0;
		}
	}
}

forward PassagemSF(playerid);
public PassagemSF(playerid){
    SetPlayerInterior(playerid, 0);
    SetPlayerPos(playerid,-1425.0415,-289.4514,14.1484);
    SetPlayerFacingAngle(playerid, 90.000);
    DisablePlayerCheckpoint(playerid);
	SendClientMessage(playerid, COR_AZUL_CLARO, "Você acabou de chegar em San Fierro.");
	SendClientMessage(playerid, COR_AZUL_CLARO, "Procure emprego e uma casa para morar.");
	SendClientMessage(playerid, COR_LARANJA, "Você têm R$5000 no banco, pode retirar quando quiser.");
}

forward Segurado();
public Segurado(){
	for(new i=0; i<MAX_PLAYERS; i++){
		if(IsPlayerConnected(i) == 1 && Seguro[i] == 1){
			SendClientMessage(i,COR_VERMELHO,"O seu seguro de vida acabou!");
			Seguro[i] = 0;
		}
	}
}

public Pesca() {
	for(new i=0; i<MAX_PLAYERS; i++){
		if(IsPlayerConnected(i) == 1 && PescaInProgress[i] == 1){
			QtPescas[i]++;
			PescaInProgress[i] = 0;
			SendClientMessage(i,COR_VERDE,"Sua rede voltou. Se quiser continuar pescando, fique a vontade.");
			SendClientMessage(i,COR_VERDE,"Se não, vá a cooperativa de pescas e venda seu pescado.");
		}
	}
}
public Radar(){
    for(new i=0;i<MAX_PLAYERS;i++){
    new Float:x,Float:y,Float:z;
    new
    Float:xOff = ppos[i][0] - x,
    Float:yOff = ppos[i][1] - y,
    Float:zOff = ppos[i][2] - z,
    Float:dis = floatsqroot((xOff * xOff) + (yOff * yOff) + (zOff * zOff));
    if(AreaRadar[i] == 1){
    if(Radaron[i] == 1){
    Velocidade[i] = floatround(((dis/1000.0)*60.0)*60.0);
    if(Velocidade[i] > 130 && GetPlayerState(i) == PLAYER_STATE_DRIVER){
    SendClientMessage(i,COR_VERMELHO,"Voce levou multa de $50 por passar em alta velocidade em um radar.");
    GivePlayerMoney(i,-50);
				    }
		  }
    ppos[i][0] = x;
    ppos[i][1] = y;
    ppos[i][2] = z;
	 }
 }
}
public Caca() {
	for(new i=0; i<MAX_PLAYERS; i++){
	    if(IsPlayerConnected(i) == 1 && CacaInProgress[i] == 1){
			QtCacas[i]++;
			CacaInProgress[i] = 0;
			SendClientMessage(i,COR_VERDE,"Sua caça está pronta para ser vendida!");
			SendClientMessage(i,COR_VERDE,"Se quiser continuar caçando, fique a vontade.");
			SendClientMessage(i,COR_VERDE,"Se não, vá a cooperativa de caça e venda sua caça.");
		}
	}
}

public Platacao() {
	for(new i=0; i<MAX_PLAYERS; i++){
	    if(IsPlayerConnected(i) == 1 && MilhoInProgress[i] == 1){
	    	Milho[i]++;
			MilhoInProgress[i] = 0;
			SendClientMessage(i,COR_VERDE,"Sua platação está pronta para ser vendida!");
			SendClientMessage(i,COR_VERDE,"Colha o milho platando e venda a Fazenda.");
		}
	}
}
public balada(playerid)
{
  tocando%=48;
  SetWorldTime(tocando);
  if(IsPlayerConnected(playerid)){
  if(AreaBalada[playerid] == 1){
  
  if(tocando == 0){
  PlayerPlaySound(playerid,1088,0.0,0.0,0.0);
  SendClientMessage(playerid, COR_INSTRUTOR, "Trocando Música");
  PlayerPlaySound(playerid,1062,0.0,0.0,0.0);
  }
  if(tocando == 7){
  PlayerPlaySound(playerid,1063,0.0,0.0,0.0);
  SendClientMessage(playerid, COR_INSTRUTOR, "Trocando Música");
  PlayerPlaySound(playerid,1068,0.0,0.0,0.0);
  }
  if(tocando == 14){
  PlayerPlaySound(playerid,1069,0.0,0.0,0.0);
  SendClientMessage(playerid, COR_INSTRUTOR, "Trocando Música");
  PlayerPlaySound(playerid,1076,0.0,0.0,0.0);
  }
  if(tocando == 21){
  PlayerPlaySound(playerid,1077,0.0,0.0,0.0);
  SendClientMessage(playerid, COR_INSTRUTOR, "Trocando Música");
  PlayerPlaySound(playerid,1097,0.0,0.0,0.0);
  }
  if(tocando == 28){
  PlayerPlaySound(playerid,1098,0.0,0.0,0.0);
  SendClientMessage(playerid, COR_INSTRUTOR, "Trocando Música");
  PlayerPlaySound(playerid,1183,0.0,0.0,0.0);
  }
  if(tocando == 35){
  PlayerPlaySound(playerid,1084,0.0,0.0,0.0);
  SendClientMessage(playerid, COR_INSTRUTOR, "Trocando Música");
  PlayerPlaySound(playerid,1185,0.0,0.0,0.0);
  }
  if(tocando == 42){
  PlayerPlaySound(playerid,1086,0.0,0.0,0.0);
  SendClientMessage(playerid, COR_INSTRUTOR, "Trocando Música");
  PlayerPlaySound(playerid,1187,0.0,0.0,0.0);
  }
  }
  if(AreaBalada[playerid] == 0){
  PlayerPlaySound(playerid,1086,0.0,0.0,0.0);
  PlayerPlaySound(playerid,1084,0.0,0.0,0.0);
  PlayerPlaySound(playerid,1098,0.0,0.0,0.0);
  PlayerPlaySound(playerid,1077,0.0,0.0,0.0);
  PlayerPlaySound(playerid,1069,0.0,0.0,0.0);
  PlayerPlaySound(playerid,1063,0.0,0.0,0.0);
  PlayerPlaySound(playerid,1088,0.0,0.0,0.0);
  /* ids para parar as músicas */
}
}
}
public Semana()
{
    dias%=48;
	SetWorldTime(dias);
	for(new i=0; i<MAX_PLAYERS; i++) {

		if(dias==0){
		GameTextForPlayer(i,"~b~SEGUNDA FEIRA",10000,6);
		segunda[i] = 1;
		}
		if(dias==7){
		GameTextForPlayer(i,"~b~TERÇA FEIRA",10000,6);
		terca[i] = 1;
		}
		if(dias==14){
		GameTextForPlayer(i,"~b~QUARTA FEIRA",10000,6);
		quarta[i] = 1;
		}
		if(dias==21){
		GameTextForPlayer(i,"~b~QUINTA FEIRA",10000,6);
		quinta[i] = 1;
		}
		if(dias==28){
		GameTextForPlayer(i,"~b~SEXTA FEIRA",10000,6);
		sexta[i] = 1;
		}
		if(dias==35){
		GameTextForPlayer(i,"~b~SABADO",10000,6);
		sabado[i] = 1;
		}
		if(dias==42){
		GameTextForPlayer(i,"~b~DOMINGO",10000,6);
		domingo[i] = 1;
		}
	 }
 }
public quefome()
{
   	tempofome%=12;
	SetWorldTime(tempofome);

	for(new i=0; i<MAX_PLAYERS; i++) {
	if(tempofome==0){
	fome[i] ++;
	}
  }
}
public Tempo()
{
	worldTime%=24;
	SetWorldTime(worldTime);

	for(new i=0; i<MAX_PLAYERS; i++) {
		if(worldTime==0){
			if(IsPlayerConnected(i)){
				if(Profissao[i] == DESEMPREGADO) {
					SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "O Governo depositou seu Seguro Desemprego: R$350");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 350);
				}
				else if(Profissao[i] == ENTREGADOR_PIZZA) {
				    SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "A Pizzaria depositou seu salário: R$850");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 850);
				}
				else if(Profissao[i] == BARMAN) {
				    SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "O Bar depositou seu salário: R$850");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 850);
				}
				else if(Profissao[i] == SORVETEIRO) {
				    SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "A Sorveteria depositou seu salário: R$350");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 350);
				}
				else if(Profissao[i] == VENDEDOR_LANCHE) {
				    SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "A Lancheteria Pine depositou seu salário: R$650");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 650);
				}
				else if(Profissao[i] == PARAMEDICO) {
				    SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "O Hospital depositou seu salário: R$650");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 650);
				}
				else if(Profissao[i] == INSTRUTOR_DE_DIRECAO) {
				    SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "A Auto-Escola depositou seu salário: R$600");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 600);
				}
				else if(Profissao[i] == FRENTISTA) {
				    SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "O Posto de Gasolina depositou seu salário: R$650");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 650);
				}
				else if(Profissao[i] == TAXISTA) {
					SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "A Cooperativa de Taxistas de San Andreas depositou seu salário: R$900");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 900);
				}
				else if(Profissao[i] == MOTO_TAXI) {
				    SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "A Cooperativa de Taxistas de San Andreas depositou seu salário: R$650");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 650);
				}
				else if(Profissao[i] == TAXI_AERIO) {
				    SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "A Cooperativa de Taxistas de San Andreas depositou seu salário: 1050");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 1050);
				}
				else if(Profissao[i] == SEQUESTRADOR) {
				    SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "O seu chefe depositou seu salário: R$550");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 550);
				}
				else if(Profissao[i] == ASSASSINO) {
				    SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "O seu chefe depositou sua porcentagem: R$650");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 650);
				}
				else if(Profissao[i] == ASSALTANTE) {
				    SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "O seu chefe depositou sua porcentagem: R$750");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 750);
				}
				else if(Profissao[i] == LADRAO_CARROS) {
				    SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "O desmanche depositou a sua porcentagem: R$550");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 550);
				}
				else if(Profissao[i] == TRAFICANTE) {
				    SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "O chefe da boca de fumo depositou a sua porcentagem: R$550");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 550);
				}
				else if(Profissao[i] == VENDEDOR_DE_ARMAS) {
				    SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "A Amu-Nattion depositou seu salário: R$700");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 700);
				}
				else if(Profissao[i] == CACADOR) {
				    SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "A Cooperativa de caça de San Andreas depositou seu salário: R$750");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 750);
				}
				else if(Profissao[i] == PESCADOR) {
				    SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "A Cooperativa de Pesca San Andreas depositou seu salário: R$650");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 650);
				}
				else if(Profissao[i] == AGRICULTOR) {
				    SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "A Fazenda depositou seu salário: R$850");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 850);
				}
				else if(Profissao[i] == COP_CIVIL) {
				    SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "O Governo depositou seu salário: R$1200");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 1200);
				}
				else if(Profissao[i] == COP_RODOVIARIO) {
				    SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "O Governo depositou seu salário: R$1200");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 1200);
				}
				else if(Profissao[i] == COP_ELITE) {
				    SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "O Governo depositou seu salário: R$2500");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 2500);
			}
				else if(Profissao[i] == DELEGADO) {
				    SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "O Governo depositou seu salário: R$3000");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 3000);
				}
				else if(Profissao[i] == JUIZ) {
				    SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "O Governo depositou seu salário: R$3200");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 3200);
				}
				else if(Profissao[i] == NARCOTICOS) {
				    SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "O Governo depositou seu salário: R$2800");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 2800);
				}
				else if(Profissao[i] == POLICIA_FLORESTAL) {
				    SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "O Governo depositou seu salário: R$1100");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 1100);
				}
				else if(Profissao[i] == IBAMA) {
				    SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "O Governo depositou seu salário: R$1100");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 1100);
				}
				else if(Profissao[i] == EXERCITO) {
				    SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "O Governo depositou seu salário: R$2300");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 2300);
				}
				else if(Profissao[i] == ADVOGADO) {
				    SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "O Escritorio de Advogacia depositou seu salário: R$1600");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 1600);
				}
				else if(Profissao[i] == SEGURANÇA) {
				    SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "A Reload Seguros depositou seu salário: R$850");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 850);
				}
				else if(Profissao[i] == MOTORISTA_PARTICULAR) {
					SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "O Sindicato dos Motorista de San Andreas depositou seu salário: R$800");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 800);
				}
				else if(Profissao[i] == MOTORISTA_DE_ONIBUS) {
				    SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "A Angel Pine Turismo depositou seu salário: R$900");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 900);
				}
				else if(Profissao[i] == MENDINGO) {
				    SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "O Governo depositou seu seguro mendingo: R$200");
					SendClientMessage(i, COR_VERMELHO, "Vagabundo vai trabalhar!");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 200);
				}
				else if(Profissao[i] == VENDEDOR_DE_CARROS) {
        			SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "A Consecionaria depositou seu salário: R$600");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 600);
				}
				else if(Profissao[i] == CORRETOR) {
				    SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "A Imobiliaria depositou deu salário: R$600");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 600);
				}
				else if(Profissao[i] == SEGURADOR) {
				    SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "A Reload Seguros SA depositou deu salário: R$600");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 600);
				}
				else if(Profissao[i] == JORNALISTA) {
				    SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "O Departamento de Imprensa e Propaganda depositou deu salário: R$950");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 950);
				}
				else if(Profissao[i] == CAMINHONEIRO) {
				    SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "A Cooperativa de cargas de Angel Pine depositou seu salário: R$650");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 650);
				}
				else if(Profissao[i] == TRANSPORTE_GAS) {
				    SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "A Refinaria depositou seu salário: R$600");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 600);
				}
				else if(Profissao[i] == CONFISCADOR_CARROS) {
				    SendClientMessage(i, COR_LARANJA, "Nova Mensagem de Bancos SA:");
					SendClientMessage(i, COR_AMARELO, "A Agencia de transito lhe depositou seu salario: R$600");
					udb_setBankMoney(PlayerName(i), udb_getBankMoney(PlayerName(i)) + 600);
				}
			}
		}
	}
}
forward GetPlayerDistanceToPointEx(playerid,Float:x,Float:y,Float:z);
forward IsPlayerInSphere(playerid,Float:x,Float:y,Float:z,radius);
forward GetPlayerDistanceToPoint(playerid,Float:x,Float:y);
forward IsPlayerInCircle(playerid,Float:x,Float:y,radius);
forward GetClosestHospital(playerid);

public GetClosestHospital(playerid)
{
	if(!IsPlayerConnected(playerid)){
	    return -1;
	}
	new Float:prevdist = 100000.000;
	new prevhosp;
	for(new hospid = 0; hospid <= 4; hospid++){
	    new Float:dist;
	    if(hospid == 0){
            dist = GetPlayerDistanceToPoint(playerid,-2651.6501,634.1177);
		}
		else if(hospid == 1){
		    dist = GetPlayerDistanceToPoint(playerid,1173.5842,-1324.5615);
		}
		else if(hospid == 2){
		    dist = GetPlayerDistanceToPoint(playerid,2031.9415,-1404.3578);
		}
		else if(hospid == 3){
		    dist = GetPlayerDistanceToPoint(playerid,1582.5615,1768.7921);
		}
		else if(hospid == 4){
		    dist = GetPlayerDistanceToPoint(playerid,-319.0593,1061.6935);
		}
		if((dist < prevdist)){
		    prevdist = dist;
		    prevhosp = hospid;
		}
	}
	return prevhosp;
}

public IsPlayerInCircle(playerid,Float:x,Float:y,radius) //By Sacky
{
if(GetPlayerDistanceToPoint(playerid,x,y) < radius){
return 1;
}
return 0;
}

public GetPlayerDistanceToPoint(playerid,Float:x,Float:y) //By Sacky
{
new Float:x1,Float:y1,Float:z1;
new Float:tmpdis;
GetPlayerPos(playerid,x1,y1,z1);
tmpdis = floatsqroot(floatpower(floatabs(floatsub(x,x1)),2)+floatpower(floatabs(floatsub(y,y1)),2));
return floatround(tmpdis);
}

public IsPlayerInSphere(playerid,Float:x,Float:y,Float:z,radius) //By Sacky
{
if(GetPlayerDistanceToPointEx(playerid,x,y,z) < radius){
return 1;
}
return 0;
}

public GetPlayerDistanceToPointEx(playerid,Float:x,Float:y,Float:z) //By Sacky
{
new Float:x1,Float:y1,Float:z1;
new Float:tmpdis;
GetPlayerPos(playerid,x1,y1,z1);
tmpdis = floatsqroot(floatpower(floatabs(floatsub(x,x1)),2)+floatpower(floatabs(floatsub(y,y1)),2)+floatpower(floatabs(floatsub(z,z1)),2));
return floatround(tmpdis);
}
forward PrevisaoDoTempo();
public PrevisaoDoTempo()
{
	for(new i=0; i<MAX_PLAYERS; i++) {
		if(worldTime==13){
			if(IsPlayerConnected(i)){
				if(PrevisaoTempo[i] == 1) {
					SendClientMessage(i,COR_BRANCO, "Noticia de San Andreas: Previsao do tempo de hoje:");
					SendClientMessage(i,COR_AZUL, "Tempo: 18º Celsius, nublado com forte rajada de vento.");
					printf("Previsao do Tempo 1");
				}
				else if(PrevisaoTempo[i] == 2) {
					SendClientMessage(i,COR_BRANCO, "Noticia de San Andreas: Previsao do tempo de hoje:");
					SendClientMessage(i,COR_AZUL, "Tempo: 23º Celsius, ceu limpo com nuvens claras.");
				}
				else if(PrevisaoTempo[i] == 3){
					SendClientMessage(i,COR_BRANCO, "Noticia de San Andreas: Previsao do tempo de hoje:");
					SendClientMessage(i,COR_AZUL, "Tempo: 32º Celsius, sol forte dia quente.");
				}
				else if(PrevisaoTempo[i] == 4){
					SendClientMessage(i,COR_BRANCO, "Noticia de San Andreas: Previsao do tempo de hoje:");
					SendClientMessage(i,COR_AZUL, "Tempo: 21º Celsius, ceu com nuvens escuras e chuva.");
				}
				else if(PrevisaoTempo[i] == 5){
					SendClientMessage(i,COR_BRANCO, "Noticia de San Andreas: Previsao do tempo de hoje:");
					SendClientMessage(i,COR_AZUL, "Tempo: 23º Celsius, ceu nublado.");
				}
				else if(PrevisaoTempo[i] == 6) {
					SendClientMessage(i,COR_BRANCO, "Noticia de San Andreas: Previsao do tempo de hoje:");
					SendClientMessage(i,COR_AZUL, "Tempo: 25º Celsius, tempestade de ventos chuva forte.");
				}
 			}
 		}
 	}
}
forward PrevisaoDoTempo2();
public PrevisaoDoTempo2()
{
	worldTime%=14;
	SetWorldTime(worldTime);

	for(new i=0; i<MAX_PLAYERS; i++)
	if(worldTime==14){
	if(IsPlayerConnected(i)){
	if(PrevisaoTempo[i] == 1)
	{
	PrevisaoTempo[i] = 2;
	SetPlayerWeather(i,9);
	}
	if(PrevisaoTempo[i] == 2)
	{
	PrevisaoTempo[i] = 3;
	SetPlayerWeather(i,10);
	}
	if(PrevisaoTempo[i] == 3)
 	{
	PrevisaoTempo[i] = 4;
	SetPlayerWeather(i,11);
	}
	if(PrevisaoTempo[i] == 4)
	{
	PrevisaoTempo[i] = 5;
	SetPlayerWeather(i,16);
	}
	if(PrevisaoTempo[i] == 5)
	{
	PrevisaoTempo[i] = 6;
	SetPlayerWeather(i,39);
	}
	if(PrevisaoTempo[i] == 6)
	{
	PrevisaoTempo[i] = 1;
	SetPlayerWeather(i,8);
	}
 	}
 	}
 	}
 	
public IsPlayerInArea(playerid, Float:minx, Float:maxx, Float:miny, Float:maxy)
{
        new Float:x, Float:y, Float:z;
        GetPlayerPos(playerid, x, y, z);
        if (x > minx && x < maxx && y > miny && y < maxy) return 1;
        return 0;
}
public update_zones() {
	new line1[10];
	new line2[10];
	for(new i=0; i<MAX_PLAYERS; i++) {
		if(IsPlayerConnected(i) && zoneupdates[i] == 1) {
	   		if(IsPlayerInZone(i,player_zone[i])) {  }
	   		else {
				new player_zone_before;
	    		player_zone_before = player_zone[i];
	    		player_zone[i] = -1;
				for(new j=0; j<sizeof(zones);j++) {
	     			if(IsPlayerInZone(i,j) && player_zone[i] == -1) {
	   					if(player_zone_before == -1) GameTextForPlayer(i,zones[j][zone_name],1500,1);
						else  if(strcmp(zones[j][zone_name],zones[player_zone_before][zone_name],true) != 0) GameTextForPlayer(i,zones[j][zone_name],1500,1);
						player_zone[i] = j;
						format(line1,10,"p%dzone",i);
						format(line2,10,"%d",j);
						}
 					}
				if(player_zone[i] == -1) player_zone[i] = player_zone_before;
			}
		}
	}
}

IsPlayerInZone(playerid, zoneid) {
 if(zoneid == -1) return 0;
 new Float:x, Float:y, Float:z;
 GetPlayerPos(playerid,x,y,z);
 if(x >= zones[zoneid][zone_minx] && x < zones[zoneid][zone_maxx]
 && y >= zones[zoneid][zone_miny] && y < zones[zoneid][zone_maxy]
 && z >= zones[zoneid][zone_minz] && z < zones[zoneid][zone_maxz]
 && z < 900.0) return 1;
 return 0;
}

public GetPlayerZone(playerid) {
 new line[10];
 format(line,10,"p%dzone",playerid);
 new zoneid = strval(line);
 return zoneid;
}
public CarrosTrancados()
{
	for(new i=0; i<MAX_PLAYERS; i++) {
     	SetVehicleParamsForPlayer(Car1, i, 0, 1);
     	SetVehicleParamsForPlayer(Car2, i, 0, 1);
     	SetVehicleParamsForPlayer(Car3, i, 0, 1);
     	SetVehicleParamsForPlayer(Car4, i, 0, 1);
     	SetVehicleParamsForPlayer(Car5, i, 0, 1);
     	SetVehicleParamsForPlayer(Car6, i, 0, 1);
     	SetVehicleParamsForPlayer(Car7, i, 0, 1);
     	SetVehicleParamsForPlayer(Car8, i, 0, 1);
     	SetVehicleParamsForPlayer(Car9, i, 0, 1);
     	SetVehicleParamsForPlayer(Car10, i, 0, 1);
     	SetVehicleParamsForPlayer(Car11, i, 0, 1);
 	}
}
