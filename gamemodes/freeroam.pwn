//******************************************************************************
//                                  ArenaPower FreeRoam
//                                      Criado Por:
//
//                                         [AP]BcO
//                                          
//                                      Proibida a Utilização sem ORDEM!!!!
//******************************************************************************
#include <a_samp>
#pragma tabsize 0
//******************************************************************************
main()
{
print("\n----------------------------------");
print(" FreeRoam,\n");
print("         Criado por:");
print("              [AP]BcO");
print("----------------------------------\n");
}
//*******************************[  Cores ]*************************************
#define COLOR_BLACK                                                   0x000000AA
#define Cinza 														  0xAFAFAFAA
#define Verde 											    		  0x33AA33AA
#define Vermelho													  0xfAA3333AA
#define Lilas														  0x9999FFAA
#define Amarelo														  0xFFFF00AA
#define Branco             											  0xFFFFFFAA
#define Azul 														  0x0000BBAA
#define AzulClaro 													  0x33CCFFAA
#define Laranja 													  0xFF9900AA
#define VerdeClaro 													  0x00FF00AA
#define COLOR_INVISIVEL                                               0xFFFFFF00
#define COLOR_GREENYELLOW                                             0xADFF2FAA
#define COLOR_SYSTEM 												  0xEFEFF7AA
#define COLOR_GREEN_MC 												  0xADFF2FAA
#define Verde2       												  0x9ACD32AA
#define COLOR_COP 													  0x3C26C7AA
#define Bisque														  0xFFE4C4AA
#define Coral														  0xFF7F50AA
#define Tomato														  0xFF6347AA
#define LaranjaVermelho 											  0xFF4500AA
#define Gold														  0xB8860BAA
#define RosaEscuro                                                    0xFF66FFAA
#define Limao														  0xDDDD2357
#define Violeta		 												  0x9955DEEE
#define AmareloClaro	 											  0xFFFFCCAA
#define COLOR_WHITE								    				  0xFFFFFFAA
#define AVISO                                                         0x7E55AFFF
#define CG 															  0xB8860BAA
//*******************************[  Defines ]***********************************
#define PING_MAX_PING 3000
#define PING_PROTECTION 0
#define PING_MAX_EXCEEDS 2 // Número máximo de exedências até a punição
#define PING_TIMELIMIT  60 // Intervalo entre cada Exedência
#define Driver 0
#define Passanger 2
//*******************************[  ForWards ]**********************************
forward Timer();
forward Contagem();
forward PingProtection();
forward Anuncio1(playerid);
forward Anuncio2(playerid);
forward Anuncio3(playerid);
forward GameModeExitFunc();
forward DeletePickup(pickupid);
forward GetWeaponModel(weaponid);
forward DropPlayerWeapons(playerid);
forward SetupPlayerForClassSelection(playerid);
forward SetPlayerPosWithObjects(playerid,Float:x,Float:y,Float:z);
//*******************************[  Variaveis ]**********************************
enum object_info
{
modelid,
Float:ox,
Float:oy,
Float:oz,
Float:orx,
Float:ory,
Float:orz,
Float:viewdist
}
new Objects[][object_info] = {
// --- Corrimaos e mini rampas --
{18446, -376.2066, 1849.3035, 52.5603, 0.0000, 356.5623, 122.8133, 500.0},
{18446, -301.5548, 1719.7958, 42.6405, 0.0000, 359.1406, 18.2028, 500.0},
{1503, -339.4527, 1716.1427, 41.2101, 0.0000, 0.8594, 185.1567, 500.0},
{9833, -367.7582, 1835.9380, 47.0997, 0.0000, 0.0000, 0.0000, 500.0},
{16776, -339.5516, 1934.4397, 84.5537, 0.0000, 0.0000, 11.2500, 500.0},
{7916, -340.9194, 1925.5503, 74.4957, 0.0000, 0.0000, 0.0000, 500.0},
{1222, -321.1740, 1794.7004, 42.2573, 0.0000, 0.0000, 0.0000, 500.0},
{1222, -274.7842, 1826.5715, 57.3366, 0.0000, 0.0000, 0.0000, 500.0},
{16782, -299.3365, 1906.6514, 45.1008, 0.0000, 0.0000, 270.0000, 500.0},
{9833, -310.5810, 1792.3481, 49.7593, 0.0000, 0.0000, 348.7500, 500.0},
{1222, -9.9458, 1514.5343, 11.7261, 0.0000, 0.0000, 0.0000, 500.0},
// ---- RAMPA2
{18450, 650.3561, 2351.2131, 115.0401, 0.0000, 336.7952, 0.0000, 500.0},
{18450, 722.6453, 2351.2109, 147.9640, 0.0000, 334.2169, 0.0000, 500.0},
{18450, 792.2647, 2351.2532, 183.6217, 0.0000, 331.6386, 0.0000, 500.0},
{18450, 860.1478, 2351.2300, 220.9834, 0.0000, 330.7792, 0.0000, 500.0},
{18450, 928.3281, 2351.2314, 259.8107, 0.0000, 329.9197, 0.0000, 500.0},
{18450, 994.3156, 2351.3127, 298.6822, 0.0000, 329.0603, 0.0000, 500.0},
{18450, 1060.8794, 2351.3555, 339.9717, 0.0000, 327.3414, 0.0000, 500.0},
{18450, 1128.0138, 2351.3330, 382.3793, 0.0000, 328.2008, 0.0000, 500.0},
{8040, 1201.6073, 2351.0291, 404.5607, 0.0000, 0.0000, 180.0000, 500.0},
{1634, 612.5755, 2356.7410, 101.5867, 0.0000, 0.0000, 90.0000, 500.0},
{1634, 612.5168, 2353.1802, 101.5435, 0.0000, 0.0000, 90.0000, 500.0},
{1634, 612.6012, 2349.3071, 101.5048, 0.0000, 0.0000, 90.0000, 500.0},
{1634, 607.3231, 2356.6792, 105.4459, 23.2048, 1.7189, 90.8594, 500.0},
{1634, 607.1653, 2352.5720, 105.5585, 20.6265, 0.0000, 90.0000, 500.0},
{1634, 607.0084, 2348.9609, 105.4588, 23.2048, 0.0000, 90.0000, 500.0},
{1634, 613.5955, 2345.1875, 101.0862, 0.0000, 0.0000, 90.0000, 500.0},
{1634, 607.0499, 2345.2546, 105.2809, 24.0642, 0.0000, 90.0000, 500.0},
// ---- EXPLOSIVOS NO M4 --
{1217, -1344.8035, 336.1930, 29.5073, 0.0000, 0.0000, 0.0000, 500.0},
{1217, -1343.9518, 445.9313, 29.5073, 0.0000, 0.0000, 0.0000, 500.0},
{1217, -1485.9570, 445.9776, 29.5034, 0.0000, 0.0000, 0.0000, 500.0},
{1217, -1424.1051, 446.0296, 29.5034, 0.0000, 0.0000, 0.0000, 500.0},
{1217, -1343.9478, 365.7853, 29.5073, 0.0000, 0.0000, 0.0000, 500.0},
{1217, -1407.6920, 335.9612, 29.5034, 0.0000, 0.0000, 0.0000, 500.0},
{1217, -1473.4739, 335.8089, 29.5073, 0.0000, 0.0000, 0.0000, 500.0},
{1217, -1485.7692, 390.4460, 29.5073, 0.0000, 0.0000, 0.0000, 500.0},
//-=--------------STUNT
{8355, -1397.3160, -20.2520, 35.7690, -19.7670, 0.0000, 45.0000, 500.0},
{8355, -1348.9750, -91.3370, 59.1170, 0.0000, 0.0000, -45.0000, 500.0},
{8355, -1324.2710, -116.5090, 59.1140, 0.0000, 0.0000, -45.0000, 500.0},
{8355, -1298.3050, -141.8790, 59.0030, 0.0000, 0.0000, -45.0000, 500.0},
{8355, -1243.1110, -177.4310, 75.8350, -20.6260, 0.0000, 45.0000, 500.0},
{8355, -1178.1440, -231.8330, 100.1700, 0.0000, 0.0000, -45.0000, 500.0},
{8355, -1154.5210, -255.4770, 100.0610, 0.0000, 0.0000, -45.0000, 500.0},
{8355, -1129.8100, -280.9180, 99.9440, 0.0000, 0.0000, -45.0000, 500.0},
{8355, -1098.7550, -192.6970, 99.9630, 0.0000, 0.0000, 45.0000, 500.0},
{8355, -1074.3440, -168.8220, 99.9500, 0.0000, 0.0000, 45.0000, 500.0},
{8355, -1198.2870, -322.4950, 100.0360, 0.0000, 0.0000, 45.0000, 500.0},
{8355, -1100.6990, -307.1930, 100.0210, 0.0000, 0.0000, -45.0000, 500.0},
{8355, -987.4470, -255.8120, 123.9130, 23.2050, 0.0000, -135.0000, 500.0},
{8355, -937.6770, -322.9540, 150.8650, 0.0000, 0.0000, -45.0000, 500.0},
{8355, -912.1580, -348.1460, 150.9400, 0.0000, 0.0000, -45.0000, 500.0},
{8355, -887.8300, -373.1630, 150.9260, 0.0000, 0.0000, -45.0000, 500.0},
{3524, -1252.3630, -123.8660, 38.3820, 0.0000, 0.0000, 45.0000, 500.0},
{2780, -1180.9900, -208.6390, 100.1700, 0.0000, 0.0000, 22.5000, 500.0},
{2780, -1211.5750, -238.8870, 100.1700, 0.0000, 0.0000, 0.0000, 500.0},
{2780, -927.4090, -285.6450, 150.8650, 0.0000, 0.0000, 0.0000, 500.0},
{2780, -957.6670, -316.3060, 150.8650, 0.0000, 0.0000, 0.0000, 500.0},
{2780, -1365.1560, -81.6000, 59.1170, 0.0000, 0.0000, 0.0000, 500.0},
{2780, -1335.4710, -51.9500, 59.1170, 0.0000, 0.0000, 0.0000, 500.0},
{1682, -1401.3870, -125.7610, 65.5710, 0.0000, 0.0000, -101.2500, 500.0},
{1634, -1331.6670, -116.5150, 60.4110, 0.0000, 0.0000, -45.0000, 500.0},
{1634, -1327.2290, -111.9650, 60.4110, 0.0000, 0.0000, -225.0000, 500.0},
{7979, -1313.6050, -39.8140, 63.7540, 12.8920, 0.0000, 0.0000, 500.0},
{13604, -1301.1330, -111.1740, 60.8220, 0.0000, 0.0000, -45.0000, 500.0},
{3521, -1332.6320, -198.0790, 60.5560, 0.0000, 0.0000, 0.0000, 500.0},
{13641, -1321.2080, -165.0220, 60.7220, 0.0000, 0.0000, 45.0000, 500.0},
{13641, -1332.4200, -141.0210, 60.8330, 0.0000, 0.0000, 45.0000, 500.0},
{13592, -1355.6570, -110.3760, 70.6880, 0.0000, -22.3450, 45.0000, 500.0},
{13666, -1286.6640, -129.7690, 64.7830, 22.3450, -0.8590, -45.0000, 500.0},
{3819, -1357.7120, -153.7230, 60.1120, 0.0000, -311.9750, -45.0000, 500.0},
{10810, -1112.0590, -122.2680, 104.9480, 0.0000, 0.0000, 33.7500, 500.0},
{1634, -1271.7200, -97.8780, 60.3000, 0.0000, 0.0000, 45.0000, 500.0},
{1503, -1163.1120, -242.1610, 100.5640, 0.0000, 0.0000, -45.0000, 500.0},
{1503, -1160.7820, -239.9170, 100.5640, 0.0000, 0.0000, -225.0000, 500.0},
{16360, -1252.7540, -289.2780, 100.2340, 0.0000, 0.0000, -45.0000, 500.0},
{1655, -1168.3720, -285.7230, 101.3610, 0.0000, 0.0000, -45.0000, 500.0},
{1655, -1163.6040, -281.3460, 101.3610, 0.0000, 0.0000, -225.0000, 500.0},
{14826, -1169.1760, -261.0130, 100.8250, 0.0000, 0.0000, 0.0000, 500.0},
{987, -1297.5500, -168.3640, 59.0030, 0.0000, 0.0000, 45.0000, 500.0},
{987, -1252.0800, -123.4440, 59.0030, 0.0000, 0.0000, -135.0000, 500.0},
{987, -1175.4410, -200.9690, 100.1700, 0.0000, 0.0000, -135.0000, 500.0},
{987, -1219.4790, -246.1600, 100.1700, 0.0000, 0.0000, -315.0000, 500.0},
{987, -1048.8450, -239.2660, 99.9630, 0.0000, 0.0000, 45.0000, 500.0},
{987, -919.9050, -277.5810, 150.8650, 0.0000, 0.0000, -135.0000, 500.0},
{987, -964.3080, -323.8110, 150.8650, 0.0000, 0.0000, 45.0000, 500.0},
{13592, -1104.8580, -280.9020, 111.5140, 0.8590, 19.7670, 45.0000, 500.0},
{13592, -1101.9690, -288.2950, 111.5920, 0.8590, 19.7670, 45.0000, 500.0},
{13592, -1096.4340, -294.0590, 111.5920, 0.8590, 19.7670, 45.0000, 500.0},
{8550, -1162.6140, -367.6420, 104.2840, 0.0000, 0.0000, 90.0000, 500.0},
{13645, -1154.6970, -327.2600, 100.6860, 0.0000, 0.0000, 45.0000, 500.0},
{13645, -1157.5160, -324.5880, 100.6860, 0.0000, 0.0000, -135.0000, 500.0},
{13831, -1096.0360, -330.3230, 108.5630, 0.0000, 0.0000, -135.0000, 500.0},
{7415, -1183.1730, -215.4220, 110.0130, 0.0000, 0.0000, -11.2500, 500.0},
{1349, -1246.4970, -293.2650, 100.6060, 0.0000, 0.0000, -22.5000, 500.0},
{3425, -1217.3940, -270.4280, 111.6130, 0.0000, 0.0000, 0.0000, 500.0},
{3363, -1133.3840, -230.4140, 100.0960, 0.0000, 0.0000, 0.0000, 500.0},
{1633, -1123.7690, -256.1330, 101.2440, 0.0000, 0.0000, -45.0000, 500.0},
{1633, -1119.2770, -251.5480, 101.2440, 0.0000, 0.0000, -225.0000, 500.0},
{1696, -1143.8860, -218.8000, 101.1770, 0.0000, 0.0000, -45.0000, 500.0},
{1696, -1140.0540, -215.8490, 101.1770, 0.0000, 0.0000, -225.0000, 500.0},
{7979, -1149.1520, -157.2740, 104.6000, 12.8920, 0.0000, 67.5000, 500.0},
{3625, -1098.5870, -178.2020, 102.7980, 0.0000, 0.0000, -45.0000, 500.0},
{13645, -1116.9110, -203.0090, 100.8040, 0.0000, 0.0000, -135.0000, 500.0},
{13645, -1114.1390, -205.6650, 100.8040, 0.0000, 0.0000, -315.0000, 500.0},
{16367, -1077.6850, -222.9230, 101.7220, 0.0000, 0.0000, 45.0000, 500.0},
{18262, -1166.5960, -193.0110, 101.0480, -2.5780, 0.0000, -101.2500, 500.0},
{18262, -1171.4930, -192.3210, 101.5410, -0.8590, 0.0000, -101.2500, 500.0},
{18262, -1176.3830, -191.5360, 101.8830, -0.8590, 0.0000, -101.2500, 500.0},
{18262, -1181.2700, -190.6350, 102.2230, -0.8590, 0.0000, -101.2500, 500.0},
{18262, -1186.2010, -189.8640, 102.5560, -0.8590, 0.0000, -101.2500, 500.0},
{18262, -1191.1520, -188.9940, 102.8830, -0.8590, 0.0000, -101.2500, 500.0},
{18262, -1196.1420, -188.1330, 103.2020, -0.8590, 0.0000, -101.2500, 500.0},
{1655, -1143.0900, -295.1530, 101.2440, 0.0000, 0.0000, -45.0000, 500.0},
{1655, -1138.4910, -290.7180, 101.2440, 0.0000, 0.0000, -225.0000, 500.0},
{7980, -1062.4750, -177.8550, 101.9370, 0.0000, 0.0000, -45.0000, 500.0},
{16401, -1161.3450, -217.0700, 100.1640, 0.0000, 0.0000, -146.2500, 500.0},
{16401, -1167.5270, -222.0690, 100.1640, 0.0000, 0.0000, -315.0000, 500.0},
{13592, -1185.7250, -254.6290, 111.7400, 0.0000, 11.1730, 56.2500, 500.0},
{13592, -1207.6350, -305.0750, 111.6060, -0.8590, -36.9560, -33.7500, 500.0},
{13592, -916.1700, -332.4520, 162.5100, 0.8590, 19.7670, 45.0000, 500.0},
{6962, -840.4110, -338.8380, 157.6820, 0.0000, 0.0000, 0.0000, 500.0},
{1634, -900.1140, -353.0780, 152.2370, 0.0000, 0.0000, -225.0000, 500.0},
{1634, -904.6010, -357.6770, 152.2370, 0.0000, 0.0000, -405.0000, 500.0},
{7979, -982.9450, -340.2030, 155.5020, 11.1730, 0.0000, 45.0000, 500.0},
{1696, -939.9670, -373.6180, 151.9470, 0.0000, 0.0000, -135.0000, 500.0},
{1696, -936.9650, -377.3680, 151.9470, 0.0000, 0.0000, -315.0000, 500.0},
{10757, -919.1690, -333.0440, 175.9310, 0.0000, 0.0000, 0.0000, 500.0},
{1245, -944.5920, -330.0730, 152.3530, 0.0000, 0.0000, -135.0000, 500.0},
{1245, -942.5750, -325.4960, 152.3530, 0.0000, 0.0000, -315.0000, 500.0},
{1634, -870.6910, -313.4480, 152.2370, 0.0000, 0.0000, -45.0000, 500.0},
{1634, -873.5250, -310.6240, 152.2370, 0.0000, 0.0000, -45.0000, 500.0},
{1634, -876.2780, -307.8630, 152.2370, 0.0000, 0.0000, -45.0000, 500.0},
{1634, -868.3130, -311.2840, 156.1600, 32.6590, 0.8590, -45.8590, 500.0},
{1634, -871.2090, -308.3910, 156.1640, 32.6590, 0.8590, -45.8590, 500.0},
{1634, -873.7390, -305.8770, 156.1530, 32.6590, 0.8590, -45.8590, 500.0},
{1634, -867.0180, -309.7770, 160.3210, 42.9720, 0.8590, -45.8590, 500.0},
{1634, -870.0690, -306.7850, 160.3930, 42.9720, 0.8590, -45.8590, 500.0},
{1634, -872.8680, -304.0750, 160.4690, 42.9720, 0.8590, -45.8590, 500.0},
{7617, -902.2760, -268.8710, 162.8030, 0.0000, 0.0000, 0.0000, 500.0},
{13592, -889.7790, -384.2130, 162.4960, 0.0000, -28.3610, 56.2500, 500.0},
{5814, -948.3710, -403.7230, 154.6890, 0.0000, 0.0000, -225.0000, 500.0},
{3819, -899.7720, -410.0460, 151.9240, 0.0000, 0.0000, -45.0000, 500.0},
{3819, -906.5270, -416.7400, 151.9240, 0.0000, 0.0000, -45.0000, 500.0},
{3819, -913.2380, -423.5500, 151.9240, 0.0000, 0.0000, -45.0000, 500.0},
{3819, -893.0190, -403.1310, 151.9240, 0.0000, 0.0000, -45.0000, 500.0},
{1696, -978.1890, -376.9250, 151.8720, 0.0000, 0.0000, 135.0000, 500.0},
{1696, -974.2820, -380.8590, 151.8720, 0.0000, 0.0000, 135.0000, 500.0},
{1696, -970.6230, -384.6180, 151.9470, 0.0000, 0.0000, 135.0000, 500.0},
{2931, -921.4930, -355.6510, 150.9730, 0.0000, 0.0000, -225.0000, 500.0},
{2931, -919.9800, -357.1580, 150.9730, 0.0000, 0.0000, -225.0000, 500.0},
{2931, -920.7250, -356.4560, 150.9730, 0.0000, 0.0000, -225.0000, 500.0},
{1682, -850.9000, -321.0290, 157.3800, 0.0000, 0.0000, 135.0000, 500.0},
{1634, -917.8520, -299.7080, 152.1620, 0.0000, 0.0000, 135.0000, 500.0},
{1634, -922.4770, -304.1910, 152.1620, 0.0000, 0.0000, -45.0000, 500.0},
{1655, -955.4320, -377.2050, 152.2400, 0.0000, 0.0000, -135.0000, 500.0},
{1655, -950.9900, -381.9000, 152.2400, 0.0000, 0.0000, -315.0000, 500.0},
{1697, -900.0350, -367.4390, 152.5280, -10.3130, 0.0000, -45.0000, 500.0},
{1697, -902.7280, -370.1810, 152.5280, -10.3130, 0.0000, -225.0000, 500.0},
{3663, -880.9950, -335.9630, 153.0210, 0.0000, 0.0000, -45.0000, 500.0},
{3663, -884.9670, -331.9530, 153.0210, 0.0000, 0.0000, -225.0000, 500.0},
{8302, -919.8470, -371.7820, 152.9400, 0.0000, 0.0000, 56.2500, 500.0},
{8302, -927.3600, -363.3220, 152.9400, 0.0000, 0.0000, -123.7500, 500.0},
{1632, -1050.4480, -220.2920, 101.2630, 0.0000, 0.0000, 78.7500, 500.0},
{8131, -1045.6450, -272.8210, 110.7150, 0.0000, 0.0000, 0.0000, 500.0},
{1633, -1364.9420, -135.3920, 60.4170, 0.0000, 0.0000, -90.0000, 500.0},
{3663, -1325.8510, -84.2550, 61.1980, 0.0000, 0.0000, 11.2500, 500.0},
{987, -847.1650, -358.6730, 150.9260, 0.0000, 0.0000, -135.0000, 500.0},
{987, -855.6430, -367.0660, 150.9260, 0.0000, 0.0000, -135.0000, 500.0},
{987, -872.5400, -383.8230, 150.9260, 0.0000, 0.0000, -315.0000, 500.0},
{1655, -1329.6740, -69.2550, 60.4170, 0.0000, 0.0000, -101.2500, 500.0},
{1696, -1289.2180, -68.6650, 60.1210, 0.0000, 0.0000, -135.0000, 500.0},
{987, -1413.5610, 24.2830, 13.1480, 0.0000, 0.0000, -225.0000, 500.0},
{987, -1419.8430, 4.1930, 13.1480, 0.0000, 0.0000, -315.0000, 500.0},
{987, -1411.1370, 12.6010, 13.1480, 0.0000, 0.0000, -258.7500, 500.0},
{987, -1428.3810, -4.2460, 13.1480, 0.0000, 0.0000, -315.0000, 500.0},
{987, -1439.9430, -6.2370, 13.1480, 0.0000, 0.0000, -348.7500, 500.0},
{987, -1448.7500, 2.2830, 13.2240, 0.0000, 0.0000, -405.0000, 500.0}
};
enum player_info
{
objid[sizeof(Objects)],
bool:view[sizeof(Objects)]
}
new Player[MAX_PLAYERS][player_info];
bool:IsInReach(Float:x,Float:y,Float:z,Float:x2,Float:y2,Float:z2,Float:dist)
{
x = (x > x2) ? x - x2 : x2 - x;
if(x > dist) return false;
y = (y > y2) ? y - y2 : y2 - y;
if(y > dist) return false;
z = (z > z2) ? z - z2 : z2 - z;
if(z > dist) return false;
return true;
}
new Veiculos[][] ={
"Landstalker","Bravura","Buffalo","Linerunner","Pereniel","Sentinel","Dumper","Firetruck","Trashmaster",
"Stretch","Manana","Infernus","Voodoo","Pony","Mule","Cheath","Ambulance","Leviathan","Moonbeam","Esperanto",
"Taxi","Washington","Bobcat","Mr Whoopee","BF Injection","Hunter","Premier","Enforcer","Securicar","Banshee",
"Predator","Bus","Rhino","Barracks","Hotknife","Trailer","Previon","Coach","Cabbie","Stallion","Rumpo",
"RC Bandit","Romero","Packer","Monster","Admiral","Squalo","Seasparrow","Pizzaboy","Tram","Trailer",
"Turismo","Speeder","Reefer","Tropic","Flatbed","Yankee","Caddy","Solair","Berkley's RC Van","Skimmer",
"PCJ-600","Faggio","Freeway","RC Baron","RC Raider","Glendale","Oceanic","Sanchez","Sparrow","Patriot",
"Quad","Coastguard","Dinghy","Hermes","Sabre","Rustler","ZR3 50","Walton","Regina","Comet","BMX",
"Burrito","Camper","Marquis","Baggage","Dozer","Maverick","News Chopper","Rancher","FBI Rancher","Virgo",
"Greenwood","Jetmax","Hotring","Sandking","Blista Compact","Police Maverick","Boxville","Benson","Mesa",
"RC Goblin","Hotring Racer (A)","Hotring Racer (B)","Bloodring Banger","Rancher","Super GT","Elegant",
"Journey","Bike","Mountain Bike","Beagle","Cropdust","Stunt","Tanker","RoadTrain","Nebula","Majestic",
"Buccaneer","Shamal","Hydra","FCR-900","NRG-500","HPV1000","Cement Truck","Tow Truck","Fortune","Cadrona",
"FBI Truck","Willard","Forklift","Tractor","Combine","Feltzer","Remington","Slamvan","Blade","Freight",
"Streak","Vortex","Vincent","Bullet","Clover","Sadler","Firetruck","Hustler","Intruder","Primo","Cargobob",
"Tampa","Sunrise","Merit","Utility","Nevada","Yosemite","Windsor","Monster (A)","Monster (B)","Uranus",
"Jester","Sultan","Stratum","Elegy","Raindance","RC Tiger","Flash","Tahoma","Savanna","Bandito","Freight",
"Trailer","Kart","Mower","Duneride","Sweeper","Broadway","Tornado","AT-400","DFT-30","Huntley","Stafford",
"BF-400","Newsvan","Tug","Trailer A","Emperor","Wayfarer","Euros","Hotdog","Club","Trailer B","Trailer (C)",
"Andromada","Dodo","RC Cam","Launch","Carro Policial (LS)","Carro Policial (SF)","Carro Policial (LV)","Ranger Policial",
"Picador","S.W.A.T. Van","Alpha","Phoenix","Glendale","Sadler","Luggage Trailer (A)","Luggage Trailer (B)",
"Stair Trailer","Boxville","Farm Plow","Utility Trailer" };
new CORES[100] = {
0xFF8C1300,0xC715FF00,0x20B2AA00,0xDC143C00,0x6495ED00,0xf0e68c00,0x77889900,0xFF149300,0xF4A46000,0xEE82EE00,0xFFD72000,
0x8b451300,0x4949A000,0x148b8b00,0x14ff7f00,0x556b2f00,0x0FD9FA00,0x10DC2900,0x53408100,0x0495CD00,0xEF6CE800,0xBD34DA00,
0x247C1B00,0x0C8E5D00,0x635B0300,0xCB7ED300,0x65ADEB00,0x5C1ACC00,0xF2F85300,0x11F89100,0x7B39AA00,0x53EB1000,0x54137D00,
0x27522200,0xF09F5B00,0x3D0A4F00,0x22F76700,0xD6303400,0x9A698000,0xDFB93500,0x3793FA00,0x90239D00,0xE9AB2F00,0xAF2FF300,
0x057F9400,0xB9851900,0x388EEA00,0x02815100,0xA5504300,0x0DE01800,0x93AB1C00,0x95BAF000,0x36997600,0x18F71F00,0x4B898700,
0x491B9E00,0x829DC700,0xBCE63500,0xCEA6DF00,0x20D4AD00,0x2D74FD00,0x3C1C0D00,0x12D6D400,0x48C00000,0x2A51E200,0xE3AC1200,
0xFC42A800,0x2FC82700,0x1A30BF00,0xB740C200,0x42ACF500,0x2FD9DE00,0xFAFB7100,0x05D1CD00,0xC471BD00,0x94436E00,0xC1F7EC00,
0xCE79EE00,0xBD1EF200,0x93B7E400,0x3214AA00,0x184D3B00,0xAE4B9900,0x7E49D700,0x4C436E00,0xFA24CC00,0xCE76BE00,0xA04E0A00,
0x9F945C00,0xDCDE3D00,0x10C9C500,0x70524D00,0x0BE47200,0x8A2CD700,0x6152C200,0xCF72A90
};
new Contar = 5;
new ContarTexto[5][5] ={
"~p~1",
"~p~2",
"~b~3",
"~r~4",
"~g~5"
};
new moneys;
new DropLimit=6;
new Menu:carros;
new DeleteTime=20;
new InDM1[MAX_PLAYERS];
new InDM2[MAX_PLAYERS];
new InDM3[MAX_PLAYERS];
new InDM4[MAX_PLAYERS];
new InDM5[MAX_PLAYERS];
new iSpawnSet[MAX_PLAYERS];
new status[MAX_PLAYERS][3];
new gPingCount[MAX_PLAYERS][2];
//*******************************[  OnGameModeInit ]****************************
public OnGameModeInit()
{
    UsePlayerPedAnims();
    AllowInteriorWeapons(true);
    SetGameModeText("BRASIL ~ FreeRoam");
    
  	SetTimer("Timer",500,1);
	SetTimer("Anuncio1",120000,true);
	SetTimer("Anuncio2",180000,true);
	SetTimer("Anuncio3",300000,true);

	AddPlayerClass(212,1958.3783,1343.1572,15.3746,270.1425,0,0,0,0,0,0);
	AddPlayerClass(67,1958.3783,1343.1572,15.3746,270.1425,0,0,0,0,0,0);
	AddPlayerClass(100,1958.3783,1343.1572,15.3746,270.1425,0,0,0,0,0,0);
	AddPlayerClass(78,1958.3783,1343.1572,15.3746,270.1425,0,0,0,0,0,0);
	AddPlayerClass(45,1958.3783,1343.1572,15.3746,270.1425,0,0,0,0,0,0);
	AddPlayerClass(33,1958.3783,1343.1572,15.3746,270.1425,0,0,0,0,0,0);
	AddPlayerClass(15,1958.3783,1343.1572,15.3746,270.1425,0,0,0,0,0,0);
	AddPlayerClass(108,1958.3783,1343.1572,15.3746,270.1425,0,0,0,0,0,0);
	AddPlayerClass(34,1958.3783,1343.1572,15.3746,270.1425,0,0,0,0,0,0);
	AddPlayerClass(181,1958.3783,1343.1572,15.3746,270.1425,0,0,0,0,0,0);
	AddPlayerClass(134,1958.3783,1343.1572,15.3746,270.1425,0,0,0,0,0,0);
	AddPlayerClass(206,1958.3783,1343.1572,15.3746,270.1425,0,0,0,0,0,0);
	AddPlayerClass(0,1958.3783,1343.1572,15.3746,270.1425,0,0,0,0,0,0);
	AddPlayerClass(22,1958.3783,1343.1572,15.3746,270.1425,0,0,0,0,0,0);
	AddPlayerClass(184,1958.3783,1343.1572,15.3746,270.1425,0,0,0,0,0,0);
	AddPlayerClass(26,1958.3783,1343.1572,15.3746,270.1425,0,0,0,0,0,0);
	AddPlayerClass(60,1958.3783,1343.1572,15.3746,270.1425,0,0,0,0,0,0);
	AddPlayerClass(133,1958.3783,1343.1572,15.3746,270.1425,0,0,0,0,0,0);
	AddPlayerClass(44,1958.3783,1343.1572,15.3746,270.1425,0,0,0,0,0,0);
	AddPlayerClass(14,1958.3783,1343.1572,15.3746,270.1425,0,0,0,0,0,0);
	AddPlayerClass(217,1958.3783,1343.1572,15.3746,270.1425,0,0,0,0,0,0);
	AddPlayerClass(179,1958.3783,1343.1572,15.3746,270.1425,0,0,0,0,0,0);
	AddPlayerClass(241,1958.3783,1343.1572,15.3746,270.1425,0,0,0,0,0,0);
	AddPlayerClass(159,1958.3783,1343.1572,15.3746,270.1425,0,0,0,0,0,0);
	AddPlayerClass(248,1958.3783,1343.1572,15.3746,270.1425,0,0,0,0,0,0);
	AddPlayerClass(213,1958.3783,1343.1572,15.3746,270.1425,0,0,0,0,0,0);
    AddPlayerClass(101,1958.3783,1343.1572,15.3746,270.1425,0,0,0,0,0,0);
    AddPlayerClass(144,1958.3783,1343.1572,15.3746,270.1425,0,0,0,0,0,0);
    AddPlayerClass(127,1958.3783,1343.1572,15.3746,270.1425,0,0,0,0,0,0);
    AddPlayerClass(188,1958.3783,1343.1572,15.3746,270.1425,0,0,0,0,0,0);
    AddPlayerClass(183,1958.3783,1343.1572,15.3746,270.1425,0,0,0,0,0,0);
    AddPlayerClass(97,1958.3783,1343.1572,15.3746,270.1425,0,0,0,0,0,0);
    AddPlayerClass(30,1958.3783,1343.1572,15.3746,270.1425,0,0,0,0,0,0);
    AddPlayerClass(21,1958.3783,1343.1572,15.3746,270.1425,0,0,0,0,0,0);
    AddPlayerClass(73,1958.3783,1343.1572,15.3746,270.1425,0,0,0,0,0,0);


	//trilha
    AddStaticVehicle(468,-2456.4170,-1930.1337,301.7858,32.9209,6,6);
	AddStaticVehicle(468,-2457.1672,-1930.6891,301.6739,33.2141,46,46);
	AddStaticVehicle(468,-2457.8625,-1931.0532,301.7043,42.2458,53,53);
	AddStaticVehicle(468,-2458.5320,-1931.5565,301.7769,41.5913,3,3);
	
	//PULO
	CreateObject(8356,-2204.444,-2288.397,83.053,24.924,0.0,11.250);
	CreateObject(8356,-2228.012,-2168.261,150.049,30.940,0.0,11.250);
	CreateObject(8356,-2253.440,-2038.829,243.149,38.675,0.0,11.250);
	CreateObject(8356,-2280.946,-1907.911,369.880,48.128,0.0,11.250);
	CreateObject(8356,-2306.669,-1778.500,496.937,39.534,0.0,11.250);
	CreateObject(8356,-2339.016,-1616.133,556.376,0.0,0.0,11.250);
	CreateObject(1655,-2172.693,-2368.319,46.364,-8.594,0.0,-168.750);
	CreateObject(1655,-2181.939,-2370.226,46.291,-7.735,0.0,191.250);
	CreateObject(1655,-2191.381,-2372.412,30.769,-12.892,-0.859,-167.891);
	CreateObject(1655,-2191.217,-2372.498,46.286,-5.157,0.0,-168.750);
	CreateObject(1655,-2201.223,-2374.537,46.629,0.0,0.0,191.250);
	CreateObject(1655,-2171.228,-2375.249,48.627,0.0,0.0,-168.750);
	CreateObject(1655,-2180.173,-2377.503,48.740,0.0,0.0,-168.750);
	CreateObject(1655,-2189.646,-2379.984,48.986,0.0,0.0,-168.750);
	CreateObject(1655,-2199.616,-2381.435,49.424,1.719,0.0,-168.750);
	CreateObject(626,-2229.324,-1559.090,414.613,0.0,0.0,0.0);
	CreateObject(969,-2339.907,-1702.236,556.519,0.0,0.0,-78.750);
	CreateObject(969,-2339.970,-1702.486,556.519,0.0,0.0,101.250);
	CreateObject(969,-2341.767,-1694.012,556.519,0.0,0.0,101.250);
	CreateObject(969,-2343.525,-1685.283,556.519,0.0,0.0,0.0);
	CreateObject(969,-2334.851,-1685.312,556.519,0.0,0.0,0.0);
	CreateObject(969,-2326.306,-1685.320,556.519,0.0,0.0,0.0);
	CreateObject(969,-2317.672,-1685.342,556.519,0.0,0.0,0.0);
	CreateObject(969,-2309.111,-1685.353,556.519,0.0,0.0,-78.750);
	CreateObject(969,-2307.368,-1693.467,556.519,0.0,0.0,-78.750);
	CreateObject(979,-2335.052,-1710.652,557.239,0.0,0.0,-78.750);
	CreateObject(979,-2306.537,-1704.698,557.192,0.0,0.0,-78.750);
	CreateObject(3187,-2329.724,-1675.240,560.405,0.0,0.0,-168.750);
	//PULO
	AddStaticVehicle(601,-2309.6946,-1700.8872,557.1152,191.0928,1,1);
	AddStaticVehicle(521,-2312.5034,-1702.1283,556.9239,189.7491,75,13);
	AddStaticVehicle(521,-2315.2903,-1702.6276,556.9277,182.0624,75,13);
	AddStaticVehicle(521,-2318.2021,-1703.5804,556.9246,180.2768,75,13);
	AddStaticVehicle(587,-2321.2710,-1704.6222,557.0762,190.1304,40,1);
	AddStaticVehicle(573,-2325.3152,-1704.0703,558.0090,190.5096,115,43);
	AddStaticVehicle(411,-2329.5957,-1705.5549,557.0875,190.6164,116,1);
	AddStaticVehicle(411,-2334.1731,-1705.8182,557.0875,192.2628,116,1);
	
	//ARENA51
	AddStaticVehicle(470,280.4831,1945.6182,17.6103,310.3380,43,0); // patriot
	AddStaticVehicle(470,272.2694,1949.4736,17.6188,285.7044,43,0); // patriot
	AddStaticVehicle(470,271.6126,1961.2548,17.6224,251.9976,43,0); // patriot
	AddStaticVehicle(470,279.8800,1966.2542,17.6325,228.8217,43,0); // patriot
	AddStaticVehicle(433,277.5985,1985.7559,18.1046,270.4075,43,0); // barracks
	AddStaticVehicle(433,277.3871,1994.8356,18.0437,267.7376,43,0); // barracks

		
//ESTACIONAMENTO
	AddStaticVehicle(522,-301.8493,1813.8120,41.8465,278.0212,10,6); // nrg-500
	AddStaticVehicle(522,-301.6418,1815.2018,41.8338,287.0701,6,25); // nrg-500
	AddStaticVehicle(522,-301.9349,1816.8424,41.8521,295.3846,7,79); // nrg-500
	AddStaticVehicle(522,-302.2619,1818.4196,41.8605,301.7498,8,82); // nrg-500
	AddStaticVehicle(427,-260.4785,1906.7444,42.4049,159.4988,0,1); // enforcer
	AddStaticVehicle(575,-256.1159,1906.2264,41.8901,154.1999,56,32); // broadway
	AddStaticVehicle(481,-254.1347,1867.5852,41.7801,220.8959,50,2); // bmx
	AddStaticVehicle(481,-253.5128,1868.1145,41.8029,220.8961,6,6); // bmx
	AddStaticVehicle(481,-253.1627,1868.9572,41.7638,220.8964,46,46); // bmx
	AddStaticVehicle(481,-252.8098,1869.7958,41.7821,220.8965,65,9); // bmx
	AddStaticVehicle(576,-273.4781,1849.3516,41.8980,171.1388,68,96); // tornado
	AddStaticVehicle(576,-276.5706,1850.0627,41.8979,173.0763,72,1); // tornado
	AddStaticVehicle(506,-316.3029,1857.6888,41.9937,75.2308,1,2); // super gt
	AddStaticVehicle(506,-317.4287,1854.7048,41.9936,70.2449,7,7); // super gt
	AddStaticVehicle(506,-318.4138,1851.8673,41.9934,69.5362,52,52); // super gt
	AddStaticVehicle(587,-325.1959,1847.5999,42.0168,33.6614,40,1); // euros
	AddStaticVehicle(587,-328.4852,1846.3176,42.0145,32.4032,43,1); // euros
	AddStaticVehicle(587,-331.3718,1845.0367,42.0130,21.2159,53,1); // euros
	AddStaticVehicle(411,-337.3811,1872.1172,42.0161,211.8031,64,1); // infernus
	AddStaticVehicle(411,-334.8247,1873.8511,42.0161,206.1833,123,1); // infernus
	AddStaticVehicle(411,-331.2803,1874.7874,42.0162,193.2083,116,1); // infernus
	AddStaticVehicle(494,-327.4932,1874.5023,42.1847,186.0573,10,6); // hotring racer
	AddStaticVehicle(494,-324.6225,1874.3909,42.1843,187.9623,42,30); // hotring racer
	AddStaticVehicle(477,-321.0966,1873.5505,42.0428,180.7211,94,1); // zr3 50
	AddStaticVehicle(573,-331.4124,1813.9008,42.9394,161.7670,115,43); // duneride
	AddStaticVehicle(573,-327.6490,1808.5736,42.9394,168.8999,85,6); // duneride
	AddStaticVehicle(455,-290.4312,1794.2190,43.3165,264.9102,84,58); // flatbed
	AddStaticVehicle(524,-291.5991,1790.2628,43.7846,263.5577,61,27); // cimento
	AddStaticVehicle(431,-297.4717,1767.6395,42.7927,88.1007,75,59); // busao
	AddStaticVehicle(408,-298.6082,1762.6853,43.2361,89.7431,26,26); // caminhao de lixo
	AddStaticVehicle(556,-364.3527,1784.1219,43.0891,68.1996,1,1); // monster
	AddStaticVehicle(556,-361.6286,1791.4441,43.0859,81.8020,1,1); // monster
	AddStaticVehicle(593,-352.1664,1800.2939,43.1709,337.9049,58,8); // dodo

	AddStaticVehicle(562,2304.3232,1415.6823,42.5244,268.4672,76,76); // drift
	AddStaticVehicle(562,2301.2385,1437.0498,42.5250,273.6037,3,3); // drift
	AddStaticVehicle(562,2301.3840,1433.4375,42.5247,271.4573,6,6); // drift
	AddStaticVehicle(562,2304.3533,1419.7201,42.5247,268.6721,7,7); // drift
	AddStaticVehicle(562,2301.7209,1430.0283,42.5246,270.6924,52,52); // drift
	AddStaticVehicle(562,-495.8357,1930.0790,86.9509,183.6176,76,76); // drift
	AddStaticVehicle(562,-493.5943,1930.3379,86.9073,183.9758,3,3); // drift
	AddStaticVehicle(562,-491.4279,1931.3801,86.8827,184.0055,6,6); // drift
	AddStaticVehicle(562,-489.2049,1932.2329,86.7542,183.9999,7,7); // drift
	AddStaticVehicle(562,-333.4904,1515.9745,75.0178,178.4131,98,1); // drift2
	AddStaticVehicle(562,-330.4666,1515.4231,75.0173,180.0312,98,1); // drift2
	AddStaticVehicle(562,-323.8591,1515.6016,75.0177,179.0490,98,1); // drift2
	AddStaticVehicle(562,-317.8442,1516.2560,75.0172,181.7642,98,1); // drift2
	AddStaticVehicle(562,-314.8909,1515.2000,75.0146,180.3290,98,1); // drift2
	AddStaticVehicle(562,-784.4850,-89.0798,65.4277,104.1579,7,7); // /drift4
	AddStaticVehicle(562,-783.8571,-91.2732,65.1122,104.3997,52,52); // /drift4
	AddStaticVehicle(562,-782.4390,-93.2455,64.8486,104.4197,76,76); // /drift4
	AddStaticVehicle(562,-781.0035,-95.2278,64.5688,104.4943,3,3); // /drift4
	AddStaticVehicle(562,-779.6011,-97.1044,64.5073,104.6896,6,6); // /drift4

	
	AddStaticVehicle(432,-31.7596,1556.7407,12.7560,241.6940,13,13); // tank
	AddStaticVehicle(432,-38.0681,1542.0760,12.7630,235.2287,13,13); // tank
	AddStaticVehicle(432,-51.4310,1536.4189,12.7629,217.2836,13,13); // tank
	AddStaticVehicle(432,-67.8114,1526.4618,12.7689,227.3019,13,13); // tank
	AddStaticVehicle(432,10.0227,1475.5453,12.7690,5.9745,13,13); // tank
	AddStaticVehicle(432,19.5860,1477.6178,12.7627,8.3840,13,13); // tank
	AddStaticVehicle(432,35.5303,1481.8325,12.7623,4.8344,13,13); // tank
	AddStaticVehicle(432,61.1056,1497.7000,12.7790,41.7249,13,13); // tank
	AddStaticVehicle(432,67.6199,1526.0005,12.7840,92.2389,13,13); // tank
	AddStaticVehicle(432,11.2233,1574.4220,12.7856,180.2811,13,13); // tank

	
	AddStaticVehicle(522,1183.9984,2335.7793,404.3368,189.5700,54,6); // rampa2
	AddStaticVehicle(522,1180.2050,2335.6208,404.3433,180.2476,54,6); // rampa2
	AddStaticVehicle(522,1177.6451,2335.9246,404.3675,182.7941,54,6); // rampa2
	AddStaticVehicle(522,1174.3293,2335.6401,404.3513,176.6963,54,6); // rampa2
	AddStaticVehicle(522,1171.2562,2336.2009,404.3678,178.9382,54,6); // rampa2
	AddStaticVehicle(402,1170.8695,2365.7659,404.6268,0.3408,15,9); // rampa2
	AddStaticVehicle(402,1174.0040,2366.1401,404.6267,0.0656,15,9); // rampa2
	AddStaticVehicle(402,1177.2529,2365.6880,404.6268,359.1837,15,9); // rampa2
	AddStaticVehicle(402,1180.4000,2365.6787,404.6266,358.6140,15,9); // rampa2
	AddStaticVehicle(402,1183.7972,2365.9526,404.6268,1.0243,15,9); // rampa2
	AddStaticVehicle(506,1238.2749,2347.6248,404.4992,271.2656,76,76); // rampa2
	AddStaticVehicle(506,1238.1013,2344.8018,404.4994,270.0419,76,76); // rampa2
	AddStaticVehicle(506,1238.3925,2341.7839,404.4994,268.6042,76,76); // rampa2

	//8TRACK
	new vehicle27 = AddStaticVehicle(434,-1401.7554,-203.1568,1051.3317,177.2248,0,0);
	new vehicle28 = AddStaticVehicle(434,-1397.8793,-205.7000,1051.2802,175.7124,0,0);
	new vehicle29 = AddStaticVehicle(434,-1394.2997,-207.3734,1051.2518,177.6617,0,0);
	new vehicle30 = AddStaticVehicle(434,-1402.2212,-212.7867,1051.0880,177.2654,0,0);
	new vehicle31 = AddStaticVehicle(434,-1398.3997,-212.7993,1051.0865,179.4615,0,0);
	LinkVehicleToInterior(vehicle27, 7);
	LinkVehicleToInterior(vehicle28, 7);
	LinkVehicleToInterior(vehicle29, 7);
	LinkVehicleToInterior(vehicle30, 7);
	LinkVehicleToInterior(vehicle31, 7);
	
	//STUNT2
	new vehicle22 = AddStaticVehicle(468,-1475.0941,1557.2458,1052.2001,357.6110,0,0);
	new vehicle23 = AddStaticVehicle(468,-1473.8208,1557.2922,1052.2001,0.7119,0,0);
	new vehicle24 = AddStaticVehicle(468,-1472.4391,1557.3202,1052.2006,1.7285,0,0);
	new vehicle25 = AddStaticVehicle(468,-1471.1691,1557.3854,1052.2001,1.1257,0,0);
	new vehicle26 = AddStaticVehicle(468,-1469.6925,1557.4022,1052.2001,357.5418,0,0);
    LinkVehicleToInterior(vehicle22, 14);
    LinkVehicleToInterior(vehicle23, 14);
    LinkVehicleToInterior(vehicle24, 14);
    LinkVehicleToInterior(vehicle25, 14);
    LinkVehicleToInterior(vehicle26, 14);

	AddStaticVehicle(411,-2874.8000,-798.5889,6.7870,178.6561,75,1); // corrida2
	AddStaticVehicle(411,-1664.1926,-153.6542,13.8755,313.4106,12,1); // corrida1
	AddStaticVehicle(411,-1658.2823,-158.3597,13.8755,316.3593,12,1); // corrida1
	AddStaticVehicle(411,-1645.8381,-170.1873,13.8755,319.6378,12,1); // corrida1
	AddStaticVehicle(411,-1652.4147,-165.2368,13.8755,315.0787,12,1); // corrida1
	AddStaticVehicle(411,-2869.5337,-799.7241,6.7739,176.7963,75,1); // corrida2
	AddStaticVehicle(411,-2856.2227,-803.6811,6.7674,178.8653,75,1); // corrida2
	AddStaticVehicle(411,-2862.5505,-806.5023,6.7719,179.8941,75,1); // corrida2
	AddStaticVehicle(411,1340.8014,-685.7706,91.3093,102.9931,123,1); // corrida3
	AddStaticVehicle(411,1343.3923,-690.8237,91.2785,105.7160,123,1); // corrida3
	AddStaticVehicle(411,1338.1511,-697.5179,91.6760,107.6644,123,1); // corrida3
	AddStaticVehicle(411,1340.1080,-702.3251,91.6478,104.3377,123,1); // corrida3
	
	//STUNT3
	CreateObject(4867, 3104.014893, -1940.080688, 2.441342, 0.0000, 0.0000, 0.0000);
	CreateObject(4867, 3102.297607, -2100.053711, 2.478775, 0.0000, 0.0000, 0.0000);
	CreateObject(4867, 3315.780273, -1939.985718, 2.404326, 0.0000, 0.0000, 0.0000);
	CreateObject(13641, 3291.124512, -1897.921021, 3.473571, 2.5783, 0.8594, 359.1406);
	CreateObject(13641, 3320.079346, -1897.337280, 3.473569, 0.0000, 0.0000, 180.0000);
	CreateObject(1632, 3205.777832, -1956.815063, 3.066453, 0.0000, 0.0000, 0.0000);
	CreateObject(1632, 3205.202148, -1924.534790, 3.154438, 0.0000, 0.0000, 180.0000);
	CreateObject(3625, 3203.586914, -1940.212646, 4.601517, 0.0000, 0.0000, 0.0000);
	CreateObject(13666, 3352.564453, -1984.282104, 7.510577, 0.0000, 0.0000, 11.2500);
	CreateObject(13666, 3343.509033, -1973.612793, 7.410577, 0.0000, 0.0000, 11.2500);
	CreateObject(13666, 3338.952881, -1968.755859, 7.310576, 0.0000, 0.0000, 8.6717);
	CreateObject(13666, 3347.991699, -1978.948364, 7.410577, 0.0000, 0.0000, 8.6717);
	CreateObject(4867, 3210.760010, -2099.377441, 2.439678, 0.0000, 0.0000, 0.0000);
	CreateObject(3469, 3129.164795, -2044.582397, 5.594063, 0.0000, 0.0000, 0.0000);
	CreateObject(3469, 3096.372559, -2042.943115, 5.594062, 0.0000, 0.0000, 0.0000);
	CreateObject(1633, 3054.976318, -2037.130493, 3.779066, 0.0000, 0.0000, 270.0000);
	CreateObject(1633, 3062.338135, -2037.248047, 7.175303, 15.4699, 0.0000, 270.0000);
	CreateObject(17565, 3280.839355, -2131.555664, 4.948384, 0.0000, 0.0000, 0.0000);
	CreateObject(16367, 3161.390137, -2049.529297, 4.237662, 0.0000, 0.0000, 0.0000);
	CreateObject(13645, 3148.608643, -2088.025879, 3.221633, 0.0000, 0.0000, 90.0001);
	CreateObject(13641, 3113.051270, -2089.161377, 4.198019, 0.0000, 0.0000, 0.0000);
	CreateObject(13641, 3086.367188, -2089.866943, 4.198019, 0.0000, 0.0000, 0.0000);
	CreateObject(13645, 3069.208496, -2089.661377, 3.221633, 0.0000, 0.0000, 270.0000);
	CreateObject(1655, 3038.909180, -2148.653076, 3.778887, 0.0000, 0.0000, 90.0000);
	CreateObject(1655, 3033.700684, -2148.599609, 7.276876, 22.3454, 0.0000, 90.0000);
	CreateObject(1655, 3029.553955, -2148.610352, 12.475327, 35.2369, 0.0000, 90.0000);
	CreateObject(1655, 3025.634033, -2148.536133, 19.717115, 43.8313, 0.0000, 90.0000);
	CreateObject(1655, 3023.655762, -2148.522705, 26.657116, 59.3011, 0.0000, 90.0000);
	CreateObject(1655, 3039.002441, -2139.915283, 3.778887, 0.0000, 0.0000, 90.0000);
	CreateObject(1655, 3033.722412, -2139.863525, 7.375511, 22.3454, 0.0000, 90.0000);
	CreateObject(1655, 3028.620361, -2140.069092, 13.670500, 35.2369, 0.0000, 90.0000);
	CreateObject(1655, 3024.956299, -2140.107178, 21.285215, 48.9878, 0.0000, 90.0000);
	CreateObject(1655, 3023.653076, -2139.959473, 26.638058, 59.3011, 0.0000, 90.0000);
	CreateObject(4726, 3003.251953, -2143.377441, 28.327742, 0.0000, 0.0000, 348.7500);
	CreateObject(18569, 3235.257568, -2057.337402, 3.765768, 0.0000, 0.0000, 0.0000);
	CreateObject(18568, 3237.550293, -2065.879639, 3.228685, 0.0000, 0.0000, 11.2500);
	CreateObject(18568, 3223.559326, -2056.352783, 3.228685, 0.0000, 0.0000, 11.2500);
	CreateObject(18568, 3226.360596, -2062.278809, 3.228685, 0.0000, 0.0000, 11.2500);
	CreateObject(1655, 3237.830078, -2072.826904, 3.739790, 0.0000, 0.0000, 0.0000);
	CreateObject(1655, 3236.718262, -2041.228149, 3.739790, 0.0000, 0.0000, 180.0000);
	CreateObject(13630, 3095.612305, -1977.674561, 14.431935, 0.0000, 0.0000, 0.0000);
	CreateObject(1634, 3134.721436, -1978.096436, 3.063659, 9.4538, 0.0000, 90.0000);
	CreateObject(1634, 3134.724609, -1974.050415, 3.063659, 8.5944, 0.0000, 90.0000);
	CreateObject(5400, 3338.606201, -1997.595215, 1.337959, 0.0000, 0.0000, 0.0000);
	CreateObject(13642, 3373.835449, -1887.230469, 3.534010, 0.0000, 0.0000, 0.0000);
	CreateObject(14488, 3110.469971, -1920.192017, 4.900034, 0.0000, 0.0000, 0.0000);
	CreateObject(1634, 3158.420654, -1920.557617, 3.063659, 0.0000, 0.0000, 90.0000);
	CreateObject(1634, 3062.018066, -1919.047485, 3.063659, 0.0000, 0.0000, 270.0000);
	CreateObject(5400, 3347.284668, -1997.489136, 1.287959, 0.0000, 0.0000, 0.0000);
	CreateObject(8417, 3367.357422, -2082.531494, 4.777048, 0.0000, 0.0000, 0.0000);
	CreateObject(1634, 3360.085449, -2067.127686, 5.510304, 6.0161, 0.0000, 0.0000);
	CreateObject(1634, 3361.727295, -2027.300293, 3.001643, 2.5783, 0.0000, 180.0000);
	CreateObject(13801, 3201.654785, -2106.606934, 19.781641, 0.0000, 0.0000, 0.0000);
	CreateObject(13801, 3153.805420, -2041.607178, 56.470619, 0.0000, 0.0000, 326.2500);
	CreateObject(1634, 3137.760254, -1999.895142, 74.788544, 0.0000, 0.0000, 22.5000);
	CreateObject(13636, 3181.256592, -1986.922852, 4.622592, 0.0000, 0.0000, 0.0000);
	CreateObject(1633, 3183.999023, -1884.462158, 3.741633, 0.0000, 0.0000, 90.0000);
	CreateObject(1633, 3183.986328, -1888.227051, 3.741635, 0.0000, 0.0000, 90.0000);
	CreateObject(18243, 3155.552734, -1888.459961, 2.439890, 0.0000, 0.0000, 90.0000);
	CreateObject(18243, 3139.890137, -1886.946167, 2.439891, 0.0000, 0.0000, 90.0000);
	CreateObject(18569, 3114.183838, -1884.372192, 3.767432, 0.0000, 0.0000, 0.0000);
	CreateObject(1632, 3091.860596, -1881.182495, 3.416453, 0.0000, 0.0000, 270.0000);
	CreateObject(7984, 3185.460205, -1808.498657, 16.541327, 0.0000, 0.0000, 0.0000);
	CreateObject(1634, 3193.419922, -1895.905396, 3.738660, 0.0000, 0.0000, 0.0000);
	CreateObject(1634, 3197.534180, -1895.939209, 3.738660, 0.0000, 0.0000, 0.0000);
	CreateObject(1634, 3193.666260, -1889.283081, 8.098789, 17.1887, 2.5783, 0.8594);
	CreateObject(1634, 3197.534912, -1888.463135, 8.813665, 17.1887, 2.5783, 0.8594);
	CreateObject(13801, 3398.099609, -1809.662231, 19.723415, 0.0000, 0.0000, 315.0000);
	CreateObject(5390, 3421.005371, -1724.891113, 42.317017, 0.0000, 0.0000, 326.2500);
	CreateObject(1632, 3435.513916, -1786.875000, 39.975273, 0.0000, 0.0000, 146.2500);
	CreateObject(3187, 3279.592529, -2048.945557, 6.492176, 0.0000, 0.0000, 0.0000);
	CreateObject(4853, 3237.374756, -2082.015137, 5.336111, 0.0000, 0.0000, 0.0000);
	CreateObject(1634, 3171.708496, -2082.339355, 3.776093, 0.0000, 0.0000, 270.0000);
	CreateObject(1634, 3282.113525, -2081.993896, 9.797491, 0.0000, 0.0000, 270.0000);
	CreateObject(8417, 3334.110840, -2081.806885, 12.365705, 0.0000, 0.0000, 0.0000);
	AddStaticVehicle(522,3209.4241,-2016.4346,3.0156,89.1126,6,25); // nrg-500
	AddStaticVehicle(522,3209.4187,-2017.4688,2.9984,89.1125,7,79); // nrg-500
	AddStaticVehicle(522,3209.4192,-2018.5027,2.9790,89.1129,8,82); // nrg-500
	AddStaticVehicle(522,3209.4319,-2019.5367,3.0095,89.1145,36,105); // nrg-500
	AddStaticVehicle(522,3209.4194,-2020.5707,2.9990,89.1155,39,106); // nrg-500
	AddStaticVehicle(522,3209.3811,-2021.6041,3.0155,89.1162,51,118); // nrg-500
	AddStaticVehicle(522,3209.3528,-2022.6379,2.9960,89.1170,3,3); // nrg-500
	AddStaticVehicle(522,3209.3396,-2023.6716,2.9775,89.1170,3,8); // nrg-500
	AddStaticVehicle(522,3209.6394,-2024.9662,3.0078,92.9545,6,25); // nrg-500
	AddStaticVehicle(522,3209.6943,-2025.9985,2.9996,92.9544,7,79); // nrg-500
	AddStaticVehicle(522,3209.7332,-2027.0315,2.9937,92.9545,8,82); // nrg-500
	AddStaticVehicle(522,3209.7688,-2028.0649,2.9935,92.9545,36,105); // nrg-500
	
	//SUPERRAMPA DO HOST HOUSE
	CreateObject(5333,2068.4822,798.9019,136.0,0.0,49.0,90);
    CreateObject(5333,2068.4822,688.9019,280.0,0.0,49.0,90);
    CreateObject(5333,2068.4822,578.9019,424.0,0.0,49.0,90);
    CreateObject(5333,2068.4822,468.9019,568.0,0.0,49.0,90);
    CreateObject(5333,2068.4822,358.9019,712.0,0.0,49.0,90);
    CreateObject(5333,2068.4822,248.9019,856.0,0.0,49.0,90);
    CreateObject(5333,2068.4822,138.9019,1000.0,0.0,49.0,90);
    CreateObject(5333,2068.4822,28.9019,1144.0,0.0,49.0,90);
    CreateObject(5333,2068.4822,-80.9019,1288.0,0.0,49.0,90);
    CreateObject(5333,2068.4822,-190.9019,1432.0,0.0,49.0,90);
    CreateObject(5333,2068.4822,-300.9019,1576.0,0.0,49.0,90);
    CreateObject(5333,2068.4822,-410.9019,1720.0,0.0,49.0,90);
    CreateObject(5333,2068.4822,-520.9019,1864.0,0.0,49.0,90);
    CreateObject(5333,2068.4822,-630.9019,2008.0,0.0,49.0,90);
    CreateObject(5333,2068.4822,-740.9019,2152.0,0.0,49.0,90);
    CreateObject(5333,2068.4822,-850.9019,2296.0,0.0,49.0,90);
    CreateObject(5333,2068.4822,-960.9019,2440.0,0.0,49.0,90);
    CreateObject(5333,2068.4822,-1070.9019,2584.0,0.0,49.0,90);
    CreateObject(5333,2068.4822,-1180.9019,2728.0,0.0,49.0,90);
    CreateObject(5333,2068.4822,-1290.9019,2872.0,0.0,49.0,90);
    CreateObject(10368,2039.4822,-1403.9019,2980.0,0.0,1.0,90);
    AddStaticVehicle(522,2077.9348,-1365.7236,2959.4277,267.6513,3,3);
	AddStaticVehicle(522,2078.5361,-1368.6152,2959.4780,275.8340,3,3); 
	AddStaticVehicle(522,2080.7341,-1373.0044,2959.5591,90.4332,3,3);
	AddStaticVehicle(522,2078.0984,-1379.2922,2959.6357,268.0866,3,3); 
	AddStaticVehicle(522,2078.7559,-1385.5205,2959.7625,86.4472,3,3); 
	AddStaticVehicle(522,2077.4019,-1392.5504,2959.8943,274.0751,3,3); 
	AddStaticVehicle(411,2078.1245,-1402.4602,2960.2224,270.5694,80,1); 
	AddStaticVehicle(411,2079.0527,-1405.6819,2960.2800,270.8063,80,1); 
	AddStaticVehicle(411,2078.7476,-1409.0845,2960.3411,269.3713,80,1); 
	AddStaticVehicle(411,2078.7766,-1412.4199,2960.3962,268.8781,80,1); 
	AddStaticVehicle(495,2060.1843,-1422.0426,2961.1848,92.1221,119,122); 
	AddStaticVehicle(495,2059.4998,-1416.0328,2961.0791,90.2331,119,122);
	AddStaticVehicle(495,2046.4618,-1428.7205,2961.3069,92.1449,119,122);
	
	//XAVIOES
	AddStaticVehicle(592,301.4308,2498.2156,17.7032,93.9611,3,0); //
	AddStaticVehicle(487,349.6279,2545.6641,16.9264,185.7439,6,0); // avioes
	AddStaticVehicle(460,375.3300,2546.6638,17.7651,188.9811,1,1); //
	AddStaticVehicle(513,430.7591,2501.1013,17.0292,91.5918,24,0); //
	AddStaticVehicle(511,429.3178,2515.3115,17.8583,85.4132,3,0); //
	AddStaticVehicle(469,434.7386,2487.2432,16.5070,80.9554,1,1); //
	AddStaticVehicle(476,390.4431,2543.2041,17.2486,173.1378,1,1); //
	AddStaticVehicle(425,402.0010,2532.4792,17.1019,133.2478,1,1); //
	AddStaticVehicle(425,391.1326,2524.6619,17.0809,201.4392,1,1); //
	AddStaticVehicle(468,1313.1885,1605.1156,10.4925,264.3177,3,3); //
	AddStaticVehicle(468,1314.2332,1599.8354,10.4885,268.9917,3,3); //
	AddStaticVehicle(468,1315.8239,1595.1418,10.4892,259.5726,3,3); //
	AddStaticVehicle(522,1321.2560,1595.9063,10.3847,268.4466,39,106); //
	AddStaticVehicle(522,1321.2389,1606.9060,10.3873,276.9031,39,106); //
	AddStaticVehicle(522,1321.4551,1602.4941,10.3933,271.0936,39,106); //

	AddStaticVehicle(522,-657.8288,2328.5093,138.1215,82.0317,3,3); // rampa1
	AddStaticVehicle(522,-658.2151,2326.5198,138.1503,80.8639,3,8); // rampa1
	AddStaticVehicle(522,-658.8366,2322.3914,138.1774,76.0583,8,82); // rampa1
	AddStaticVehicle(522,-658.1448,2325.1096,138.1581,73.2890,36,105); // rampa1
	AddStaticVehicle(522,-645.1246,2311.9292,134.5221,5.0864,51,118); // rampa1
	AddStaticVehicle(429,-639.8578,2321.1355,134.1794,88.5972,2,1); // rampa1
	AddStaticVehicle(429,-639.7283,2326.2495,134.3385,88.3763,1,2); // rampa1
	AddStaticVehicle(429,-639.2613,2331.2676,134.6927,87.5768,14,14); // rampa1
	AddStaticVehicle(429,-639.2195,2336.1494,135.0646,89.4728,13,13); // rampa1
	
	AddStaticVehicle(449,-2006.5000,159.8159,27.9973,179.9992,1,74); // tram
	AddStaticVehicle(449,-2006.5000,146.1796,27.9973,180.0000,1,74); // tram
	AddStaticVehicle(449,-2006.5000,174.2482,27.9973,359.9992,1,74); // tram
	AddStaticVehicle(449,-2006.5000,188.8339,27.9973,0.0008,1,74); // tram
	AddStaticVehicle(522,-2032.9819,176.2005,28.4113,278.5447,36,105); // tram
	AddStaticVehicle(522,-2032.6680,173.2090,28.4028,273.1674,6,25); // tram
	AddStaticVehicle(522,-2032.3407,170.7182,28.4083,295.3552,3,8); // tram
	AddStaticVehicle(522,-2031.8613,167.1768,28.4032,266.6640,51,118); // tram
	
	AddStaticVehicle(411,-2695.4424,1281.7615,55.1685,0.1086,106,1); // corrida4
	AddStaticVehicle(411,-2686.5378,1282.0878,55.1686,358.4633,112,1); // corrida4
	AddStaticVehicle(411,-2677.0039,1282.1758,55.1606,357.8923,116,1); // corrida4
	AddStaticVehicle(411,-2667.8667,1282.0833,55.1609,349.1974,123,1); // corrida4
	
	AddStaticVehicle(592,-1678.6858,-199.0648,15.3364,317.4407,1,1); // andromada
	AddStaticVehicle(592,-1711.6152,-234.0575,15.3488,314.8351,1,1); // andromada
	
	//monster
	AddStaticVehicle(444,-291.8362,2174.7327,113.1969,201.8145,32,42);
	AddStaticVehicle(486,-283.5562,2181.1411,112.9176,210.1623,1,1);
	AddStaticVehicle(556,-298.4977,2148.1609,113.1309,280.4946,1,1);
	AddStaticVehicle(556,-274.7641,2138.9521,113.0566,25.4992,1,1);
	
	AddStaticVehicle(522,-1470.5079,41.9662,13.7038,228.2279,8,82); //
	AddStaticVehicle(522,-1469.9202,42.5078,13.7038,228.2272,36,105); // stuntsf
	AddStaticVehicle(522,-1469.3324,43.0494,13.7062,228.2265,39,106); // stuntsf
	AddStaticVehicle(522,-1468.7449,43.5912,13.7062,228.2263,51,118); // stuntsf
	AddStaticVehicle(522,-1468.1573,44.1329,13.7062,228.2261,3,3); // stuntsf
	AddStaticVehicle(522,-1467.5696,44.6747,13.7038,228.2259,3,8); // stuntsf
	AddStaticVehicle(522,-1466.9818,45.2163,13.7038,228.2256,6,25); // stuntsf
	AddStaticVehicle(522,-1466.3939,45.7578,13.7098,228.2253,7,79); // stuntsf
	AddStaticVehicle(463,-1465.8052,46.3977,13.6816,228.2251,84,84); // stuntsf
	AddStaticVehicle(522,-1465.5468,47.1554,13.7229,228.1694,8,82); // stuntsf
	AddStaticVehicle(522,-1464.9622,47.7002,13.7049,228.1695,36,105); // stuntsf
	AddStaticVehicle(522,-1464.3762,48.2433,13.7089,228.1696,39,106); // stuntsf
	
	//BMX Park
	AddStaticVehicle(481,1903.379,-1358.453,13.239,175.0,-1,-1); // spawnpoint (1)
	AddStaticVehicle(481,1900.916,-1358.677,13.239,175.0,-1,-1); // spawnpoint (2)
	AddStaticVehicle(481,1902.194,-1360.819,13.239,175.0,-1,-1); // spawnpoint (3)
	AddStaticVehicle(481,1907.759,-1360.723,13.239,175.0,-1,-1); // spawnpoint (4)
	AddStaticVehicle(481,1945.994,-1362.755,18.239,128.0,-1,-1); // spawnpoint (5)
	AddStaticVehicle(481,1899.578,-1362.350,13.180,175.0,-1,-1); // spawnpoint (6)
	AddStaticVehicle(481,1904.671,-1364.099,13.193,175.0,-1,-1); // spawnpoint (7)
	AddStaticVehicle(481,1910.273,-1365.824,13.232,175.0,-1,-1); // spawnpoint (8)
	AddStaticVehicle(481,1898.661,-1355.173,13.180,175.0,-1,-1); // spawnpoint (9)
	AddStaticVehicle(481,1895.714,-1357.693,13.180,175.0,-1,-1); // spawnpoint (10)
	AddStaticVehicle(481,1896.821,-1361.442,13.180,175.0,-1,-1); // spawnpoint (11)
	AddStaticVehicle(481,1911.441,-1361.436,13.236,175.0,-1,-1); // spawnpoint (12)
	AddStaticVehicle(481,1907.227,-1367.508,13.180,175.0,-1,-1); // spawnpoint (13)
	AddStaticVehicle(481,1914.690,-1362.063,13.180,175.0,-1,-1); // spawnpoint (14)
	AddStaticVehicle(481,1901.587,-1353.540,13.139,175.0,-1,-1); // spawnpoint (15)
	
	AddStaticPickup(1242, 2, -245.6580,1888.4021,42.2892);// COLETE
	AddStaticPickup(1240, 2, -364.7137,1871.4417,42.2891);// HEALTH


return 1;
}
//*******************************[  OnPlayerConnect ]***************************
public OnPlayerConnect(playerid)
{
new name[256];
GetPlayerName(playerid, name, sizeof(name));
new tmp[255],player[30];
GetPlayerName(playerid,player,sizeof(player));
format(tmp,sizeof(tmp),">> '%s' (%d) Entrou no Servidor.",player,playerid);
SendClientMessageToAll(Cinza,tmp);
SendClientMessage(playerid,Azul,"················································");
SendClientMessage(playerid,LaranjaVermelho,"···· ArenaPower |=FreeRoam(/) ····");
SendClientMessage(playerid,Cinza,"                                            ");
SendClientMessage(playerid,Azul,"                           Criado por [AP]BcO");
SendClientMessage(playerid,Cinza,"                                            ");
SendClientMessage(playerid,Verde,"Para ver a lista de comando use: /comandos  ");
SendClientMessage(playerid,Cinza,"                                            ");
SendClientMessage(playerid,Violeta,"Seja Bem Vindo :D                         ");
SendClientMessage(playerid,Azul,"················································");
for(new i = 0; i < sizeof(Objects); i++) Player[playerid][view][i] = false;
return 1;
}
//*******************************[ OnPlayerDisconnect ]*************************
public OnPlayerDisconnect(playerid,reason)
{
InDM1[playerid] = 0;
InDM2[playerid] = 0;
InDM3[playerid] = 0;
InDM4[playerid] = 0;
InDM5[playerid] = 0;
status[playerid][0] = 0;
status[playerid][1] = 0;
status[playerid][2] = 0;
for(new i = 0; i < sizeof(Objects); i++)
{
if(Player[playerid][view][i])
{
Player[playerid][view][i] = false;
DestroyPlayerObject(playerid,Player[playerid][objid][i]);
}
}
return 1;
}
//*******************************[ OnPlayerCommandText ]*************************
public OnPlayerCommandText(playerid, cmdtext[])
{
new idx;
new cmd[256];
new string[256];
new giveplayerid;
new playermoney;
new sendername[MAX_PLAYER_NAME];
new giveplayer[MAX_PLAYER_NAME];
cmd = strtok(cmdtext, idx);
//MENSAGENS DE AJUDA
if(strcmp(cmdtext, "/comandos", true) == 0 || strcmp(cmdtext, "/cmds", true) == 0)
{
SendClientMessage(playerid,Laranja,"·· Comandos ··");
SendClientMessage(playerid,Coral,"Para ver as regras use: /regras");
SendClientMessage(playerid,Coral,"Para ver os teleportes use: /teles");
SendClientMessage(playerid,Coral,"Para ver os creditos use: /creditos");
SendClientMessage(playerid,Coral,"Para ver as animacoes use: /anim,/anim2,/hotcoffe");
SendClientMessage(playerid,Coral,"Para ver uma lista de cores use: /cores");
SendClientMessage(playerid,Verde2,"Para ver os outros comandos use: /comandos2");
SendClientMessage(playerid,Laranja,"");
return 1;
}
if(strcmp(cmdtext, "/comandos2", true) == 0 || strcmp(cmdtext, "/cmds2", true) == 0)
{
SendClientMessage(playerid,Laranja,"·· Comandos2 ··");
SendClientMessage(playerid,Coral,"Para escutar algumas musicas use: /musicas");
SendClientMessage(playerid,Coral,"Para virar um ninja use: /ninja");
SendClientMessage(playerid,Coral,"Para você explodir use: /explodir");
SendClientMessage(playerid,Coral,"Para iniciar uma contagem use: /contar");
SendClientMessage(playerid,Coral,"Para ver os comandos de veiculo use: /vcomandos ou /vcmds");
SendClientMessage(playerid,Coral,"Para se matar use: /kill");
SendClientMessage(playerid,Coral,"Para transferir dinheiro use: /transferir ou /tr [QUANTIA].");
SendClientMessage(playerid,Verde2,"Para ver os outros comandos use: /comandos3");
SendClientMessage(playerid,Laranja,"");
return 1;
}
if(strcmp(cmdtext, "/comandos3", true) == 0 || strcmp(cmdtext, "/cmds3", true) == 0)
{
SendClientMessage(playerid,Laranja,"·· Comandos3 ··");
SendClientMessage(playerid,Coral,"Para voltar para a tela de seleção de skin use: /class");
SendClientMessage(playerid,Coral,"Para mudar seu skin use: /meuskin [skin id]");
SendClientMessage(playerid,Laranja,"");
return 1;
}
if(strcmp(cmdtext, "/vcomandos", true) == 0 || strcmp(cmdtext, "/vcmds", true) == 0)
{
SendClientMessage(playerid,Laranja,"·· Veiculos Comandos ··");
SendClientMessage(playerid,Coral,"Para trancar seu carro use: /trancar");
SendClientMessage(playerid,Coral,"Para destrancar seu carro use: /destrancar");
SendClientMessage(playerid,Coral,"Para virar seu carro use: /flip");
SendClientMessage(playerid,Coral,"Para pintar seu carro use: /pintar");
SendClientMessage(playerid,Coral,"Para reparar seu veiculo use: /reparar");
SendClientMessage(playerid,Coral,"Para deixar seu carro em GOD-MOD use: /godcar");
SendClientMessage(playerid,Verde2,"Para ver os comando de veiculos 2: use /vcmds2");
SendClientMessage(playerid,Laranja,"");
return 1;
}
if(strcmp(cmdtext, "/vcomandos2", true) == 0 || strcmp(cmdtext, "/vcmds2", true) == 0)
{
SendClientMessage(playerid,Laranja,"·· Veiculos Comandos ··");
SendClientMessage(playerid,Coral,"Para adicionar nitro no seu carro use: /nitro");
SendClientMessage(playerid,Coral,"Para criar/ver o menu de veiculos use: /veiculos");
SendClientMessage(playerid,Laranja,"");
return 1;
}
if(strcmp(cmdtext, "/musicas", true) == 0 || strcmp(cmdtext, "/music", true) == 0)
{
SendClientMessage(playerid,Laranja,"·· Musicas ··");
SendClientMessage(playerid,Coral,"/musica1");
SendClientMessage(playerid,Coral,"/musica2");
SendClientMessage(playerid,Coral,"/musica3");
SendClientMessage(playerid,Coral,"/musica4");
SendClientMessage(playerid,Coral,"/musica5");
SendClientMessage(playerid,Coral,"/musica6");
SendClientMessage(playerid,Laranja,"");
return 1;
}
if(strcmp(cmd,"/regras",true) == 0)
{
SendClientMessage(playerid,Laranja,"·· Regras ··");
SendClientMessage(playerid,Branco,"Proibido fazer propragandas de outros servers.          [BAN].");
SendClientMessage(playerid,Cinza,"Proibido qualquer tipo de cheat/xiter.          [BAN].");
SendClientMessage(playerid,Branco,"Proibido desrespeito com ADMINS e qualquer outro PLAYER.          [MUTE].");
SendClientMessage(playerid,Cinza,"Proibido ficar de ESC em Areas de DeathMatch.          [KICK].");
SendClientMessage(playerid,Branco,"Proibido fazer denuncias falsas.          [KICK].");
SendClientMessage(playerid,Cinza,"Proibido o Racismo, seja ele de Cor, Raça ou Religião.          [KICK]");
SendClientMessage(playerid,Laranja,"");
return 1;
}
if(strcmp(cmd,"/stunts",true) == 0)
{
SendClientMessage(playerid,Laranja,"·· Stunts ··");
SendClientMessage(playerid,Coral,"Para ir para o Stunt no Mar use: /stuntmarinho.");
SendClientMessage(playerid,Coral,"Para ir para o Stunt do Interior use: /istunt");
SendClientMessage(playerid,Coral,"Para ir para o Stunt do Aeroporto de SF use: /stuntsf");
SendClientMessage(playerid,Laranja,"");
return 1;
}
if(strcmp(cmdtext, "/teleportes", true) == 0 || strcmp(cmdtext, "/teles", true) == 0)
{
SendClientMessage(playerid,Laranja,"·· Comandos ··");
SendClientMessage(playerid,Verde2,"Para ver os STUNTS use: /stunts");
SendClientMessage(playerid,Verde2,"Para ver os DRIFTS use: /drifts");
SendClientMessage(playerid,Verde2,"Para ver os DMS use: /dms");
SendClientMessage(playerid,Verde2,"Para ver as CORRIDAS use: /corridas");
SendClientMessage(playerid,Verde2,"Para ver os PULOS use: /pulos");
SendClientMessage(playerid,Verde2,"Para ver os OUTROS use: /outros");
SendClientMessage(playerid,Laranja,"");
return 1;
}
if(strcmp(cmd,"/outros",true) == 0)
{
SendClientMessage(playerid,Laranja,"·· OUTROS ··");
SendClientMessage(playerid,Coral,"/rhino, /trans, /xavioes");
SendClientMessage(playerid,Coral,"/andromada, /monster, /trilha");
SendClientMessage(playerid,Coral,"/atlantis, /lc, /bmx");
SendClientMessage(playerid,Laranja,"");
return 1;
}
if(strcmp(cmd,"/corridas",true) == 0)
{
SendClientMessage(playerid,Laranja,"·· Corridas ··");
SendClientMessage(playerid,Coral,"/8track");
SendClientMessage(playerid,Coral,"/corrida1");
SendClientMessage(playerid,Coral,"/corrida2");
SendClientMessage(playerid,Coral,"/corrida3");
SendClientMessage(playerid,Coral,"/corrida4");
SendClientMessage(playerid,Laranja,"");
return 1;
}
if(strcmp(cmd,"/drifts",true) == 0)
{
SendClientMessage(playerid,Laranja,"·· Drifts ··");
SendClientMessage(playerid,Coral,"/drift1");
SendClientMessage(playerid,Coral,"/drift2");
SendClientMessage(playerid,Coral,"/drift3");
SendClientMessage(playerid,Coral,"/drift4");
SendClientMessage(playerid,Laranja,"");
return 1;
}
if(strcmp(cmd,"/pulos",true) == 0)
{
SendClientMessage(playerid,Laranja,"·· Pulos ··");
SendClientMessage(playerid,Coral,"/pulo1             | /superrampa");
SendClientMessage(playerid,Coral,"/pulo2             | /rampa3");
SendClientMessage(playerid,Coral,"/pulo3");
SendClientMessage(playerid,Coral,"/pulo4");
SendClientMessage(playerid,Coral,"/rampa1");
SendClientMessage(playerid,Coral,"/rampa2");
SendClientMessage(playerid,Laranja,"");
return 1;
}
if(strcmp(cmd,"/cores",true) == 0)
{
SendClientMessage(playerid,Laranja,"·· Cores ··");
SendClientMessage(playerid,Coral,"/verde, /laranja");
SendClientMessage(playerid,Coral,"/bisque, /azul");
SendClientMessage(playerid,Coral,"/rosa, /lilas");
SendClientMessage(playerid,Coral,"/cinza, /amarelo");
SendClientMessage(playerid,Laranja,"");
return 1;
}
if(strcmp(cmd, "/hotcoffe", true) == 0)
{
SendClientMessage(playerid, Coral, " HOT COFFE ");
SendClientMessage(playerid, 0xE7EDDDFF, "Para ficar em posição de transar (para mulheres): /mulhersexo");
SendClientMessage(playerid, Cinza, "Para comer a mulher: /comermulher");
SendClientMessage(playerid, 0xE7EDDDFF, "Para ficar de quatro: /de4");
SendClientMessage(playerid, Cinza, "Para rolar e deitar: /mulherfudida ");
SendClientMessage(playerid, 0xE7EDDDFF, "Para bater uma punheta: /punheta");
SendClientMessage(playerid, Coral, "");
return 1;
}

if(strcmp(cmd,"/dms",true) == 0)
{
SendClientMessage(playerid,Laranja,"·· DeathMatch ··");
SendClientMessage(playerid,Coral,"/m4");
SendClientMessage(playerid,Coral,"/pa");
SendClientMessage(playerid,Coral,"/motoserra");
SendClientMessage(playerid,Coral,"/chamas");
SendClientMessage(playerid,Coral,"/granada");
SendClientMessage(playerid,Laranja,"");
return 1;
}
if(strcmp(cmd,"/sair",true) == 0)
{
PlayerPlaySound(playerid, 1133, 257.6206, -41.5307, 1002.0234);
InDM1[playerid] = 0;
InDM2[playerid] = 0;
InDM3[playerid] = 0;
InDM4[playerid] = 0;
InDM5[playerid] = 0;
SetPlayerPos(playerid,-362.3677,1854.5674,42.3548);
return 1;
}
																		 //CORES
if(strcmp(cmd,"/verde",true) == 0)
{
SetPlayerColor(playerid,0x33AA33AA);
return 1;
}
if(strcmp(cmd,"/laranja",true) == 0)
{
SetPlayerColor(playerid,0xFF9900AA);
return 1;
}
if(strcmp(cmd,"/bisque",true) == 0)
{
SetPlayerColor(playerid,0xFFE4C4AA);
return 1;
}
if(strcmp(cmd,"/azul",true) == 0)
{
SetPlayerColor(playerid,0x0000BBAA);
return 1;
}
if(strcmp(cmd,"/rosa",true) == 0)
{
SetPlayerColor(playerid,0xFF66FFAA);
return 1;
}
if(strcmp(cmd,"/lilas",true) == 0)
{
SetPlayerColor(playerid,0x9999FFAA);
return 1;
}
if(strcmp(cmd,"/cinza",true) == 0)
{
SetPlayerColor(playerid,0xAFAFAFAA);
return 1;
}
if(strcmp(cmd,"/amarelo",true) == 0)
{
SetPlayerColor(playerid,0xFFFF00AA);
return 1;
}
if(strcmp(cmd, "/ninja",true) == 0)
{
SetPlayerSkin(playerid, 203);
ResetPlayerWeapons(playerid);
GivePlayerWeapon(playerid,8,1);
return 1;
}
if(strcmp(cmd, "/explodir",true) == 0)
{
new Float:X, Float:Y, Float:Z;
GetPlayerPos(playerid,X,Y,Z);
CreateExplosion(X,Y,Z,7,1);
CreateExplosion(X,Y,Z,7,1);
return 1;
}
if(strcmp(cmdtext, "/class",true)==0)
{
ForceClassSelection(playerid);
return 1;
}
if(strcmp(cmdtext, "/kill", true) == 0)
{
SetPlayerHealth(playerid,0.0);
return 1;
}
if (strcmp(cmdtext, "/contar", true)==0)
{
if(Contar >= 5)
{
new name[256];
GetPlayerName(playerid, name, sizeof(name));
new tmp[255],player[30];
GetPlayerName(playerid,player,sizeof(player));
format(tmp,sizeof(tmp),">> '%s' (%d) Iniciou uma Contagem.",player,playerid);
SendClientMessageToAll(AVISO,tmp);
SendClientMessage(playerid,AVISO,"Contagem Iniciada...");
Contagem();
return 1;
}
else
{
SendClientMessage(playerid, Verde, "Desculpe! Uma contagem está em progresso!!!");
return 1;
}}
if(strcmp(cmd, "/transferir", true) == 0 || strcmp(cmd, "/tr", true) == 0)
{
new tmp[256];
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, Branco, "USE: /transferir ou /tr [ID] [valor]");
return 1;
}
giveplayerid = strval(tmp);
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, Branco, "USE: /transferir ou /tr [ID] [valor]");
return 1;
}
moneys = strval(tmp);
if (IsPlayerConnected(giveplayerid))
{
GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
GetPlayerName(playerid, sendername, sizeof(sendername));
playermoney = GetPlayerMoney(playerid);
if (moneys > 0 && playermoney >= moneys)
{
GivePlayerMoney(playerid, (0 - moneys));
GivePlayerMoney(giveplayerid, moneys);
format(string, sizeof(string), "[24/7] Você enviou a %s (ID: %d), $%d.", giveplayer,giveplayerid, moneys);
SendClientMessage(playerid, Gold, string);
format(string, sizeof(string), "[24/7] Você recebeu $%d de %s (ID: %d).", moneys, sendername, playerid);
SendClientMessage(giveplayerid, Gold, string);
printf("[24/7] '%s' (ID:%d) transferiu $%d a '%s' (ID:%d).",sendername, playerid, moneys, giveplayer, giveplayerid);
}
else
{
SendClientMessage(playerid, Vermelho, "[24/7] Transferência Inválida!");
}
}
else
{
format(string, sizeof(string), "[ERRO]  {%d} não é um player Online!", giveplayerid);
SendClientMessage(playerid, Vermelho, string);
}
return 1;
}
																	//TELEPORTES
if (strcmp(cmdtext, "/istunt", true)==0)
{
if(InDM1[playerid] == 0 && InDM2[playerid] == 0 && InDM3[playerid] == 0 && InDM4[playerid] == 0 && InDM5[playerid] == 0)
{
SetPlayerInterior(playerid,14);
SetPlayerPos(playerid,-1464.2322,1557.5720,1052.5313);
new name[MAX_PLAYERS];
new stringa[256];
GetPlayerName(playerid, name, sizeof(name));
format(stringa, sizeof(stringa), "* '%s' foi para o 'ISTUNT'. (/istunt)", name);
SendClientMessageToAll(0x6495EDAA,stringa);
ResetPlayerWeapons(playerid);
PlayerPlaySound(playerid, 1133, 257.6206, -41.5307, 1002.0234);
}
else
{
SendClientMessage(playerid,0xFF0000AA,"** Para sair deste teleporte use [ /sair ]!");
}
 return 1;
}
if(strcmp(cmdtext, "/transfender", true) == 0 || strcmp(cmdtext, "/trans", true) == 0)
{
if(InDM1[playerid] == 0 && InDM2[playerid] == 0 && InDM3[playerid] == 0 && InDM4[playerid] == 0 && InDM5[playerid] == 0)
{
if (IsPlayerInAnyVehicle(playerid))
{
new name[MAX_PLAYERS];
new stringa[256];
GetPlayerName(playerid, name, sizeof(name));
format(stringa, sizeof(stringa), "* %s' foi para 'TRANSFENDER'.   ( /trans )", name);
SendClientMessageToAll(0x6495EDAA,stringa);
SetVehiclePos(GetPlayerVehicleID(playerid),2385.5947,1008.1719,10.8203);
GameTextForPlayer(playerid,"~y~transfender",5000,1);
PlayerPlaySound(playerid, 1133, 257.6206, -41.5307, 1002.0234);
}
if (!IsPlayerInAnyVehicle(playerid))
{
SetPlayerPos(playerid, 2385.5947,1008.1719,10.8203);
GameTextForPlayer(playerid,"~y~transfender",5000,1);
PlayerPlaySound(playerid, 1133, 257.6206, -41.5307, 1002.0234);
SetPlayerInterior(playerid, 0);
}
}
else
{
SendClientMessage(playerid,0xFF0000AA,"** Para sair deste teleporte use [ /sair ]!");
}
return 1;
}
if(!strcmp("/corrida4", cmdtext, true))
{
if(InDM1[playerid] == 0 && InDM2[playerid] == 0 && InDM3[playerid] == 0 && InDM4[playerid] == 0 && InDM5[playerid] == 0)
{
SetPlayerInterior(playerid, 0);
SetPlayerPos(playerid,-2675.5122,1293.4751,55.4297);
new name[MAX_PLAYERS];
new stringa[256];
GetPlayerName(playerid, name, sizeof(name));
format(stringa, sizeof(stringa), "[ESPECIAL]  '%s' foi para o 'CORRIDA4'. (/corrida4)", name);
SendClientMessageToAll(0x6495EDAA,stringa);
ResetPlayerWeapons(playerid);
PlayerPlaySound(playerid, 1133, 257.6206, -41.5307, 1002.0234);
}
else
{
SendClientMessage(playerid,0xFF0000AA,"** Para sair deste teleporte use [ /sair ]!");
}
return 1;
}
if(!strcmp("/rhino", cmdtext, true))
{
if(InDM1[playerid] == 0 && InDM2[playerid] == 0 && InDM3[playerid] == 0 && InDM4[playerid] == 0 && InDM5[playerid] == 0)
{
SetPlayerInterior(playerid, 0);
SetPlayerPos(playerid,-0.5145,1519.0414,12.7500);
new name[MAX_PLAYERS];
new stringa[256];
GetPlayerName(playerid, name, sizeof(name));
format(stringa, sizeof(stringa), "[ESPECIAL]  '%s' foi para o 'RHINO'. (/rhino)", name);
SendClientMessageToAll(0x6495EDAA,stringa);
ResetPlayerWeapons(playerid);
PlayerPlaySound(playerid, 1133, 257.6206, -41.5307, 1002.0234);
}
else
{
SendClientMessage(playerid,0xFF0000AA,"** Para sair deste teleporte use [ /sair ]!");
}
return 1;
}
if(!strcmp("/bmx", cmdtext, true))
{
if(InDM1[playerid] == 0 && InDM2[playerid] == 0 && InDM3[playerid] == 0 && InDM4[playerid] == 0 && InDM5[playerid] == 0)
{
SetPlayerInterior(playerid, 0);
SetPlayerPos(playerid,1946.201,-1381.074,18.239);
new name[MAX_PLAYERS];
new stringa[256];
GetPlayerName(playerid, name, sizeof(name));
format(stringa, sizeof(stringa), "[ESPECIAL]  '%s' foi para o 'BMX'. (/bmx)", name);
SendClientMessageToAll(0x6495EDAA,stringa);
ResetPlayerWeapons(playerid);
PlayerPlaySound(playerid, 1133, 257.6206, -41.5307, 1002.0234);
}
else
{
SendClientMessage(playerid,0xFF0000AA,"** Para sair deste teleporte use [ /sair ]!");
}
return 1;
}
if(!strcmp("/stuntsf", cmdtext, true))
{
if(InDM1[playerid] == 0 && InDM2[playerid] == 0 && InDM3[playerid] == 0 && InDM4[playerid] == 0 && InDM5[playerid] == 0)
{
SetPlayerInterior(playerid, 0);
SetPlayerPos(playerid,-1475.1332,52.7393,14.4482);
new name[MAX_PLAYERS];
new stringa[256];
GetPlayerName(playerid, name, sizeof(name));
format(stringa, sizeof(stringa), "[ESPECIAL]  '%s' foi para o 'STUNTSF'. (/stuntsf)", name);
SendClientMessageToAll(0x6495EDAA,stringa);
ResetPlayerWeapons(playerid);
PlayerPlaySound(playerid, 1133, 257.6206, -41.5307, 1002.0234);
}
else
{
SendClientMessage(playerid,0xFF0000AA,"** Para sair deste teleporte use [ /sair ]!");
}
return 1;
}
if(!strcmp("/lc", cmdtext, true))
{
if(InDM1[playerid] == 0 && InDM2[playerid] == 0 && InDM3[playerid] == 0 && InDM4[playerid] == 0 && InDM5[playerid] == 0)
{
SetPlayerInterior(playerid,1);
SetPlayerPos(playerid,-732.0,504.0,1372.5);
new name[MAX_PLAYERS];
new stringa[256];
GetPlayerName(playerid, name, sizeof(name));
format(stringa, sizeof(stringa), "[ESPECIAL]  '%s' foi para o 'Liberty City'. (/lc)", name);
SendClientMessageToAll(0x6495EDAA,stringa);
ResetPlayerWeapons(playerid);
PlayerPlaySound(playerid, 1133, 257.6206, -41.5307, 1002.0234);
GameTextForPlayer(playerid,"~r~Derrube", 5000, 1);
}
else
{
SendClientMessage(playerid,0xFF0000AA,"** Para sair deste teleporte use [ /sair ]!");
}
 return 1;
}
if(!strcmp("/monster", cmdtext, true))
{
if(InDM1[playerid] == 0 && InDM2[playerid] == 0 && InDM3[playerid] == 0 && InDM4[playerid] == 0 && InDM5[playerid] == 0)
{
SetPlayerInterior(playerid, 0);
SetPlayerPos(playerid,-280.8465,2153.3254,112.7985);
new name[MAX_PLAYERS];
new stringa[256];
GetPlayerName(playerid, name, sizeof(name));
format(stringa, sizeof(stringa), "[ESPECIAL]  '%s' foi para o 'MONSTER'. (/monster)", name);
SendClientMessageToAll(0x6495EDAA,stringa);
ResetPlayerWeapons(playerid);
PlayerPlaySound(playerid, 1133, 257.6206, -41.5307, 1002.0234);
}
else
{
SendClientMessage(playerid,0xFF0000AA,"** Para sair deste teleporte use [ /sair ]!");
}
return 1;
}
if(!strcmp("/trilha", cmdtext, true))
{
if(InDM1[playerid] == 0 && InDM2[playerid] == 0 && InDM3[playerid] == 0 && InDM4[playerid] == 0 && InDM5[playerid] == 0)
{
SetPlayerInterior(playerid, 0);
SetPlayerPos(playerid,-2459.5708,-1925.4192,302.5697);
new name[MAX_PLAYERS];
new stringa[256];
GetPlayerName(playerid, name, sizeof(name));
format(stringa, sizeof(stringa), "[ESPECIAL]  '%s' foi para o 'TRILHA'. (/trilha)", name);
SendClientMessageToAll(0x6495EDAA,stringa);
ResetPlayerWeapons(playerid);
PlayerPlaySound(playerid, 1133, 257.6206, -41.5307, 1002.0234);
}
else
{
SendClientMessage(playerid,0xFF0000AA,"** Para sair deste teleporte use [ /sair ]!");
}
return 1;
}
if(!strcmp("/atlantis", cmdtext, true))
{
if(InDM1[playerid] == 0 && InDM2[playerid] == 0 && InDM3[playerid] == 0 && InDM4[playerid] == 0 && InDM5[playerid] == 0)
{
SetPlayerInterior(playerid, 0);
SetPlayerPos(playerid,-638.9266,2190.1292,-33.5471);
new name[MAX_PLAYERS];
new stringa[256];
GetPlayerName(playerid, name, sizeof(name));
format(stringa, sizeof(stringa), "[ESPECIAL]  '%s' foi para o 'ATLANTIS'. (/atlantis)", name);
SendClientMessageToAll(0x6495EDAA,stringa);
ResetPlayerWeapons(playerid);
PlayerPlaySound(playerid, 1133, 257.6206, -41.5307, 1002.0234);
}
else
{
SendClientMessage(playerid,0xFF0000AA,"** Para sair deste teleporte use [ /sair ]!");
}
return 1;
}
if(!strcmp("/andromada", cmdtext, true))
{
if(InDM1[playerid] == 0 && InDM2[playerid] == 0 && InDM3[playerid] == 0 && InDM4[playerid] == 0 && InDM5[playerid] == 0)
{
SetPlayerInterior(playerid, 0);
SetPlayerPos(playerid,-1697.9219,-216.3259,14.1484);
new name[MAX_PLAYERS];
new stringa[256];
GetPlayerName(playerid, name, sizeof(name));
format(stringa, sizeof(stringa), "[ESPECIAL]  '%s' foi para o 'RHINO'. (/rhino)", name);
SendClientMessageToAll(0x6495EDAA,stringa);
ResetPlayerWeapons(playerid);
PlayerPlaySound(playerid, 1133, 257.6206, -41.5307, 1002.0234);
}
else
{
SendClientMessage(playerid,0xFF0000AA,"** Para sair deste teleporte use [ /sair ]!");
}
return 1;
}
if(!strcmp("/xavioes", cmdtext, true))
{
if(InDM1[playerid] == 0 && InDM2[playerid] == 0 && InDM3[playerid] == 0 && InDM4[playerid] == 0 && InDM5[playerid] == 0)
{
SetPlayerInterior(playerid, 0);
SetPlayerPos(playerid,384.0812,2508.2817,16.5070);
new name[MAX_PLAYERS];
new stringa[256];
GetPlayerName(playerid, name, sizeof(name));
format(stringa, sizeof(stringa), "[ESPECIAL]  '%s' foi para o 'XAVIOES'. (/xavioes)", name);
SendClientMessageToAll(0x6495EDAA,stringa);
ResetPlayerWeapons(playerid);
PlayerPlaySound(playerid, 1133, 257.6206, -41.5307, 1002.0234);
}
else
{
SendClientMessage(playerid,0xFF0000AA,"** Para sair deste teleporte use [ /sair ]!");
}
return 1;
}
if(!strcmp("/superrampa", cmdtext, true))
{
if(InDM1[playerid] == 0 && InDM2[playerid] == 0 && InDM3[playerid] == 0 && InDM4[playerid] == 0 && InDM5[playerid] == 0)
{
SetPlayerInterior(playerid, 0);
SetPlayerPos(playerid,2051.9556,-1397.4724,2962.2053);
new name[MAX_PLAYERS];
new stringa[256];
GetPlayerName(playerid, name, sizeof(name));
format(stringa, sizeof(stringa), "[ESPECIAL]  '%s' foi para o 'SUPER-RAMPA'. (/superrampa)", name);
SendClientMessageToAll(0x6495EDAA,stringa);
ResetPlayerWeapons(playerid);
PlayerPlaySound(playerid, 1133, 257.6206, -41.5307, 1002.0234);
}
else
{
SendClientMessage(playerid,0xFF0000AA,"** Para sair deste teleporte use [ /sair ]!");
}
return 1;
}
if(!strcmp("/stuntmarinho", cmdtext, true))
{
if(InDM1[playerid] == 0 && InDM2[playerid] == 0 && InDM3[playerid] == 0 && InDM4[playerid] == 0 && InDM5[playerid] == 0)
{
SetPlayerInterior(playerid, 0);
SetPlayerPos(playerid,3171.2112,-2039.4998,3.4788);
new name[MAX_PLAYERS];
new stringa[256];
GetPlayerName(playerid, name, sizeof(name));
format(stringa, sizeof(stringa), "[ESPECIAL]  '%s' foi para o 'STUNTMARINHO'. (/stuntmarinho)", name);
SendClientMessageToAll(0x6495EDAA,stringa);
ResetPlayerWeapons(playerid);
PlayerPlaySound(playerid, 1133, 257.6206, -41.5307, 1002.0234);
}
else
{
SendClientMessage(playerid,0xFF0000AA,"** Para sair deste teleporte use [ /sair ]!");
}
return 1;
}
if(!strcmp("/corrida1", cmdtext, true))
{
if(InDM1[playerid] == 0 && InDM2[playerid] == 0 && InDM3[playerid] == 0 && InDM4[playerid] == 0 && InDM5[playerid] == 0)
{
SetPlayerInterior(playerid, 0);
SetPlayerPos(playerid,-1662.3245,-162.2565,14.1484);
new name[MAX_PLAYERS];
new stringa[256];
GetPlayerName(playerid, name, sizeof(name));
format(stringa, sizeof(stringa), "[ESPECIAL]  '%s' foi para o 'Corrida1'. (/corrida1)", name);
SendClientMessage(playerid,AVISO,"Para iniciar uma contagem use: /contar.");
SendClientMessageToAll(0x6495EDAA,stringa);
ResetPlayerWeapons(playerid);
PlayerPlaySound(playerid, 1133, 257.6206, -41.5307, 1002.0234);
}
else
{
SendClientMessage(playerid,0xFF0000AA,"** Para sair deste teleporte use [ /sair ]!");
}
return 1;
}
if(!strcmp("/corrida2", cmdtext, true))
{
if(InDM1[playerid] == 0 && InDM2[playerid] == 0 && InDM3[playerid] == 0 && InDM4[playerid] == 0 && InDM5[playerid] == 0)
{
SetPlayerInterior(playerid, 0);
SetPlayerPos(playerid,-2874.5500,-771.9500,7.0391);
new name[MAX_PLAYERS];
new stringa[256];
GetPlayerName(playerid, name, sizeof(name));
format(stringa, sizeof(stringa), "[ESPECIAL]  '%s' foi para o 'Corrida2'. (/corrida2)", name);
SendClientMessage(playerid,AVISO,"Para iniciar uma contagem use: /contar.");
SendClientMessageToAll(0x6495EDAA,stringa);
ResetPlayerWeapons(playerid);
PlayerPlaySound(playerid, 1133, 257.6206, -41.5307, 1002.0234);
}
else
{
SendClientMessage(playerid,0xFF0000AA,"** Para sair deste teleporte use [ /sair ]!");
}
return 1;
}
if(strcmp(cmdtext, "/corrida3", true) == 0)
{
if(InDM1[playerid] == 0 && InDM2[playerid] == 0 && InDM3[playerid] == 0 && InDM4[playerid] == 0 && InDM5[playerid] == 0)
{
SetPlayerInterior(playerid, 0);
SetPlayerPos(playerid,1339.5762,-689.2490,91.7027);
new name[MAX_PLAYERS];
new stringa[256];
GetPlayerName(playerid, name, sizeof(name));
format(stringa, sizeof(stringa), "[ESPECIAL]  '%s' foi para o 'Corrida3'. (/corrida3)", name);
SendClientMessage(playerid,AVISO,"Para iniciar uma contagem use: /contar.");
SendClientMessageToAll(0x6495EDAA,stringa);
ResetPlayerWeapons(playerid);
PlayerPlaySound(playerid, 1133, 257.6206, -41.5307, 1002.0234);
}
else
{
SendClientMessage(playerid,0xFF0000AA,"** Para sair deste teleporte use [ /sair ]!");
}
return 1;
}
if(strcmp(cmdtext, "/8track", true) == 0)
{
if(InDM1[playerid] == 0 && InDM2[playerid] == 0 && InDM3[playerid] == 0 && InDM4[playerid] == 0 && InDM5[playerid] == 0)
{
SetPlayerInterior(playerid, 7);
ResetPlayerWeapons(playerid);
SetPlayerPos(playerid,-1398.1716,-205.5023,1051.3197);
new name[MAX_PLAYERS];
new stringa[256];
GetPlayerName(playerid, name, sizeof(name));
format(stringa, sizeof(stringa), "* %s' foi para '8TRACK'.   ( /8track )", name);
SendClientMessage(playerid,AVISO,"Para iniciar uma contagem use: /contar.");
SendClientMessageToAll(0x6495EDAA,stringa);
PlayerPlaySound(playerid, 1133, 257.6206, -41.5307, 1002.0234);
GameTextForPlayer(playerid,"~r~8~y~track", 5000, 1);
}
else
{
SendClientMessage(playerid,0xFF0000AA,"** Para sair deste teleporte use [ /sair ]!");
}
return 1;
}
if(strcmp(cmdtext, "/rampa1", true) == 0)
{
if(InDM1[playerid] == 0 && InDM2[playerid] == 0 && InDM3[playerid] == 0 && InDM4[playerid] == 0 && InDM5[playerid] == 0)
{
SetPlayerInterior(playerid, 0);
SetPlayerPos(playerid,-673.9256,2311.7639,134.5406);
new name[MAX_PLAYERS];
new stringa[256];
GetPlayerName(playerid, name, sizeof(name));
format(stringa, sizeof(stringa), "* %s' foi para 'RAMPA1'.   ( /rampa1 )", name);
SendClientMessageToAll(AzulClaro,stringa);
}
else
{
SendClientMessage(playerid,0xFF0000AA,"** Para sair deste teleporte use [ /sair ]!");
}
return 1;
}
if(strcmp(cmdtext, "/rampa2", true) == 0)
{
if(InDM1[playerid] == 0 && InDM2[playerid] == 0 && InDM3[playerid] == 0 && InDM4[playerid] == 0 && InDM5[playerid] == 0)
{
SetPlayerInterior(playerid, 0);
SetPlayerPos(playerid,1206.478271, 2350.975098, 404.627289);
new name[MAX_PLAYERS];
new stringa[256];
GetPlayerName(playerid, name, sizeof(name));
format(stringa, sizeof(stringa), "* %s' foi para 'RAMPA2'.   ( /rampa2 )", name);
SendClientMessageToAll(AzulClaro,stringa);
}
else
{
SendClientMessage(playerid,0xFF0000AA,"** Para sair deste teleporte use [ /sair ]!");
}
return 1;
}
if(strcmp(cmdtext, "/rampa3", true) == 0)
{
if(InDM1[playerid] == 0 && InDM2[playerid] == 0 && InDM3[playerid] == 0 && InDM4[playerid] == 0 && InDM5[playerid] == 0)
{
SetPlayerInterior(playerid, 0);
SetPlayerPos(playerid,	-2310.3372,-1686.0265,557.3525);
GivePlayerWeapon(playerid,46,5);
new name[MAX_PLAYERS];
new stringa[256];
GetPlayerName(playerid, name, sizeof(name));
format(stringa, sizeof(stringa), "* %s' foi para 'RAMPA3'.   ( /rampa3 )", name);
SendClientMessageToAll(AzulClaro,stringa);
}
else
{
SendClientMessage(playerid,0xFF0000AA,"** Para sair deste teleporte use [ /sair ]!");
}
return 1;
}
if(strcmp(cmdtext, "/pulo1", true) == 0)
{
if(InDM1[playerid] == 0 && InDM2[playerid] == 0 && InDM3[playerid] == 0 && InDM4[playerid] == 0 && InDM5[playerid] == 0)
{
SetPlayerInterior(playerid, 0);
SetPlayerPos(playerid, 2364.485107, 1560.723633, 2598.544922);
GivePlayerWeapon(playerid,46,1);
new name[MAX_PLAYERS];
new stringa[256];
GetPlayerName(playerid, name, sizeof(name));
format(stringa, sizeof(stringa), "* %s' foi para 'PULO1'.   ( /pulo1 )", name);
SendClientMessageToAll(AzulClaro,stringa);
}
else
{
SendClientMessage(playerid,0xFF0000AA,"** Para sair deste teleporte use [ /sair ]!");
}
return 1;
}
if(strcmp(cmdtext, "/pulo2", true) == 0)
{
if(InDM1[playerid] == 0 && InDM2[playerid] == 0 && InDM3[playerid] == 0 && InDM4[playerid] == 0 && InDM5[playerid] == 0)
{
SetPlayerInterior(playerid, 0);
SetPlayerPos(playerid, -1753.6763,885.2331,295.8750);
GivePlayerWeapon(playerid,46,1);
new name[MAX_PLAYERS];
new stringa[256];
GetPlayerName(playerid, name, sizeof(name));
format(stringa, sizeof(stringa), "* %s' foi para 'PULO2'.   ( /pulo2 )", name);
SendClientMessageToAll(AzulClaro,stringa);
}
else
{
SendClientMessage(playerid,0xFF0000AA,"** Para sair deste teleporte use [ /sair ]!");
}
return 1;
}
if(strcmp(cmdtext, "/pulo3", true) == 0)
{
if(InDM1[playerid] == 0 && InDM2[playerid] == 0 && InDM3[playerid] == 0 && InDM4[playerid] == 0 && InDM5[playerid] == 0)
{
SetPlayerInterior(playerid, 0);
SetPlayerPos(playerid, -2668.7588,1594.5051,217.2739);
GivePlayerWeapon(playerid,46,1);
new name[MAX_PLAYERS];
new stringa[256];
GetPlayerName(playerid, name, sizeof(name));
format(stringa, sizeof(stringa), "* %s' foi para 'PULO3'.   ( /pulo3 )", name);
SendClientMessageToAll(AzulClaro,stringa);
}
else
{
SendClientMessage(playerid,0xFF0000AA,"** Para sair deste teleporte use [ /sair ]!");
}
return 1;
}
if(strcmp(cmdtext, "/pulo4", true) == 0)
{
if(InDM1[playerid] == 0 && InDM2[playerid] == 0 && InDM3[playerid] == 0 && InDM4[playerid] == 0 && InDM5[playerid] == 0)
{
SetPlayerInterior(playerid, 0);
SetPlayerPos(playerid, 1941.6046,-2428.2393,907.4693);
GivePlayerWeapon(playerid,46,1);
new name[MAX_PLAYERS];
new stringa[256];
GetPlayerName(playerid, name, sizeof(name));
format(stringa, sizeof(stringa), "* %s' foi para 'PULO4'.   ( /pulo4 )", name);
SendClientMessageToAll(AzulClaro,stringa);
}
else
{
SendClientMessage(playerid,0xFF0000AA,"** Para sair deste teleporte use [ /sair ]!");
}
return 1;
}
if(strcmp(cmdtext, "/drift1", true) == 0)
{
if(InDM1[playerid] == 0 && InDM2[playerid] == 0 && InDM3[playerid] == 0 && InDM4[playerid] == 0 && InDM5[playerid] == 0)
{
SetPlayerInterior(playerid, 0);
SetPlayerPos(playerid,-483.3290,1924.5056,86.2290);
new name[MAX_PLAYERS];
new stringa[256];
GetPlayerName(playerid, name, sizeof(name));
format(stringa, sizeof(stringa), "* %s' foi para 'DRIFT1'.   ( /drift1 )", name);
SendClientMessageToAll(RosaEscuro,stringa);
}
else
{
SendClientMessage(playerid,0xFF0000AA,"** Para sair deste teleporte use [ /sair ]!");
}
return 1;
}
if(strcmp(cmdtext, "/drift2", true) == 0)
{
if(InDM1[playerid] == 0 && InDM2[playerid] == 0 && InDM3[playerid] == 0 && InDM4[playerid] == 0 && InDM5[playerid] == 0)
{
SetPlayerInterior(playerid, 0);
SetPlayerPos(playerid,-320.5858,1527.2329,75.3570);
GameTextForPlayer(playerid,"~y~DRIFT",5000,1);
PlayerPlaySound(playerid, 1133, 257.6206, -41.5307, 1002.0234);
new name[MAX_PLAYERS];
new stringa[256];
GetPlayerName(playerid, name, sizeof(name));
format(stringa, sizeof(stringa), "* %s' foi para 'DRIFT2'.   ( /drift2 )", name);
SendClientMessageToAll(RosaEscuro,stringa);
}
else
{
SendClientMessage(playerid,0xFF0000AA,"** Para sair deste teleporte use [ /sair ]!");
}
return 1;
}
if(strcmp(cmdtext, "/drift3", true) == 0)
{
if(InDM1[playerid] == 0 && InDM2[playerid] == 0 && InDM3[playerid] == 0 && InDM4[playerid] == 0 && InDM5[playerid] == 0)
{
SetPlayerInterior(playerid, 0);
SetPlayerPos(playerid,2322.9475,1404.4160,42.8203);
GameTextForPlayer(playerid,"~y~DRIFT",5000,1);
PlayerPlaySound(playerid, 1133, 257.6206, -41.5307, 1002.0234);
new name[MAX_PLAYERS];
new stringa[256];
GetPlayerName(playerid, name, sizeof(name));
format(stringa, sizeof(stringa), "* %s' foi para 'DRIFT3'.   ( /drift3 )", name);
SendClientMessageToAll(RosaEscuro,stringa);
}
else
{
SendClientMessage(playerid,0xFF0000AA,"** Para sair deste teleporte use [ /sair ]!");
}
return 1;
}
if(strcmp(cmdtext, "/drift4", true) == 0)
{
if(InDM1[playerid] == 0 && InDM2[playerid] == 0 && InDM3[playerid] == 0 && InDM4[playerid] == 0 && InDM5[playerid] == 0)
{
SetPlayerInterior(playerid,0);
SetPlayerPos(playerid,-774.8161,-96.9472,64.9970);
GameTextForPlayer(playerid,"~y~DRIFT",5000,1);
PlayerPlaySound(playerid, 1133, 257.6206, -41.5307, 1002.0234);
new name[MAX_PLAYERS];
new stringa[256];
GetPlayerName(playerid, name, sizeof(name));
format(stringa, sizeof(stringa), "* %s' foi para 'DRIFT4'.   ( /drift4 )", name);
SendClientMessageToAll(RosaEscuro,stringa);
}
else
{
SendClientMessage(playerid,0xFF0000AA,"** Para sair deste teleporte use [ /sair ]!");
}
return 1;
}
if(strcmp(cmdtext, "/motoserra", true) == 0)
{
if(InDM1[playerid] == 0 && InDM2[playerid] == 0 && InDM3[playerid] == 0 && InDM4[playerid] == 0 && InDM5[playerid] == 0)
{
SetPlayerInterior(playerid, 0);
SetPlayerPos(playerid,2059.0288,2390.3230,150.4766);
InDM3[playerid] = 1;
ResetPlayerWeapons(playerid);
GivePlayerWeapon(playerid, 9, 1);
new name[MAX_PLAYERS];
new stringa[256];
GetPlayerName(playerid, name, sizeof(name));
format(stringa, sizeof(stringa), "* %s' foi para 'MOTOSERRA'.   ( /motoserra )", name);
SendClientMessageToAll(Amarelo,stringa);
PlayerPlaySound(playerid, 1133, 257.6206, -41.5307, 1002.0234);
}
else
{
SendClientMessage(playerid,0xFF0000AA,"** Para sair deste teleporte use [ /sair ]!");
}
return 1;
}
if(!strcmp(cmdtext,"/m4",true ))
{
if(InDM1[playerid] == 0 && InDM2[playerid] == 0 && InDM3[playerid] == 0 && InDM4[playerid] == 0 && InDM5[playerid] == 0)
{
SetPlayerInterior(playerid, 0);
SetPlayerPos(playerid,-1398.5321,373.2007,30.0859);
InDM1[playerid] = 1;
new name[MAX_PLAYERS];
new stringa[256];
GetPlayerName(playerid, name, sizeof(name));
format(stringa, sizeof(stringa), "* %s' foi para 'M4'.   ( /M4 )", name);
SendClientMessageToAll(Amarelo,stringa);
ResetPlayerWeapons(playerid);
GivePlayerWeapon(playerid,31,800);
SetPlayerHealth(playerid,100);
}
else
{
SendClientMessage(playerid,0xFF0000AA,"** Para sair deste teleporte use [ /sair ]!");
}
return 1;
}
if(strcmp(cmdtext, "/pa", true) == 0)
{
if(InDM1[playerid] == 0 && InDM2[playerid] == 0 && InDM3[playerid] == 0 && InDM4[playerid] == 0 && InDM5[playerid] == 0)
{
SetPlayerInterior(playerid, 0);
SetPlayerPos(playerid,-322.5826,1943.6187,132.4128);
InDM2[playerid] = 1;
ResetPlayerWeapons(playerid);
GivePlayerWeapon(playerid, 6, 1);
new name[MAX_PLAYERS];
new stringa[256];
GetPlayerName(playerid, name, sizeof(name));
format(stringa, sizeof(stringa), "* %s' foi para 'PÁ'.   ( /pa )", name);
SendClientMessageToAll(Amarelo,stringa);
PlayerPlaySound(playerid, 1133, 257.6206, -41.5307, 1002.0234);
}
else
{
SendClientMessage(playerid,0xFF0000AA,"** Para sair deste teleporte use [ /sair ]!");
}
return 1;
}
if(strcmp(cmdtext, "/chamas", true) == 0)
{
if(InDM1[playerid] == 0 && InDM2[playerid] == 0 && InDM3[playerid] == 0 && InDM4[playerid] == 0 && InDM5[playerid] == 0)
{
SetPlayerInterior(playerid, 0);
SetPlayerPos(playerid, 2586.6782,2825.2563,27.8203);
InDM4[playerid] = 1;
ResetPlayerWeapons(playerid);
GivePlayerMoney(playerid,-5000);
new name[MAX_PLAYERS];
new stringa[256];
GetPlayerName(playerid, name, sizeof(name));
format(stringa, sizeof(stringa), "* %s' foi para 'CHAMAS'.   ( /chamas )", name);
SendClientMessageToAll(0x6495EDAA,stringa);
GivePlayerWeapon(playerid,37,588);
PlayerPlaySound(playerid, 1133, 257.6206, -41.5307, 1002.0234);
}
else
{
SendClientMessage(playerid,0xFF0000AA,"** Para sair deste teleporte use [ /sair ]!");
}
return 1;
}
if(strcmp(cmdtext, "/granada", true) == 0)
{
if(InDM1[playerid] == 0 && InDM2[playerid] == 0 && InDM3[playerid] == 0 && InDM4[playerid] == 0 && InDM5[playerid] == 0)
{
SetPlayerInterior(playerid, 0);
SetPlayerPos(playerid, -130.3902,85.4504,3.1172);
new name[MAX_PLAYERS];
new stringa[256];
GetPlayerName(playerid, name, sizeof(name));
format(stringa, sizeof(stringa), "* %s' foi para 'GRANADA'.   ( /granada )", name);
SendClientMessageToAll(0x6495EDAA,stringa);
InDM5[playerid] = 1;
GivePlayerMoney(playerid,-5000);
ResetPlayerWeapons(playerid);
GivePlayerWeapon(playerid,16,88);
PlayerPlaySound(playerid, 1133, 257.6206, -41.5307, 1002.0234);
}
else
{
SendClientMessage(playerid,0xFF0000AA,"** Para sair deste teleporte use [ /sair ]!");
}
return 1;
}
																		 //MUSICAS
if(strcmp(cmd,"/musica1",true) == 0)
{
PlayerPlaySound(playerid,1062,0,0,0);
PlayerPlaySound(playerid,1063,0,0,0);
PlayerPlaySound(playerid,1069,0,0,0);
PlayerPlaySound(playerid,1068,0,0,0);
PlayerPlaySound(playerid,1076,0,0,0);
PlayerPlaySound(playerid,1077,0,0,0);
PlayerPlaySound(playerid,1062,0.0,0.0,0.0);
return 1;
}
if(strcmp(cmd,"/musica2",true) == 0)
{
PlayerPlaySound(playerid,1062,0,0,0);
PlayerPlaySound(playerid,1063,0,0,0);
PlayerPlaySound(playerid,1069,0,0,0);
PlayerPlaySound(playerid,1068,0,0,0);
PlayerPlaySound(playerid,1076,0,0,0);
PlayerPlaySound(playerid,1077,0,0,0);
PlayerPlaySound(playerid,1063,0.0,0.0,0.0);
return 1;
}
if(strcmp(cmd,"/musica3",true) == 0)
{
PlayerPlaySound(playerid,1062,0,0,0);
PlayerPlaySound(playerid,1063,0,0,0);
PlayerPlaySound(playerid,1069,0,0,0);
PlayerPlaySound(playerid,1068,0,0,0);
PlayerPlaySound(playerid,1076,0,0,0);
PlayerPlaySound(playerid,1077,0,0,0);
PlayerPlaySound(playerid,1068,0.0,0.0,0.0);
return 1;
}
if(strcmp(cmd,"/musica4",true) == 0)
{
PlayerPlaySound(playerid,1062,0,0,0);
PlayerPlaySound(playerid,1063,0,0,0);
PlayerPlaySound(playerid,1069,0,0,0);
PlayerPlaySound(playerid,1068,0,0,0);
PlayerPlaySound(playerid,1076,0,0,0);
PlayerPlaySound(playerid,1077,0,0,0);
PlayerPlaySound(playerid,1069,0.0,0.0,0.0);
return 1;
}
if(strcmp(cmd,"/musica5",true) == 0)
{
PlayerPlaySound(playerid,1062,0,0,0);
PlayerPlaySound(playerid,1063,0,0,0);
PlayerPlaySound(playerid,1069,0,0,0);
PlayerPlaySound(playerid,1068,0,0,0);
PlayerPlaySound(playerid,1076,0,0,0);
PlayerPlaySound(playerid,1077,0,0,0);
PlayerPlaySound(playerid,1076,0.0,0.0,0.0);
return 1;
}
if(strcmp(cmd,"/musica6",true) == 0)
{
PlayerPlaySound(playerid,1062,0,0,0);
PlayerPlaySound(playerid,1063,0,0,0);
PlayerPlaySound(playerid,1069,0,0,0);
PlayerPlaySound(playerid,1068,0,0,0);
PlayerPlaySound(playerid,1076,0,0,0);
PlayerPlaySound(playerid,1077,0,0,0);
PlayerPlaySound(playerid,1077,0.0,0.0,0.0);
return 1;
}
																	  //COMANDOS
if(strcmp(cmd,"/bug",true,4)==0)
{
if(!strlen(cmd))
{
SendClientMessage(playerid, Vermelho, "[ERRO] /bug [detalhes]");
return 0;
}
new bug[256];
new name[30];
GetPlayerName(playerid,name,30);
strmid(bug,cmdtext,5,strlen(cmdtext));
format(string,256,"Bug Report - Autor: %s - Detalhes: %s",name,bug);
SendClientMessage(playerid,Vermelho,"Seu relatório de erro disse:");
SendClientMessage(playerid,Tomato,string);
SendClientMessage(playerid,Limao,"VLW,Por ta colaborando com o Server,o Bug sera arrumado logo logo.");
printf("%s",string);
new File:bugs;
bugs = fopen("bugs.txt",io_append);
format(string,256,"%s\r\n",string);
fwrite(bugs,string);
fclose(bugs);
return 1;
}
if(strcmp(cmd, "/meuskin", true, 11)==0)
{
cmd = strtok(cmdtext, idx);
if(!strlen(cmd))
{
SendClientMessage(playerid, Vermelho, "[ERRO] /meuskin [skin id]");
return 1;
}
new param2=strval(cmd);
if(param2<7)
{
SendClientMessage(playerid, Vermelho, "[ERRO] Selecione um skin de 7 a 299");
return 1;
}
if(param2==8||param2==42||param2==65||param2==74||param2==86||param2==208||param2==289) //||74||86||208||289)
{
return 1;
}
if(param2>264 && param2<274)
{
return 1;
}
if(param2>299)
{
SendClientMessage(playerid, Vermelho, "[ERRO] Selecione um skin de 7 a 299");
return 1;
}
SetPlayerSkin(playerid, param2);
return 1;
}
if(strcmp(cmd, "/status", true) == 0)
{
new tmp[256];
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, Branco, "USE: /status [ID]");
return 1;
}
giveplayerid = strval(tmp);
if(IsPlayerConnected(giveplayerid))
{
GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
format(string, sizeof(string), "Status de '%s':", giveplayer);
SendClientMessage(playerid, COLOR_GREEN_MC, string);
format(string, sizeof(string), "Matou: %d", status[giveplayerid][0]);
SendClientMessage(playerid, Branco, string);
format(string, sizeof(string), "Morreu: %d", status[giveplayerid][1]);
SendClientMessage(playerid, Branco, string);
format(string, sizeof(string), "Suicidou-se: %d", status[giveplayerid][2]);
SendClientMessage(playerid, Branco, string);
}
else
{
SendClientMessage(playerid, Vermelho, "[ERRO] Esse player não está Online!");
}
return 1;
}

if(strcmp(cmd,"/gps",true) == 0)
{
new tmp[256];
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, Branco, "USE: /gps [ID]");
return 1;
}
giveplayerid = strval(tmp);
if(IsPlayerConnected(giveplayerid))
{
new Float:distance = GetDistanceBetweenPlayers(playerid,giveplayerid );
new Interior = GetPlayerInterior(giveplayerid);
new name[MAX_PLAYER_NAME];
//new string[256];
new player[256];
new Text:gGPS;
GetPlayerName(playerid,player,sizeof(player));
format(string, sizeof(string), "~b~ Nome: ~y~ %s ~n~ ~b~Interior ID: ~y~%d ~n~ ~b~Distancia: ~y~%0.0f", name,Interior,distance);
TextDrawCreate(10.0, 335, string);
TextDrawFont(gGPS,1); //Fonte do texto
TextDrawShowForPlayer(playerid, gGPS);
//TextDrawSetString(playerid,gGPS);
}
else
{
SendClientMessage(playerid,Vermelho,"[ERRO] >> Player não esta conectado!");
}
return 1;
}
													      //COMANDOS DE VEICULOS
if(strcmp(cmdtext, "/veiculos") == 0)
{
carros = CreateMenu("Veiculos",2,200,100,150,100);
if(IsValidMenu(carros))
{
AddMenuItem(carros, 0, "cheetah");
AddMenuItem(carros, 0, "Jetpack");
AddMenuItem(carros, 0, "Turismo");
AddMenuItem(carros, 0, "NRG-500");
AddMenuItem(carros, 0, "Kart");
AddMenuItem(carros, 0, "Infernus");
AddMenuItem(carros, 0, "Hotring Racer");
AddMenuItem(carros, 0, "Mesa");
AddMenuItem(carros, 0, "Landstalker");
AddMenuItem(carros, 0, "Faggio");
TogglePlayerControllable(playerid, 0);
ShowMenuForPlayer(carros, playerid);
}
else
{
SendClientMessage(playerid,Vermelho,"~ Este comando não pode ser usado dentro de um veiculo");
}
return 1;
}
if(strcmp(cmdtext,"/nitro",true)==0)
{
if(IsPlayerInInvalidNosVehicle(playerid,GetPlayerVehicleID(playerid)))
{
SendClientMessage(playerid,Vermelho,"Você não pode adicionar nitro neste veiculo.");
return 1;
}
if(IsPlayerInAnyVehicle(playerid))
{
if(GetPlayerState(playerid) == 2)
{
new vid = GetPlayerVehicleID(playerid);
AddVehicleComponent(vid, 1010);
SendClientMessage(playerid,AVISO,"Nitro Adicionado com Sucesso!.");
return 1;
}
else
{
SendClientMessage(playerid,Vermelho,"Você precisa ser o motorista para adicionar nitro.");
return 1;
}
}
else
{
SendClientMessage(playerid,Vermelho,"Você precisa estar em um veiculo para Adicionar Nitro.");
return 1;
}
}
new vehicleid = GetPlayerVehicleID(playerid);
if (strcmp(cmdtext, "/trancar", true) == 0) {
if(IsPlayerInAnyVehicle(playerid)){
if(GetPlayerMoney(playerid) < 1000){
SendClientMessage(playerid, Vermelho, "[ERRO] Você precisa de ($1000) para trancar esse veículo!");
return 1;
}
new Stat5;
Stat5=GetPlayerState(playerid);
if(Stat5!=PLAYER_STATE_DRIVER) {
SendClientMessage(playerid,Vermelho,"[ERRO] Você não pode trancar esse veículo!");
return 1;
}
new i;
for(i=0;i<MAX_PLAYERS;i++){
if(i != playerid){
SetVehicleParamsForPlayer(vehicleid,i, 0, 1);
}
}
SendClientMessage(playerid, Cinza, "VEÍCULO TRANCADO.");
}
else
{
SendClientMessage(playerid, Vermelho, "[ERRO] Você não está em um veículo!");
}
return 1;
}
if(strcmp("/godcar", cmdtext, true, 10) == 0)
{
if (IsPlayerInAnyVehicle(playerid))
{
SetVehicleHealth(GetPlayerVehicleID(playerid),999999);
SendClientMessage(playerid,AVISO, "Seu Carro agora esta em GOD-MOD!");
}
else
{
SendClientMessage(playerid,Vermelho,"Erro: Você não está em um veículo!");
}
return 1;
}

if (strcmp(cmdtext, "/destrancar", true)==0)
 {
if(IsPlayerInAnyVehicle(playerid))
{
new Stat6;
Stat6 = GetPlayerState(playerid);
if(Stat6!=PLAYER_STATE_DRIVER){
SendClientMessage(playerid,Vermelho,"[ERRO] Você não pode destrancar esse veículo!");
return 1;}
new i;
for(i=0;i<MAX_PLAYERS;i++)
{
SetVehicleParamsForPlayer(vehicleid,i, 0, 0);
}
SendClientMessage(playerid,AVISO, "VEÍCULO DESTRANCADO.");
}
else
{
SendClientMessage(playerid,Vermelho,"[ERRO] Você não está em um veículo!");
}
return 1;
}
if(strcmp(cmdtext,"/flip", true) == 0)
{
if(!IsPlayerInAnyVehicle(playerid))
{
SendClientMessage(playerid,Vermelho,"[ERRO] Você não está em um veículo.");
return 1;
}
new VehicleID, Float:X, Float:Y, Float:Z;
GetPlayerPos(playerid, X, Y, Z);
VehicleID = GetPlayerVehicleID(playerid);
SetVehiclePos(VehicleID, X, Y, Z);
SetVehicleZAngle(VehicleID, 0);
return 1;
}
if(strcmp(cmdtext, "/reparar", true) == 0)
{
if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,Vermelho,"<ERRO> Voce não está em um veiculo.");
SetVehicleHealth(GetPlayerVehicleID(playerid),2000.0);
GivePlayerMoney(playerid,-1000);
GameTextForPlayer(playerid,"~w~Reparado",5000,6);
return 1;
}
if(strcmp(cmd, "/pintar", true) == 0)
{
new tmp[256];
new cor1, cor2;
new veiculo;
tmp = strtok(cmdtext, idx);
cor1 = strval(tmp);
tmp = strtok(cmdtext, idx);
if(!strlen(tmp)) {
SendClientMessage(playerid, Vermelho,"USE: /pintar [cor 1] [cor 2]");
return 1;}
cor2 = strval(tmp);
veiculo = GetPlayerVehicleID(playerid);
if(IsPlayerInVehicle(playerid,veiculo)){
ChangeVehicleColor(veiculo,cor1,cor2);
SendClientMessage(playerid,0x00FF7FAA, "[INFO] Veículo repintado com sucesso!");
return 1;}
}
if(strcmp(cmdtext,"/paraquedas", true) == 0)
{
GivePlayerWeapon(playerid, 46, 1);
SendClientMessage(playerid,Amarelo,"Para-Quedas comprado!");
PlayerPlaySound(playerid, 1133, 257.6206, -41.5307, 1002.0234);
return 1;
}
if(strcmp("/mulhersexo", cmdtext, true, 10) ==0){ApplyAnimation(playerid,"benchpress","gym_bp_up_B",4.1,0,1,1,1,1); return 1;}
if(strcmp("/comermulher", cmdtext, true, 10) ==0){ApplyAnimation(playerid,"MD_END","END_SC1_SMO",4.1,0,1,1,1,1); return 1;}
if(strcmp("/de4", cmdtext, true, 10) ==0){ApplyAnimation(playerid,"FINALE","FIN_Land_Car",4.1,0,1,1,1,1); return 1;}
if(strcmp("/mulherfudida", cmdtext, true, 10) ==0){ApplyAnimation(playerid,"FINALE","FIN_Land_Die",4.1,0,1,1,1,1); return 1;}
if(strcmp("/punheta", cmdtext, true) == 0){ApplyAnimation(playerid,"PAULNMAC", "wank_in", 3.0, 0, 0, 0, 0, 0);return 1;}
return SendClientMessage(playerid, COLOR_WHITE,"SERVER: Comando Inexistente!");
}
//*******************************[ OnPlayerText ]*******************************
public OnPlayerText(playerid, text[])
{
new string[256];
format(string,sizeof(string),"[%d]: %s",playerid,text);
SendPlayerMessageToAll(playerid,string);
return 0;
}
//*******************************[ OnPlayerSpawn ]******************************
public OnPlayerSpawn(playerid)
{
GivePlayerWeapon(playerid, 9, 1);
PlayerObjectUpdate(playerid);
SetPlayerInterior(playerid,0);
TogglePlayerClock(playerid,1);
SetPlayerPos(playerid,-362.3677,1854.5674,42.3548);
SetPlayerColor(playerid,CORES[playerid]);
return 1;
}
//*******************************[ OnPlayerDeath ]******************************
public OnPlayerDeath(playerid, killerid, reason)
{

DropPlayerWeapons(playerid);
SendDeathMessage(killerid,playerid,reason);

if(killerid == INVALID_PLAYER_ID)
{
status[playerid][2] += 1;
}
else
{
if(status[killerid][0] > 0)
{
status[killerid][0] -= 1;
}
status[killerid][0] += 1;
status[playerid][1] += 1;
}
InDM1[playerid] = 0;
InDM2[playerid] = 0;
InDM3[playerid] = 0;
InDM4[playerid] = 0;
InDM5[playerid] = 0;
new string[256];
if(!status[killerid][0])
{
}
else
{
if(status[killerid][0] == 5)
{
format(string, sizeof(string), "[AVISO] Cuidado aê com o '%s' ja matou 5 pessoas!", PlayerName(killerid));
SendClientMessageToAll(Vermelho, string);
}
else if(status[killerid][0] == 10)
{
format(string, sizeof(string), "[AVISO]  Tamo avisando o tal do '%s' e perigoso ja completo 10 assasinatos!", PlayerName(killerid));
SendClientMessageToAll(Vermelho, string);
}
else if(status[killerid][0] == 20)
{
format(string, sizeof(string), "[AVISO]  Geral vamo ter que mata o '%s' antes que ele mate a gente ...ja matou 20!", PlayerName(killerid));
SendClientMessageToAll(Vermelho, string);
}
else if(status[killerid][0] == 25)
{
format(string, sizeof(string), "[AVISO]  Galera o '%s' ja matou 25...nem os GAMBÊ pega ele!", PlayerName(killerid));
SendClientMessageToAll(Vermelho, string);
}
else if(status[killerid][0] == 30)
{
format(string, sizeof(string), "[SOCORRO]  Por favor, matem o '%s' ele me ameacou de morte ja....ja matou 30!", PlayerName(killerid));
SendClientMessageToAll(Vermelho, string);
}
else if(status[killerid][0] == 35)
{
format(string, sizeof(string), "[PLANTÂO]  Boa noite, o traficante '%s' e uma maquina mortal, ja matou 35 coitados!", PlayerName(killerid));
SendClientMessageToAll(Vermelho, string);
}
else if(status[killerid][0] == 60)
{
format(string, sizeof(string), "[TALVEZ]  Aê vamo fazer uma vaquina para comprar arma e matar o(a) '%s', ele e lendario ja matou 60!", PlayerName(killerid));
SendClientMessageToAll(Vermelho, string);
}
else if(status[killerid][0] == 70)
{
format(string, sizeof(string), "[SUGESTÂO]  '%s', pô cara vira essa arma para la, por favor!", PlayerName(killerid));
SendClientMessageToAll(Vermelho, string);
}
else if(status[killerid][0] == 80)
{
format(string, sizeof(string), "[NOTICIARIO] '%s' já matou 80 pessoas!", PlayerName(killerid));
SendClientMessageToAll(Vermelho, string);
}
else if(status[killerid][0] == 90)
{
format(string, sizeof(string), "[AVISO] Não da mais, o(a) '%s' já matou 90 pessoas!", PlayerName(killerid));
SendClientMessageToAll(Vermelho, string);
}
else if(status[killerid][0] == 100)
{
format(string, sizeof(string), "[INFO]  '%s' já matou 100 pessoas!", PlayerName(killerid));
SendClientMessageToAll(Vermelho, string);
}
}
// MORREU
if(!status[playerid][1])
{
}
else
{
if(status[playerid][1] == 5)
{
format(string, sizeof(string), "[AÊ]  O(a) bambi do(a) '%s, esta querendo entrar para o BOFE de ELITE!", PlayerName(playerid));
SendClientMessageToAll(0xFF66FFAA, string);
}
else if(status[playerid][1] == 10)
{
format(string, sizeof(string), "[FOFOCAS]  '%s', os BOFE de ELITE não o(a) aceitaram....e mó noob!", PlayerName(playerid));
SendClientMessageToAll(0xFF66FFAA, string);
}
else if(status[playerid][1] == 20)
{
format(string, sizeof(string), "[INFO]  Acho que '%s' não sabe usar uma arma, já morreu 20 vezes!", PlayerName(playerid));
SendClientMessageToAll(0xFF66FFAA, string);
}
else if(status[playerid][1] == 25)
{
format(string, sizeof(string), "[INFO]  '%s' você veio aqui para jogar ou para tomar coro de outros jogadores? Pô, você morreu 25 vezes!", PlayerName(playerid));
SendClientMessageToAll(0xFF66FFAA, string);
}
else if(status[playerid][1] == 40)
{
format(string, sizeof(string), "[INFO]  '%s' já morreu 40 vezes... Muito sinistro!", PlayerName(playerid));
SendClientMessageToAll(0xFF66FFAA, string);
}
else if(status[playerid][1] == 50)
{
format(string, sizeof(string), "[INFO]  '%s' já morreu 50 vezes!", PlayerName(playerid));
SendClientMessageToAll(0xFF66FFAA, string);
}
else if(status[playerid][1] == 60)
{
format(string, sizeof(string), "[INFO]  '%s' já morreu 60 vezes!", PlayerName(playerid));
SendClientMessageToAll(0xFF66FFAA, string);
}
else if(status[playerid][1] == 70)
{
format(string, sizeof(string), "[INFO]  '%s' já morreu 70 vezes!", PlayerName(playerid));
SendClientMessageToAll(0xFF66FFAA, string);
}
else if(status[playerid][1] == 80)
{
format(string, sizeof(string), "[INFO]  '%s' já morreu 80 vezes!", PlayerName(playerid));
SendClientMessageToAll(0xFF66FFAA, string);
}
else if(status[playerid][1] == 90)
{
format(string, sizeof(string), "[INFO]  '%s' já morreu 90 vezes!", PlayerName(playerid));
SendClientMessageToAll(0xFF66FFAA, string);
}
else if(status[playerid][1] == 100)
{
format(string, sizeof(string), "[INFO]  '%s' já morreu 100 vezes!", PlayerName(playerid));
SendClientMessageToAll(0xFF66FFAA, string);
}
}
return 1;
}
//************************[ OnPlayerRequestClass ]******************************
public OnPlayerRequestClass(playerid, classid)
{
if(classid == 0 || classid == 1 || classid == 2 || classid == 3 || classid == 4 || classid == 5 || classid == 6)
{
iSpawnSet[playerid] = 1;
}
else
{
iSpawnSet[playerid] = 0;
}
SetupPlayerForClassSelection(playerid);
PlayerPlaySound(playerid,1057 ,0, 0, 0);
return 1;
}
//*********************[ OnPlayerRequestSpawn ]*********************************
public OnPlayerRequestSpawn(playerid)
{
PlayerPlaySound(playerid,1057 ,0, 0, 0);
SetPlayerWeather(playerid,10);
SetPlayerTime(playerid,12,0);
return 1;
}
//*********************[ SetupPlayerForClassSelection ]*************************
public SetupPlayerForClassSelection(playerid)
{
SetPlayerInterior(playerid,0);
SetPlayerPos(playerid,-332.0254,1850.5380,42.5078);
SetPlayerFacingAngle(playerid, 90.0);
SetPlayerCameraPos(playerid,-336.2010,1844.4685,42.2891);
SetPlayerCameraLookAt(playerid,-332.0254,1850.5380,42.5078);
ApplyAnimation(playerid,"DANCING","DNCE_M_B",4.0,1,0,0,0,-1);
}
//*******************************[ Anuncios ]***********************************
public Anuncio1(playerid)
{
SendClientMessage(playerid,Verde,"Para reportar algum cheat/xiter use: /report [id] [razão].");
return 1;
}
public Anuncio2(playerid)
{
SendClientMessage(playerid,Violeta,"Visite o ArenaPower: 201.48.64.227:7778.");
return 1;
}
public Anuncio3(playerid)
{
SendClientMessage(playerid,Verde2,"Para ver a lista de Comandos use: /comandos ou /cmds.");
return 1;
}
//******************************[ Contagem ]******/*****************************
public Contagem()
{
if(Contar > 0)
{
GameTextForAll( ContarTexto[Contar-1], 999, 5);
Contar--;
SetTimer("Contagem", 1000, 0);
}
else
{
GameTextForAll("~g~Vai! Vai! Vai!", 999, 5);
Contar = 5;
}
}
//******************************[ OnPlayerStateChange ]*************************
public OnPlayerStateChange(playerid, newstate, oldstate)
{
new str[256];
new oldnew;
if (newstate == 2 || newstate == 3)
{
if (oldnew == 0)
{
format(str, sizeof(str), "~g~%s",Veiculos[GetVehicleModel(GetPlayerVehicleID(playerid))-400]);
GameTextForPlayer(playerid, str, 2000, 1);
}
}
return 1;
}
//******************************[ Timer ]***************************************
public Timer()
{
for(new i = 0; i < MAX_PLAYERS; i++)
if(IsPlayerConnected(i))
PlayerObjectUpdate(i);
}
//******************************[ OnPlayerPrivmsg ]*****************************
public OnPlayerPrivmsg(playerid, recieverid, text[])
{
new string[256];
new Playername[MAX_PLAYER_NAME];
new RecName[MAX_PLAYER_NAME];
GetPlayerName(recieverid, RecName, sizeof(RecName));
GetPlayerName(playerid, Playername, sizeof(Playername));
format(string, sizeof (string),"**PM [%s] PARA [%s]: %s",Playername,RecName,text);
for(new i = 0; i < MAX_PLAYERS; i++)
if(IsPlayerConnected (i) && IsPlayerAdmin (i) && i != playerid && i != recieverid)
SendClientMessage(i,0x7E60FFAA,string);
if(recieverid != playerid)
{
GetPlayerName(playerid, Playername, sizeof(Playername));
GetPlayerName(recieverid, RecName, sizeof(RecName));
PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
PlayerPlaySound(recieverid,1057,0.0,0.0,0.0);
format(string, sizeof(string), "[PM] Recebida de %s(%i): %s", Playername, playerid, text);
SendClientMessage(recieverid,Branco, string);
format(string, sizeof(string), "[PM] Enviada para %s(%i): %s", RecName, recieverid, text);
SendClientMessage(playerid,Branco, string);
}
else
{
format(string, sizeof(string), "[ERRO] Esse player não esta Online!", recieverid);
SendClientMessage(playerid, Vermelho, string);
}
return 0;
}
//******************************[ PingProtection ]******************************
public PingProtection()
{
new string[64];
for(new x=0; x<MAX_PLAYERS; x++)
{
if(GetPlayerPing(x) > PING_MAX_PING)
{
if(gPingCount[x][0] == 0) { gPingCount[x][1] = TimeStamp();
}
gPingCount[x][0]++;
if(TimeStamp() - gPingCount[x][1] > PING_TIMELIMIT)
{
gPingCount[x][1] = TimeStamp();
gPingCount[x][0] = 1;
}
else if(gPingCount[x][0] == PING_MAX_EXCEEDS) {
format(string,sizeof(string),">> '%s'  Kickado(a)!  (Ping Superior a %d).",GetName(x), PING_MAX_PING);
SendClientMessageToAll(0x0066CCAA,string);
Kick(x);
}
}
}
return 1;
}
//******************************[ DropPlayerWeapons ]***************************
public DropPlayerWeapons(playerid)
{
new playerweapons[13][2];
new Float:x,Float:y,Float:z;
GetPlayerPos(playerid, x, y, z);
for(new i=0;i<13;i++){
GetPlayerWeaponData(playerid, i, playerweapons[i][0], playerweapons[i][1]);
new model=GetWeaponModel(playerweapons[i][0]);
new times=floatround(playerweapons[i][1]/10.0001);
new string[256];
format(string, sizeof(string), "%d", times);
times=strval(string);
new Float:X=x+(random(3)-random(3));
new Float:Y=y+(random(3)-random(3));
if(playerweapons[i][1]!=0)
{
if(times>DropLimit) times=DropLimit;
for(new a=0;a<times;a++)
{
if(model!=-1)
{
new pickupid=CreatePickup(model, 3, X, Y, z);
SetTimerEx("DeletePickup", DeleteTime*1000, false, "d", pickupid);
}
}
}
}
return 1;
}
//******************************[ DeletePickup ]********************************
public DeletePickup(pickupid)
{
DestroyPickup(pickupid);
return 1;
}
//******************************[ GetWeaponModel ]******************************
public GetWeaponModel(weaponid)
{
new model;
switch(weaponid)
{
case 1: model=331; case 2: model=333; case 3: model=334;
case 4: model=335; case 5: model=336; case 6: model=337;
case 7: model=338; case 8: model=339; case 9: model=341;
case 10: model=321; case 11: model=322; case 12: model=323;
case 13: model=324; case 14: model=325; case 15: model=326;
case 16: model=342; case 17: model=343; case 18: model=344;
case 22: model=346; case 23: model=347; case 24: model=348;
case 25: model=349; case 26: model=350; case 27: model=351;
case 28: model=352; case 29: model=353; case 30: model=355;
case 31: model=356; case 32: model=372; case 33: model=357;
case 34: model=358; case 35: model=359; case 36: model=360;
case 37: model=361; case 38: model=362; case 39: model=363;
case 41: model=365; case 42: model=366; case 46: model=371;
}
if(model<300) return -1;
return model;
}

//******************************[ Objetos ]*************************************
PlayerObjectUpdate(playerid)
{
new Float:pos[3];
GetPlayerPos(playerid,pos[0],pos[1],pos[2]);
for(new i = 0; i < sizeof(Objects); i++)
{
if(!Player[playerid][view][i])
{
if(IsInReach(pos[0],pos[1],pos[2],Objects[i][ox],Objects[i][oy],Objects[i][oz],Objects[i][viewdist]))
{
Player[playerid][view][i] = true;
Player[playerid][objid][i] = CreatePlayerObject(playerid,Objects[i][modelid],Objects[i][ox],Objects[i][oy],Objects[i][oz],Objects[i][orx],Objects[i][ory],Objects[i][orz]);
}
}
else if(!IsInReach(pos[0],pos[1],pos[2],Objects[i][ox],Objects[i][oy],Objects[i][oz],Objects[i][viewdist]))
{
Player[playerid][view][i] = false;
DestroyPlayerObject(playerid,Player[playerid][objid][i]);
}
}
}
//******************************[  SetPlayerPosWithObjects ]********************
public SetPlayerPosWithObjects(playerid,Float:x,Float:y,Float:z)
{
for(new i = 0; i < sizeof(Objects); i++)
{
if(!Player[playerid][view][i])
{
if(IsInReach(x,y,z,Objects[i][ox],Objects[i][oy],Objects[i][oz],Objects[i][viewdist]))
{
Player[playerid][view][i] = true;
Player[playerid][objid][i] = CreatePlayerObject(playerid,Objects[i][modelid],Objects[i][ox],Objects[i][oy],Objects[i][oz],Objects[i][orx],Objects[i][ory],Objects[i][orz]);
}
}
else if(!IsInReach(x,y,z,Objects[i][ox],Objects[i][oy],Objects[i][oz],Objects[i][viewdist]))
{
Player[playerid][view][i] = false;
DestroyPlayerObject(playerid,Player[playerid][objid][i]);
}
}
SetPlayerPos(playerid,Float:x,Float:y,Float:z);
}
//******************************[  OnPlayerSelectedMenuRow ]********************
public OnPlayerSelectedMenuRow(playerid, row)
{

new Menu:Current = GetPlayerMenu(playerid);
if (Current == carros)
{
switch(row)
{
case 0:
{
TogglePlayerControllable(playerid,1);
new Float:X,Float:Y,Float:Z,Float:Angle, carid;
GetPlayerPos(playerid,X,Y,Z);
GetPlayerFacingAngle(playerid,Angle);
GetPlayerVehicleID(playerid);
CreateVehicle(415,X,Y,Z,Angle,-1,-1,0);
ChangeVehiclePaintjob(carid,1);
}
case 1:
{
TogglePlayerControllable(playerid,1);
new Float:x, Float:y, Float:z;
GetPlayerPos(playerid, x, y, z);
CreatePickup(370, 15, x, y, z);
}
case 2:
{
TogglePlayerControllable(playerid,1);
new Float:X,Float:Y,Float:Z,Float:Angle, carid;
GetPlayerPos(playerid,X,Y,Z);
GetPlayerFacingAngle(playerid,Angle);
carid = GetPlayerVehicleID(playerid);
carid = CreateVehicle(451,X,Y,Z,Angle,-1,-1,0);
ChangeVehiclePaintjob(carid,1);
}
case 3:
{
TogglePlayerControllable(playerid,1);
new Float:X,Float:Y,Float:Z,Float:Angle, carid;
GetPlayerPos(playerid,X,Y,Z);
GetPlayerFacingAngle(playerid,Angle);
carid = GetPlayerVehicleID(playerid);
carid = CreateVehicle(522,X,Y,Z,Angle,-1,-1,0);
ChangeVehiclePaintjob(carid,1);
}
case 4:
{
TogglePlayerControllable(playerid,1);
new Float:X,Float:Y,Float:Z,Float:Angle, carid;
GetPlayerPos(playerid,X,Y,Z);
GetPlayerFacingAngle(playerid,Angle);
carid = GetPlayerVehicleID(playerid);
carid = CreateVehicle(571,X,Y,Z,Angle,-1,-1,0);
ChangeVehiclePaintjob(carid,1);
}
case 5:
{
TogglePlayerControllable(playerid,1);
new Float:X,Float:Y,Float:Z,Float:Angle, carid;
GetPlayerPos(playerid,X,Y,Z);
GetPlayerFacingAngle(playerid,Angle);
carid = GetPlayerVehicleID(playerid);
carid = CreateVehicle(411,X,Y,Z,Angle,-1,-1,0);
ChangeVehiclePaintjob(carid,1);
}
case 6:
{
TogglePlayerControllable(playerid,1);
new Float:X,Float:Y,Float:Z,Float:Angle, carid;
GetPlayerPos(playerid,X,Y,Z);
GetPlayerFacingAngle(playerid,Angle);
carid = GetPlayerVehicleID(playerid);
carid = CreateVehicle(502,X,Y,Z,Angle,-1,-1,0);
ChangeVehiclePaintjob(carid,1);
}
case 7:
{
TogglePlayerControllable(playerid,1);
new Float:X,Float:Y,Float:Z,Float:Angle, carid;
GetPlayerPos(playerid,X,Y,Z);
GetPlayerFacingAngle(playerid,Angle);
carid = GetPlayerVehicleID(playerid);
carid = CreateVehicle(500,X,Y,Z,Angle,-1,-1,0);
ChangeVehiclePaintjob(carid,1);
}
case 8:
{
TogglePlayerControllable(playerid,1);
new Float:X,Float:Y,Float:Z,Float:Angle, carid;
GetPlayerPos(playerid,X,Y,Z);
GetPlayerFacingAngle(playerid,Angle);
carid = GetPlayerVehicleID(playerid);
carid = CreateVehicle(400,X,Y,Z,Angle,-1,-1,0);
ChangeVehiclePaintjob(carid,1);
}
case 9:
{
TogglePlayerControllable(playerid,1);
new Float:X,Float:Y,Float:Z,Float:Angle, carid;
GetPlayerPos(playerid,X,Y,Z);
GetPlayerFacingAngle(playerid,Angle);
carid = GetPlayerVehicleID(playerid);
carid = CreateVehicle(448,X,Y,Z,Angle,-1,-1,0);
ChangeVehiclePaintjob(carid,1);
}
}
}
return 1;
}
//******************************[ OnPlayerExitedMenu ]**************************
public OnPlayerExitedMenu(playerid)
{
new Menu:Current = GetPlayerMenu(playerid);
if( Current == carros){
TogglePlayerControllable(playerid,1);
}
return 1;
}
//******************************[ OnPlayerEnterVehicle ]************************
public OnPlayerEnterVehicle (playerid, vehicleid)
{

return 1;
}
//******************************[ OnPlayerExitVehicle ]*************************
public OnPlayerExitVehicle(playerid, vehicleid)
{

	return 1;
}
//******************************[ StrTocks ]************************************
strtok(const string[], &index)
{
new length = strlen(string);
while ((index < length) && (string[index] <= ' '))
{
index++;
}
new offset = index;
new result[20];
while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
{
result[index - offset] = string[index];
index++;
}
result[index - offset] = EOS;
return result;
}
stock TimeStamp()
{
new time = GetTickCount() / 1000;
return time;
}
stock GetName(playerid)
{
new name[MAX_PLAYER_NAME];
GetPlayerName(playerid,name,sizeof(name));
return name;
}
IsPlayerInInvalidNosVehicle(playerid,vehicleid)
{
#define MAX_INVALID_NOS_VEHICLES 38
new InvalidNosVehicles[MAX_INVALID_NOS_VEHICLES] =
{
581,523,462,521,463,522,461,448,468,586,
509,481,510,472,473,493,595,484,430,453,
452,446,454,590,569,537,538,570,449,513,
520,519,487,417,406,556,444,557
};
vehicleid = GetPlayerVehicleID(playerid);
if(IsPlayerInVehicle(playerid,vehicleid))
{
for(new i = 0; i < MAX_INVALID_NOS_VEHICLES; i++)
{
if(GetVehicleModel(vehicleid) == InvalidNosVehicles[i])
{
return true;
}
}
}
return false;
}
stock PlayerName(playerid)
{
new name[MAX_PLAYER_NAME];
GetPlayerName(playerid, name, sizeof(name));
return name;
}
stock Float:GetDistanceBetweenPlayers(playerid,giveplayerid)
{
new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
if (!IsPlayerConnected(playerid) || !IsPlayerConnected(giveplayerid))
{
return -1.00;
}
GetPlayerPos(playerid,x1,y1,z1);
GetPlayerPos(giveplayerid,x2,y2,z2);
return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}
